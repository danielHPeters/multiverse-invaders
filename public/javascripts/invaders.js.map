{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/interfaces/ICollideAble.ts","webpack:///./src/lib/client/InputManager.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/client/AssetManager.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/application/GameLoop.ts","webpack:///./src/lib/audio/Sound.ts","webpack:///./src/lib/client/AudioManager.ts","webpack:///./src/lib/client/SettingsMenu.ts","webpack:///./src/lib/client/Settings.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/models/Enemy.ts","webpack:///./src/models/Bullet.ts","webpack:///./src/models/Pool.ts","webpack:///./src/models/Ship.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/models/Background.ts","webpack:///./src/application/SpaceGame.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/graphics/2D/SpriteSheet.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EntityType","Observable_1","Actions","default","[object Object]","settings","super","this","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","evt","preventDefault","touchstartX","pageX","touchstartY","pageY","thisInstance","reset","changedTouches","toucheMoveX","touchMoveY","length","Vector2","x","y","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","AssetId","SpriteSheet_1","Ajax_1","AssetType","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudio","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","ambient","AUDIO_AMB","createSound","element","events","listener","Vector2_1","ICollideAble_1","width","height","position","colliding","collidesWith","BOX","PLAYER","other","includes","toString","game","lastTime","running","frameId","requestAnimationFrame","time","loop","cancelAnimationFrame","stop","paused","diff","update","render","audioContext","masterGain","gainNode","createGain","gain","connect","playing","source","createBufferSource","Sound_1","initAudioContext","AudioContext","webkitAudioContext","effectsGain","ambientGain","destination","e","console","log","data","decodeAudioData","then","error","InputManager_1","EventHandler_1","assetManager","showing","mainMenu","createElement","classList","add","appendChild","tabId","tabContent","tabLink","getElementsByClassName","style","display","className","replace","currentTarget","keyboardLink","keyboardDiv","title","form","submit","registerOnElement","openTab","createTextNode","setAttribute","keys","setting","addEntry","setKey","UP","DOWN","LEFT","RIGHT","SHOOT","RESTART","clear","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","player","addPlayerSettingEntry","acceleration","Number","maxVelocity","friction","fireDelay","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row","w","a","space","q","ROTATE_LEFT","ROTATE_RIGHT","master","effects","filter","newKey","action","oldKey","findKey","quadTree","objects","getAllObjects","obj","findObjects","j","isCollideAbleWith","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","nodes","node","returnedObjects","index","getIndex","Array","insert","split","splice","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","AssetManager_1","AssetId_1","canvasWidth","canvasHeight","speed","context","bulletPool","percentFire","chance","alive","PLAYER_BULLET","explosionSound","getSound","EXPLOSION_I","speedX","speedY","leftEdge","rightEdge","bottomEdge","clearRect","scorePoints","play","drawImage","random","fire","ENEMY","ENEMY_BULLET","set","Bullet_1","Enemy_1","maxSize","asId","pool","assetId","subPool","getSprite","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","draw","startPosition","velocity","counter","maxTop","laserSound","LASER","setVector","addVector","limit","getTwo","_observers","_state","observer","obs","observers","BACKGROUND","Background_1","Ship_1","Pool_1","QuadTree_1","CollisionManager_1","inputManager","canvases","background","getContext","backgroundContext","shipContext","ship","mainContext","main","playerScore","shipStartX","shipStartY","enemyBulletPool","enemyPool","spawnWave","register","collisionManager","backgroundAudio","MAIN_THEME","spacer","innerHTML","getPool","detectCollision","gameOver","animReqID","restart","gameOverAudio","GAME_OVER","clearAll","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","SpaceGame_1","Settings_1","SettingsMenu_1","AudioManager_1","GameLoop_1","settingsMenu","queueDownload","downloadAll","shoot","cancelShoot","toggleShow","togglePause"],"mappings":"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","file":"invaders.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collideable entities.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface ICollideAble {\n  collidesWith: EntityType[]\n  colliding: boolean\n  type: EntityType\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean\n}\n","import Observable from '../observer/Observable'\nimport Settings from './Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../ajax/Ajax'\nimport { AssetId } from '../../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport ICollideAble, { EntityType } from '../interfaces/ICollideAble'\n\n/**\n * Hitbox used for defining collision boundaries.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class HitBox implements ICollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import IGameLoop from '../lib/interfaces/IGameLoop'\nimport IGame from '../lib/interfaces/IGame'\n\n/**\n * Game loop.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class GameLoop implements IGameLoop {\n  public game: IGame\n  public lastTime: number\n  public frameId: number\n\n  /**\n   * Constructor.\n   *\n   * @param {IGame} game Game instance\n   */\n  constructor (game: IGame) {\n    this.game = game\n    this.lastTime = null\n  }\n\n  /**\n   *\n   */\n  public start (): void {\n    this.game.init()\n    this.game.state.running = true\n    this.frameId = requestAnimationFrame(time => this.loop(time))\n  }\n\n  /**\n   *\n   */\n  public stop (): void {\n    this.game.state.running = false\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId)\n    }\n  }\n\n  public restart (): void {\n    this.stop()\n    this.start()\n  }\n\n  /**\n   *\n   */\n  public togglePause (): void {\n    this.game.state.paused = !this.game.state.paused\n  }\n\n  /**\n   *\n   */\n  public loop (time: number): void {\n    if (this.game.state.running) {\n      if (!this.game.state.paused) {\n        if (this.lastTime !== null) {\n          const diff = time - this.lastTime\n          this.game.update(diff / 1000)\n        }\n        this.lastTime = time\n        this.game.render()\n        this.frameId = requestAnimationFrame(time => this.loop(time))\n      }\n    }\n  }\n}","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    this.source.stop(0)\n  }\n}\n","import Sound from '../audio/Sound'\n\n/**\n * Audiomanager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n","import Settings from './Settings'\nimport { Actions } from './InputManager'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../event/EventHandler'\nimport AudioManager from './AudioManager'\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLDivElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  showing: boolean\n\n  constructor (element, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = element\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.showing = false\n  }\n\n  createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add('tab')\n    this.element.appendChild(this.mainMenu)\n  }\n\n  openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName('tabContent')\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName('tabLink')\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' active'\n  }\n\n  createKeyboardMenu (): void {\n    let keyboardMenuId = 'keyboardMenu'\n    let keyboardLink = document.createElement('button')\n    let keyboardDiv = document.createElement('div')\n    let title = document.createElement('h4')\n    let form = document.createElement('form')\n    let submit = document.createElement('input')\n    EventHandler.registerOnElement(\n      keyboardLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, keyboardMenuId)\n    )\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\n    keyboardLink.classList.add('tabLink')\n    this.mainMenu.appendChild(keyboardLink)\n    keyboardDiv.setAttribute('id', keyboardMenuId)\n    keyboardDiv.classList.add('tabContent')\n    title.appendChild(document.createTextNode('Keyboard'))\n    form.setAttribute('id', 'keyboardSettings')\n    form.setAttribute('method', 'post')\n    submit.setAttribute('type', 'submit')\n    submit.setAttribute('value', 'Save')\n    keyboardDiv.appendChild(title)\n    keyboardDiv.appendChild(form)\n    this.element.appendChild(keyboardDiv)\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\n    form.appendChild(submit)\n    form.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\n      this.clear()\n    })\n  }\n\n  createPlayerMenu (): void {\n    let playerMenuId = 'playerMenu'\n    let playerLink = document.createElement('button')\n    let playerDiv = document.createElement('div')\n    let playerTitle = document.createElement('h4')\n    let playerForm = document.createElement('form')\n    let playerSubmit = document.createElement('input')\n    EventHandler.registerOnElement(\n      playerLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, playerMenuId)\n    )\n    playerLink.appendChild(document.createTextNode('Player'))\n    playerLink.classList.add('tabLink')\n    this.mainMenu.appendChild(playerLink)\n    playerDiv.setAttribute('id', playerMenuId)\n    playerDiv.classList.add('tabContent')\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\n    playerForm.setAttribute('id', 'playerSettings')\n    playerForm.setAttribute('method', 'post')\n    playerSubmit.setAttribute('type', 'submit')\n    playerSubmit.setAttribute('value', 'Save')\n    playerDiv.appendChild(playerTitle)\n    playerDiv.appendChild(playerForm)\n    this.element.appendChild(playerDiv)\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\n    playerForm.appendChild(playerSubmit)\n    playerForm.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\n      this.clear()\n    })\n  }\n\n  createAudioMenu (): void {\n    let audioMenuId = 'audioMenu'\n    let audioLink = document.createElement('button')\n    let audioDiv = document.createElement('div')\n    let div = document.createElement('div')\n    let audioTitle = document.createElement('h4')\n    let audioLabel = document.createElement('label')\n    let audioSlide = document.createElement('input')\n    EventHandler.registerOnElement(\n      audioLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, audioMenuId)\n    )\n    audioLink.classList.add('tabLink')\n    audioLink.appendChild(document.createTextNode('Audio'))\n    this.mainMenu.appendChild(audioLink)\n    audioDiv.setAttribute('id', audioMenuId)\n    audioDiv.classList.add('tabContent')\n    div.classList.add('row')\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\n    audioLabel.setAttribute('for', 'masterVolume')\n    audioSlide.setAttribute('id', 'masterVolume')\n    audioSlide.setAttribute('type', 'range')\n    audioSlide.setAttribute('min', '0')\n    audioSlide.setAttribute('max', '1')\n    audioSlide.setAttribute('step', '0.1')\n    audioSlide.addEventListener('change', event => this.audioManager.adjustMasterVolume(Number(audioSlide.value)))\n    div.appendChild(audioTitle)\n    div.appendChild(audioLabel)\n    div.appendChild(audioSlide)\n    audioDiv.appendChild(div)\n\n    let ambientDiv = document.createElement('div')\n    let ambientLabel = document.createElement('label')\n    let ambientSlide = document.createElement('input')\n    ambientDiv.classList.add('row')\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\n    ambientLabel.setAttribute('for', 'ambientVolume')\n    ambientSlide.setAttribute('id', 'ambientVolume')\n    ambientSlide.setAttribute('type', 'range')\n    ambientSlide.setAttribute('min', '0')\n    ambientSlide.setAttribute('max', '1')\n    ambientSlide.setAttribute('step', '0.1')\n    ambientSlide.addEventListener('change', event => this.audioManager.adjustAmbientVolume(Number(ambientSlide.value)))\n    ambientDiv.appendChild(ambientLabel)\n    ambientDiv.appendChild(ambientSlide)\n    audioDiv.appendChild(ambientDiv)\n\n    let effectsDiv = document.createElement('div')\n    let effectsLabel = document.createElement('label')\n    let effectsSlide = document.createElement('input')\n    effectsDiv.classList.add('row')\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\n    effectsLabel.setAttribute('for', 'effectsVolume')\n    effectsSlide.setAttribute('id', 'effectsVolume')\n    effectsSlide.setAttribute('type', 'range')\n    effectsSlide.setAttribute('min', '0')\n    effectsSlide.setAttribute('max', '1')\n    effectsSlide.setAttribute('step', '0.1')\n    effectsSlide.addEventListener('change', event => this.audioManager.adjustEffectsVolume(Number(effectsSlide.value)))\n    effectsDiv.appendChild(effectsLabel)\n    effectsDiv.appendChild(effectsSlide)\n    audioDiv.appendChild(effectsDiv)\n    this.element.appendChild(audioDiv)\n  }\n\n  init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu()\n    this.createPlayerMenu()\n    this.createAudioMenu()\n  }\n\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  addPlayerSettingEntry (setting, element): void {\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    let row = document.createElement('div')\n    label.setAttribute('for', setting)\n    label.appendChild(document.createTextNode(setting + ':'))\n    input.setAttribute('id', setting)\n    input.setAttribute('type', 'number')\n    input.setAttribute('name', setting)\n    input.setAttribute('value', this.settings.player[setting])\n    row.classList.add('row')\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  addEntry (setting, element): void {\n    let row = document.createElement('div')\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', this.settings.keyBoard[setting])\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\n    input.setAttribute('id', this.settings.keyBoard[setting])\n    input.setAttribute('type', 'text')\n    input.setAttribute('name', this.settings.keyBoard[setting])\n    input.setAttribute('value', setting)\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  toggleShow (): void {\n    if (this.showing) {\n      this.element.style.display = 'none'\n      this.showing = false\n    } else {\n      this.element.style.display = 'block'\n      this.showing = true\n    }\n  }\n}\n","import { Actions } from './InputManager'\n\n/**\n * Settings class for models applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n\n  constructor () {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART,\n      'q': Actions.ROTATE_LEFT,\n      'e': Actions.ROTATE_RIGHT\n    }\n    this.player = {\n      maxVelocity: 15,\n      fireDelay: 15,\n      friction: 0.7,\n      acceleration: 3\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n","import QuadTree from './QuadTree'\n\nexport default class CollisionManager {\n  quadTree: QuadTree\n\n  constructor (quadTree) {\n    this.quadTree = quadTree\n  }\n\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        // DETECT COLLISION ALGORITHM\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}","import HitBox from './HitBox'\nimport ICollideAble from '../interfaces/ICollideAble'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: ICollideAble[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all models objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport SpaceGame from '../application/SpaceGame'\nimport { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy implements IDrawable, ICollideAble {\n  position: Vector2\n  speed: number\n  speedX: number\n  speedY: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  game: SpaceGame\n  explosionSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   * @param {Pool} bulletPool\n   * @param {SpaceGame} game\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context, sprite, type: EntityType, bulletPool: Pool, game: SpaceGame) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.speed = speed\n    this.context = context\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.game = game\n    this.explosionSound = this.game.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.x = x\n    this.position.y = y\n    this.speed = speed\n    this.speedX = 0\n    this.speedY = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y, this.width + 1, this.height)\n    this.position.x += this.speedX\n    this.position.y += this.speedY\n    if (this.position.x <= this.leftEdge) {\n      this.speedX = this.speed\n    } else if (this.position.x >= this.rightEdge + this.width) {\n      this.speedX = -this.speed\n    } else if (this.position.y >= this.bottomEdge) {\n      this.speed = 1.5\n      this.speedY = 0\n      this.position.y -= 5\n      this.speedX = -this.speed\n    }\n    if (!this.colliding) {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      // Enemy has a chance to shoot every movement\n      this.chance = Math.floor(Math.random() * 101)\n      if (this.chance / 100 < this.percentFire) {\n        this.fire()\n      }\n      return false\n    } else {\n      this.game.scorePoints()\n      this.explosionSound.play()\n      return true\n    }\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.width / 2), Math.floor(this.position.y + this.height), -5)\n  }\n\n  /**\n   *\n   */\n  clear (): void {\n    this.position.x = 0\n    this.position.y = 0\n    this.speed = 0\n    this.speedX = 0\n    this.speedY = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\n\n/**\n *\n */\nexport default class Bullet implements IDrawable, ICollideAble {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context: any, sprite: any, type: EntityType) {\n    this.position = new Vector2(x, y)\n    this.speed = speed\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y - 1, this.width + 1, this.height + 1)\n    this.position.y -= this.speed\n    if (this.colliding) {\n      return true\n    } else if (this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.height) {\n      return true\n    } else if (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.canvasHeight) {\n      return true\n    } else {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      return false\n    }\n  }\n\n  clear (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import AssetManager from '../lib/client/AssetManager'\nimport Bullet from './Bullet'\nimport Enemy from './Enemy'\nimport SpaceGame from '../application/SpaceGame'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport IDrawable from '../lib/interfaces/IDrawable'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n *\n */\nexport default class Pool {\n  assetManager: AssetManager\n  context: any\n  canvasWidth: number\n  canvasHeight: number\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  game: SpaceGame\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {a} context\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} maxSize\n   * @param {string} type\n   * @param {AssetId} asId\n   * @param {Pool} pool\n   * @param {SpaceGame} game\n   */\n  constructor (assetManager: AssetManager, context: any, canvasWidth: number, canvasHeight: number, maxSize: number, type: EntityType, asId: AssetId, pool: Pool = null, game: SpaceGame = null) {\n    this.assetManager = assetManager\n    this.context = context\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    if (this.type === EntityType.ENEMY) {\n      let sprite = this.assetManager.getSprite(this.assetId)\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type,\n          this.subPool,\n          this.game\n        )\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        let sprite = this.assetManager.getSprite(this.assetId)\n        this.pool[i] = new Bullet(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type\n        )\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  get (x: number, y: number, speed: number): void {\n    let lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        if (this.pool[i].draw()) {\n          this.pool[i].clear()\n          this.pool.push((this.pool.splice(i, 1))[0])\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  clearAll (): void {\n    this.pool.forEach(object => object.clear())\n  }\n\n  getPool (): IDrawable[] {\n    let objects = []\n    this.pool.forEach(object => {\n      if (object.alive) {\n        objects.push(object)\n      }\n    })\n    return objects\n  }\n}\n","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport Observer from '../lib/observer/Observer'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport { Actions } from '../lib/client/InputManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n *\n */\nexport default class Ship implements IDrawable, Observer, ICollideAble {\n  position: Vector2\n  speed: number\n  acceleration: Vector2\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  pool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings\n  laserSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param context\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param settings\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, context: any, assetManager: AssetManager, pool: Pool, settings) {\n    this.position = new Vector2(x, y)\n    this.startPosition = new Vector2(x, y)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.pool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.maxTop = Math.floor(this.canvasHeight / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n  }\n\n  reset (): void {\n    this.position.setVector(this.startPosition)\n    this.velocity.set(0, 0)\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  move (): void {\n    if (!this.colliding) {\n      this.counter++\n      this.context.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.width, this.height)\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.acceleration)\n      }\n      this.velocity.multiply(this.settings.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.maxVelocity)\n      this.position.addVector(this.velocity)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.canvasWidth - this.width) {\n        this.position.x = this.canvasWidth - this.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.canvasHeight - this.height) {\n        this.position.y = this.canvasHeight - this.height\n      }\n\n      // Finish by redrawing the ship\n      this.draw()\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.fireDelay && !this.colliding) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  alive (): boolean {\n    return !this.colliding\n  }\n\n  draw (): void {\n    this.context.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n\n  fire (): void {\n    this.pool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 6,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 6\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\n\nexport default class Background implements IDrawable {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  type: EntityType\n  sprite: any\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {any} context\n   * @param {any} sprite\n   */\n  constructor (x: number, y: number, width: number, height: number, context: any, sprite: any) {\n    this.position = new Vector2(x, y)\n    this.speed = 1\n    this.width = width\n    this.height = height\n    this.canvasWidth = width\n    this.canvasHeight = height\n    this.context = context\n    this.sprite = sprite\n    this.type = EntityType.BACKGROUND\n  }\n\n  reset (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   */\n  draw (): void {\n    this.position.y += this.speed\n    this.context.drawImage(this.sprite, this.position.x, this.position.y)\n    this.context.drawImage(this.sprite, this.position.x, this.position.y - this.height)\n\n    if (this.position.y >= this.height) {\n      this.position.y = 0\n    }\n  }\n}\n","import Background from '../models/Background'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport InputManager, { Actions } from '../lib/client/InputManager'\nimport Ship from '../models/Ship'\nimport Pool from '../models/Pool'\nimport QuadTree from '../lib/collision/QuadTree'\nimport HitBox from '../lib/collision/HitBox'\nimport Settings from '../lib/client/Settings'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Sound from '../lib/audio/Sound'\nimport Observer from '../lib/observer/Observer'\nimport { AssetId } from '../enum/AssetId'\nimport IGame from '../lib/interfaces/IGame'\nimport IGameState from '../lib/interfaces/IGameState'\nimport ICollisionManager from '../lib/interfaces/ICollisionManager'\n\n/**\n * Space models main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpaceGame implements Observer, IGame {\n  state: IGameState\n  background: Background\n  ship: Ship\n  enemyPool: Pool\n  enemyBulletPool: Pool\n  backgroundContext\n  shipContext\n  mainContext\n  playing: boolean\n  window\n  assetManager: AssetManager\n  inputManager: InputManager\n  collisionManager: ICollisionManager\n  settings: Settings\n  quadTree: QuadTree\n  playerScore: number\n  shipStartX: number\n  shipStartY: number\n  paused: boolean\n  canvases\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  animReqID\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param canvases\n   */\n  constructor (assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\n    this.playing = false\n    this.paused = false\n    this.window = window\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.canvases = canvases\n    this.init()\n  }\n\n  init (): void {\n    if (this.canvases.background.getContext) {\n      this.backgroundContext = this.canvases.background.getContext('2d')\n      this.shipContext = this.canvases.ship.getContext('2d')\n      this.mainContext = this.canvases.main.getContext('2d')\n      this.playerScore = 0\n      this.background = new Background(\n        0,\n        0,\n        this.canvases.background.width,\n        this.canvases.background.height,\n        this.backgroundContext,\n        this.assetManager.getSprite(AssetId.BACKGROUND)\n      )\n      this.shipStartX = this.canvases.ship.width / 2 - this.assetManager.getSprite(AssetId.PLAYER).width\n      this.shipStartY = this.canvases.ship.height / 4 * 3 + this.assetManager.getSprite(AssetId.PLAYER).height * 2\n      this.ship = new Ship(\n        this.shipStartX,\n        this.shipStartY,\n        this.assetManager.getSprite(AssetId.PLAYER).width,\n        this.assetManager.getSprite(AssetId.PLAYER).height,\n        this.canvases.ship.width,\n        this.canvases.ship.height,\n        this.shipContext,\n        this.assetManager,\n        new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET),\n        this.settings.player\n      )\n      this.enemyBulletPool = new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET)\n      this.enemyPool = new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 30, EntityType.ENEMY, AssetId.ENEMY, this.enemyBulletPool, this)\n      this.spawnWave()\n      this.inputManager.register(this.ship)\n      this.inputManager.register(this)\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvases.main.width, this.canvases.main.height))\n      this.collisionManager = new CollisionManager(this.quadTree)\n      this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n      this.backgroundAudio.play(true)\n      this.start()\n    }\n  }\n\n  togglePause (): void {\n    this.paused = !this.paused\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    const height = this.assetManager.getSprite(AssetId.ENEMY).height\n    const width = this.assetManager.getSprite(AssetId.ENEMY).width\n    let x = 200\n    let y = -height\n    const spacer = y * 1.5\n    for (let i = 1; i <= 21; i++) {\n      this.enemyPool.get(x, y, 4)\n      x += width + 25\n      if (i % 7 === 0) {\n        x = 200\n        y += spacer\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    if (this.playing) {\n      if (!this.paused) {\n        document.getElementById('score').innerHTML = this.playerScore.toString()\n        this.quadTree.clear()\n        this.quadTree.insert(this.ship)\n        this.quadTree.insert(this.ship.pool.getPool())\n        this.quadTree.insert(this.enemyPool.getPool())\n        this.quadTree.insert(this.enemyBulletPool.getPool())\n        this.collisionManager.detectCollision()\n\n        // Spawn new wave if all enemies are destroyed.\n        if (this.enemyPool.getPool().length === 0) {\n          this.spawnWave()\n        }\n\n        if (this.ship.alive()) {\n          this.background.draw()\n          this.ship.move()\n          this.ship.pool.render()\n          this.enemyPool.render()\n          this.enemyBulletPool.render()\n        } else {\n          this.playing = false\n          this.gameOver()\n        }\n      }\n      this.animReqID = window.requestAnimationFrame(() => this.render())\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n  }\n\n  update (state: any): void {\n    if (state[Actions.RESTART]) {\n      this.restart()\n    }\n  }\n\n  /**\n   *\n   */\n  start (): void {\n    this.playing = true\n    this.render()\n    this.ship.draw()\n  }\n\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  restart (): void {\n    if (!this.playing) {\n      this.gameOverAudio.stop()\n      this.backgroundAudio.play(true)\n      document.getElementById('game-over').style.display = 'none'\n    } else {\n      window.cancelAnimationFrame(this.animReqID)\n      this.playing = false\n      this.backgroundAudio.stop()\n      this.backgroundAudio.play(true)\n    }\n    this.backgroundContext.clearRect(0, 0, this.canvases.background.width, this.canvases.background.height)\n    this.shipContext.clearRect(0, 0, this.canvases.ship.width, this.canvases.ship.height)\n    this.mainContext.clearRect(0, 0, this.canvases.main.width, this.canvases.main.height)\n    this.quadTree.clear()\n    this.background.reset()\n    this.playerScore = 0\n    this.ship.reset()\n    this.enemyBulletPool.clearAll()\n    this.enemyPool.clearAll()\n    this.ship.pool.clearAll()\n    this.start()\n  }\n}\n","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n","import AssetManager, { AssetType } from './lib/client/AssetManager'\nimport SpaceGame from './application/SpaceGame'\nimport InputManager from './lib/client/InputManager'\nimport Settings from './lib/client/Settings'\nimport SettingsMenu from './lib/client/SettingsMenu'\nimport EventHandler from './lib/event/EventHandler'\nimport { AssetId } from './enum/AssetId'\nimport AudioManager from './lib/client/AudioManager'\nimport GameLoop from './application/GameLoop'\n\nconst audioManager = new AudioManager()\nconst assetManager = new AssetManager(audioManager)\nconst canvases = {\n  background: document.getElementById('background') as HTMLCanvasElement,\n  ship: document.getElementById('ship') as HTMLCanvasElement,\n  main: document.getElementById('main') as HTMLCanvasElement\n}\nconst settings = new Settings()\nconst inputManager = new InputManager(settings)\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager, audioManager)\nassetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\nassetManager.downloadAll(() => {\n  const game = new SpaceGame(assetManager, inputManager, settings, canvases)\n  const loop = new GameLoop(game)\n  settingsMenu.init()\n  let gameOver = document.getElementById('game-over')\n  let set = document.getElementById('settings')\n  let shoot = document.getElementById('shoot')\n  let events = ['click', 'touchstart']\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\n  shoot.addEventListener('contextmenu', event => {\n    event.preventDefault()\n    return false\n  })\n  EventHandler.registerOnElement(gameOver, events, () => game.restart())\n  EventHandler.registerOnElement(set, events, () => {\n    settingsMenu.toggleShow()\n    game.togglePause()\n  })\n})\n"],"sourceRoot":""}