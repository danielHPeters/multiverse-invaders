{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/interfaces/ICollideAble.ts","webpack:///./src/enum/ContextId.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/lib/geometry/Dimension.ts","webpack:///./src/lib/client/InputManager.ts","webpack:///./src/lib/entity/Entity.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/gui/InvadersGui.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/models/Enemy.ts","webpack:///./src/models/Bullet.ts","webpack:///./src/models/Pool.ts","webpack:///./src/models/Background.ts","webpack:///./src/models/Ship.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/application/InvadersState.ts","webpack:///./src/application/GameLoop.ts","webpack:///./src/lib/audio/Sound.ts","webpack:///./src/lib/client/AudioManager.ts","webpack:///./src/lib/client/SettingsMenu.ts","webpack:///./src/config/Settings.ts","webpack:///./src/application/SpaceGame.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/graphics/2D/SpriteSheet.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EntityType","ContextId","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","default","width","height","factor","Observable_1","Actions","settings","super","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","evt","preventDefault","touchstartX","pageX","touchstartY","pageY","thisInstance","reset","changedTouches","toucheMoveX","touchMoveY","length","position","dimension","AssetId","SpriteSheet_1","Ajax_1","AssetType","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudio","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","ambient","AUDIO_AMB","createSound","Vector2_1","ICollideAble_1","colliding","collidesWith","BOX","PLAYER","other","includes","toString","element","events","listener","_observers","_state","observer","filter","obs","update","observers","scoreElement","innerHTML","quadTree","objects","getAllObjects","obj","findObjects","j","isCollideAbleWith","alive","console","log","Entity_1","Dimension_1","ContextId_1","bulletPool","sound","game","velocity","percentFire","chance","PLAYER_BULLET","contextId","MAIN","explosionSound","set","speed","ctx","drawImage","clearRect","dt","scorePoints","addVector","leftEdge","rightEdge","bottomEdge","random","fire","ENEMY","ENEMY_BULLET","gameSize","AssetManager_1","Bullet_1","Enemy_1","AssetId_1","assetManager","maxSize","asId","pool","assetId","subPool","getSprite","getSound","EXPLOSION_I","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","render","splice","clear","BACKGROUND","InputManager_1","startPosition","acceleration","counter","maxTop","laserSound","LASER","SHIP","startX","startY","setVector","getTwo","play","LEFT","add","player","RIGHT","UP","DOWN","friction","limit","maxVelocity","vel","clone","SHOOT","fireDelay","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","nodes","node","returnedObjects","index","getIndex","Array","insert","split","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","QuadTree_1","Ship_1","Background_1","Pool_1","CollisionManager_1","inputManager","collisionManager","running","paused","playerScore","background","playerBulletPool","ship","enemyBulletPool","enemyPool","pools","entities","renderables","collideables","movables","enemy","bullet","backgroundAudio","MAIN_THEME","gameOverAudio","GAME_OVER","register","spawnWave","detectCollision","movable","getPool","spacer","stop","style","display","entity","lastTime","frameId","requestAnimationFrame","time","loop","cancelAnimationFrame","RESTART","restart","diff","audioContext","masterGain","gainNode","createGain","gain","connect","playing","source","createBufferSource","Sound_1","initAudioContext","AudioContext","webkitAudioContext","effectsGain","ambientGain","destination","e","data","decodeAudioData","then","error","EventHandler_1","showing","mainMenu","createElement","classList","appendChild","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","keyboardLink","keyboardDiv","title","form","submit","registerOnElement","openTab","createTextNode","setAttribute","keys","setting","addEntry","setKey","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","addPlayerSettingEntry","Number","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row","canvas","w","a","space","master","effects","newKey","action","oldKey","findKey","canvases","contexts","Map","getContext","main","context","renderable","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","SpaceGame_1","Settings_1","SettingsMenu_1","AudioManager_1","GameLoop_1","InvadersState_1","InvadersGui_1","gui","settingsMenu","queueDownload","downloadAll","gameOver","shoot","cancelShoot","toggleShow","togglePause"],"mappings":"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","file":"invaders.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collideable entities.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface ICollideAble {\n  collidesWith: EntityType[]\n  colliding: boolean\n  type: EntityType\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean\n}\n","export enum ContextId {\n  BACKGROUND, MAIN, SHIP\n}\n","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n","/**\n * Dimension class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Dimension {\n  width: number\n  height: number\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width Width\n   * @param {number} height Height\n   */\n  constructor (width: number, height: number) {\n    this.width = width\n    this.height = height\n  }\n\n  /**\n   * Scale the dimension.\n   *\n   * @param {number} factor\n   */\n  scale (factor: number) {\n    this.width *= factor\n    this.height *= factor\n  }\n}\n","import Observable from '../observer/Observable'\nimport Settings from '../../config/Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport Settings from '../../config/Settings'\nimport Dimension from '../geometry/Dimension'\n\n/**\n * Base entity class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Entity {\n  dimension: Dimension\n  settings: Settings\n  position: Vector2\n\n  /**\n   * Constructor. Sets position and dimension of entity.\n   *\n   * @param {Vector2} position Initial position\n   * @param {Dimension} dimension Initial dimension\n   * @param {Settings} settings\n   */\n  constructor (position: Vector2, dimension: Dimension, settings: Settings) {\n    this.position = position\n    this.dimension = dimension\n    this.settings = settings\n  }\n\n  init (): void {\n    // throw new Error('Implement in subclass.')\n  }\n}\n","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../ajax/Ajax'\nimport { AssetId } from '../../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport ICollideAble, { EntityType } from '../interfaces/ICollideAble'\n\n/**\n * Hitbox used for defining collision boundaries.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class HitBox implements ICollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n","import Observer from '../lib/observer/Observer'\n\n/**\n * Multiverse Invaders GUI.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersGui implements Observer {\n  scoreElement: HTMLElement\n\n  /**\n   * Constructor.\n   */\n  constructor () {\n    this.scoreElement = document.getElementById('score')\n  }\n\n  /**\n   *\n   * @param state\n   */\n  public update (state: any): void {\n    this.scoreElement.innerHTML = state.toString()\n  }\n}\n","import QuadTree from './QuadTree'\nimport ICollisionManager from '../interfaces/ICollisionManager'\n\n/**\n * Collision Manager.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class CollisionManager implements ICollisionManager {\n  quadTree: QuadTree\n\n  /**\n   * Constructor.\n   *\n   * @param {QuadTree} quadTree\n   */\n  constructor (quadTree: QuadTree) {\n    this.quadTree = quadTree\n  }\n\n  /**\n   * Collision detection algorithm.\n   */\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].dimension.width &&\n            Math.floor(objects[i].position.x) + objects[i].dimension.width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].dimension.height &&\n            Math.floor(objects[i].position.y) + objects[i].dimension.height > Math.floor(obj[j].position.y))\n        && objects[i].alive && obj[j].alive) {\n          console.log(objects[i])\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Sound from '../lib/audio/Sound'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\nimport IGameState from '../lib/interfaces/IGameState'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  velocity: Vector2\n  speed: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  explosionSound: Sound\n  game: IGameState\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Pool} bulletPool\n   * @param {Settings} settings\n   * @param {Sound} sound\n   * @param {IGameState} game\n   */\n  constructor (width: number, height: number, sprite, type: EntityType, bulletPool: Pool, settings: Settings, sound: Sound, game: IGameState) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.contextId = ContextId.MAIN\n    this.explosionSound = sound\n    this.game = game\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.position.set(0, 0)\n    this.velocity.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.dimension.width / 2), Math.floor(this.position.y + this.dimension.height), -200)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (this.alive) {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y, this.dimension.width + 1, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt Delta time\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      if (this.alive) {\n        this.position.addVector(this.velocity)\n        if (this.position.x <= this.leftEdge) {\n          this.velocity.x = this.speed\n        } else if (this.position.x >= this.rightEdge + this.dimension.width) {\n          this.velocity.x = -this.speed\n        } else if (this.position.y >= this.bottomEdge) {\n          this.speed = 1.5\n          this.velocity.y = 0\n          this.position.y -= 5\n          this.velocity.x = -this.speed\n        }\n        this.chance = Math.floor(Math.random() * 101)\n        if (this.chance / 100 < this.percentFire) {\n          this.fire()\n        }\n      }\n    } else {\n      this.game.scorePoints()\n      // this.explosionSound.play()\n      this.alive = false\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.velocity.set(0, speed)\n    this.speed = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\n\n/**\n * Bullet class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Bullet extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  speed: number\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, type: EntityType, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 0\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n  }\n\n  init (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height)) {\n      this.alive = false\n    } else {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y - 1, this.dimension.width + 1, this.dimension.height + 1)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height) ||\n      this.colliding) {\n      this.alive = false\n      this.colliding = false\n    } else {\n      this.position.y -= Math.floor(this.speed * dt)\n    }\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Bullet from './Bullet'\nimport Enemy from './Enemy'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport { AssetId } from '../enum/AssetId'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IGameState from '../lib/interfaces/IGameState'\n\n/**\n *\n */\nexport default class Pool implements IRenderable, IMovable {\n  contextId: ContextId\n  assetManager: AssetManager\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  settings: Settings\n  game: IGameState\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {number} maxSize\n   * @param {EntityType} type\n   * @param {AssetId} asId\n   * @param {Settings} settings\n   * @param {Pool} pool\n   */\n  constructor (assetManager: AssetManager, maxSize: number, type: EntityType, asId: AssetId, settings: Settings, pool: Pool = null, game: IGameState = null) {\n    this.assetManager = assetManager\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const sprite = this.assetManager.getSprite(this.assetId)\n    if (this.type === EntityType.ENEMY) {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(sprite.width, sprite.height, sprite, this.type, this.subPool, this.settings, this.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO), this.game)\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Bullet(sprite.width, sprite.height, sprite, this.type, this.settings)\n      }\n    }\n  }\n\n  /**\n   *\n   * @returns {IMovable[]}\n   */\n  getPool (): IMovable[] {\n    return this.pool.filter(object => object.alive)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  get (x: number, y: number, speed: number): void {\n    const lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        this.pool[i].render(ctx)\n        //\n      } else {\n        this.pool[i].init()\n        this.pool.push((this.pool.splice(i, 1))[0])\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    this.pool.forEach(object => object.clear(ctx))\n  }\n\n  move (dt: number): void {\n    this.pool.forEach(object => object.move(dt))\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport Settings from '../config/Settings'\n\n/**\n * Shifting background.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Background extends Entity implements IRenderable, IMovable {\n  contextId: ContextId\n  speed: number\n  sprite: any\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 1\n    this.sprite = sprite\n    this.contextId = ContextId.BACKGROUND\n  }\n\n  /**\n   * Initialize.\n   */\n  init (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    ctx.drawImage(this.sprite, this.position.x, this.position.y - this.dimension.height)\n  }\n\n  /**\n   * Update position.\n   *\n   * @param {number} dt Delta Time\n   */\n  move (dt: number): void {\n    this.position.y += this.speed\n    if (this.position.y >= this.dimension.height) {\n      this.position.y = 0\n    }\n  }\n\n  /**\n   * Clear the background.\n   */\n  clear (): void {\n    // Not applicable\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport Observer from '../lib/observer/Observer'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport { Actions } from '../lib/client/InputManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Player ship model class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Ship extends Entity implements IRenderable, IMovable, Observer, ICollideAble {\n  acceleration: Vector2\n  sprite: any\n  bulletPool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings: Settings\n  laserSound: Sound\n  assetManager: AssetManager\n  contextId: ContextId\n  alive: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, assetManager: AssetManager, pool: Pool, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.startPosition = new Vector2(0, 0)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.bulletPool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.assetManager = assetManager\n    this.maxTop = Math.floor(this.settings.gameSize.height / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n    this.contextId = ContextId.SHIP\n    this.alive = false\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const startX = this.settings.gameSize.width / 2 - this.assetManager.getSprite(AssetId.PLAYER).width\n    const startY = this.settings.gameSize.height / 4 * 3 + this.assetManager.getSprite(AssetId.PLAYER).height * 2\n    this.position.setVector(new Vector2(startX, startY))\n    this.velocity.set(0, 0)\n    this.colliding = false\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 200,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 200\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (!this.colliding) {\n      ctx.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.dimension.width, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      this.counter++\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.player.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.player.acceleration)\n      }\n      this.velocity.multiply(this.settings.player.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.player.maxVelocity)\n      const vel = this.velocity.clone()\n      vel.multiply(dt)\n      this.position.addVector(vel)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.settings.gameSize.width - this.dimension.width) {\n        this.position.x = this.settings.gameSize.width - this.dimension.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.settings.gameSize.height - this.dimension.height) {\n        this.position.y = this.settings.gameSize.height - this.dimension.height\n      }\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.player.fireDelay) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  /**\n   *\n   * @param state\n   */\n  update (state: any): void {\n    this.state = state\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import HitBox from './HitBox'\nimport ICollideAble from '../interfaces/ICollideAble'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: ICollideAble[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all models objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n","import IGameState from '../lib/interfaces/IGameState'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport QuadTree from '../lib/collision/QuadTree'\nimport Settings from '../config/Settings'\nimport InputManager from '../lib/client/InputManager'\nimport { default as AssetManager, AssetType } from '../lib/client/AssetManager'\nimport Ship from '../models/Ship'\nimport HitBox from '../lib/collision/HitBox'\nimport { AssetId } from '../enum/AssetId'\nimport Background from '../models/Background'\nimport Pool from '../models/Pool'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Entity from '../lib/entity/Entity'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Sound from '../lib/audio/Sound'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Observable from '../lib/observer/Observable'\n\n/**\n * Multiverse invaders game state.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersState extends Observable implements IGameState {\n  running: boolean\n  paused: boolean\n  quadTree: QuadTree\n  entities: Entity[]\n  renderables: IRenderable[]\n  collideables: ICollideAble[]\n  movables: IMovable[]\n  pools: Pool[]\n  assetManager: AssetManager\n  collisionManager: CollisionManager\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  playerScore: number\n\n  /**\n   *\n   * @param {Settings} settings\n   * @param {InputManager} inputManager\n   * @param {AssetManager} assetManager\n   * @param {CollisionManager} collisionManager\n   */\n  constructor (settings: Settings, inputManager: InputManager, assetManager: AssetManager) {\n    super()\n    this.assetManager = assetManager\n    this.quadTree = new QuadTree(new HitBox(0, 0, settings.gameSize.width, settings.gameSize.height))\n    this.collisionManager = new CollisionManager(this.quadTree)\n    this.running = false\n    this.paused = false\n    this.playerScore = 0\n    const background = new Background(\n      settings.gameSize.width,\n      settings.gameSize.height,\n      assetManager.getSprite(AssetId.BACKGROUND),\n      settings\n    )\n    const playerBulletPool = new Pool(this.assetManager, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET, settings)\n    const ship = new Ship(assetManager.getSprite(AssetId.PLAYER).width, assetManager.getSprite(AssetId.PLAYER).height, assetManager, playerBulletPool, settings)\n    const enemyBulletPool = new Pool(this.assetManager, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET, settings)\n    const enemyPool = new Pool(this.assetManager, 30, EntityType.ENEMY, AssetId.ENEMY, settings, enemyBulletPool, this)\n    this.pools = []\n    this.entities = []\n    this.renderables = []\n    this.collideables = []\n    this.movables = []\n\n    this.pools.push(playerBulletPool)\n    this.pools.push(enemyBulletPool)\n    this.pools.push(enemyPool)\n\n    this.entities.push(ship)\n    this.entities.push(background)\n\n    enemyPool.pool.forEach(enemy => this.entities.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n\n    this.collideables.push(ship)\n\n    enemyPool.pool.forEach(enemy => this.collideables.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n\n    this.movables.push(ship)\n    this.movables.push(background)\n    this.movables.push(enemyPool)\n    this.movables.push(playerBulletPool)\n    this.movables.push(enemyBulletPool)\n\n    this.renderables.push(ship)\n    this.renderables.push(background)\n    this.renderables.push(playerBulletPool)\n    this.renderables.push(enemyBulletPool)\n    this.renderables.push(enemyPool)\n\n    this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    inputManager.register(ship)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  update (dt: number): void {\n    this.spawnWave()\n    this.quadTree.clear()\n    this.quadTree.insert(this.collideables)\n    this.collisionManager.detectCollision()\n    this.movables.forEach(movable => movable.move(dt))\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    if (this.pools[2].getPool().length === 0) {\n      const height = this.assetManager.getSprite(AssetId.ENEMY).height\n      const width = this.assetManager.getSprite(AssetId.ENEMY).width\n      let x = 200\n      let y = -height\n      const spacer = y * 1.5\n      for (let i = 1; i <= 21; i++) {\n        this.pools[2].get(x, y, 300)\n        x += width + 25\n        if (i % 7 === 0) {\n          x = 200\n          y += spacer\n        }\n      }\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n    this.state = this.playerScore\n    this.notify()\n  }\n\n  /**\n   *\n   */\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  /**\n   *\n   */\n  reset (): void {\n    this.backgroundAudio.stop()\n    this.gameOverAudio.stop()\n    document.getElementById('game-over').style.display = 'none'\n    this.quadTree.clear()\n    this.entities.forEach(entity => entity.init())\n    this.spawnWave()\n    this.playerScore = 0\n    this.state = this.playerScore\n    this.notify()\n    this.backgroundAudio.play(true)\n  }\n}\n","import IGameLoop from '../lib/interfaces/IGameLoop'\nimport IGame from '../lib/interfaces/IGame'\nimport { Actions } from '../lib/client/InputManager'\nimport Observer from '../lib/observer/Observer'\n\n/**\n * Game loop.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class GameLoop implements IGameLoop, Observer {\n  public game: IGame\n  public lastTime: number\n  public frameId: number\n  private state: any\n\n  /**\n   * Constructor.\n   *\n   * @param {IGame} game Game instance\n   */\n  constructor (game: IGame) {\n    this.game = game\n    this.lastTime = null\n    this.state = {}\n  }\n\n  /**\n   *\n   */\n  public start (): void {\n    this.game.init()\n    this.game.state.running = true\n    this.frameId = requestAnimationFrame(time => this.loop(time))\n  }\n\n  /**\n   *\n   */\n  public stop (): void {\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId)\n    }\n  }\n\n  public restart (): void {\n    this.stop()\n    this.start()\n  }\n\n  /**\n   *\n   */\n  public togglePause (): void {\n    this.game.state.paused = !this.game.state.paused\n  }\n\n  /**\n   *\n   */\n  public loop (time: number): void {\n    if (this.state[Actions.RESTART]) {\n      this.restart()\n    } else {\n      if (this.game.state.running) {\n        this.game.clear()\n        if (this.lastTime !== null) {\n          const diff = time - this.lastTime\n          if (!this.game.state.paused) {\n            this.game.state.update(diff / 1000)\n          }\n        }\n        this.lastTime = time\n        this.game.render()\n        this.frameId = requestAnimationFrame(time => this.loop(time))\n      }\n    }\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n}\n","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    if (this.source) {\n      this.source.stop(0)\n    }\n  }\n}\n","import Sound from '../audio/Sound'\n\n/**\n * Audio manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n","import Settings from '../../config/Settings'\nimport { Actions } from './InputManager'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../event/EventHandler'\nimport AudioManager from './AudioManager'\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLDivElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  showing: boolean\n\n  constructor (element, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = element\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.showing = false\n  }\n\n  createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add('tab')\n    this.element.appendChild(this.mainMenu)\n  }\n\n  openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName('tabContent')\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName('tabLink')\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' active'\n  }\n\n  createKeyboardMenu (): void {\n    let keyboardMenuId = 'keyboardMenu'\n    let keyboardLink = document.createElement('button')\n    let keyboardDiv = document.createElement('div')\n    let title = document.createElement('h4')\n    let form = document.createElement('form')\n    let submit = document.createElement('input')\n    EventHandler.registerOnElement(\n      keyboardLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, keyboardMenuId)\n    )\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\n    keyboardLink.classList.add('tabLink')\n    this.mainMenu.appendChild(keyboardLink)\n    keyboardDiv.setAttribute('id', keyboardMenuId)\n    keyboardDiv.classList.add('tabContent')\n    title.appendChild(document.createTextNode('Keyboard'))\n    form.setAttribute('id', 'keyboardSettings')\n    form.setAttribute('method', 'post')\n    submit.setAttribute('type', 'submit')\n    submit.setAttribute('value', 'Save')\n    keyboardDiv.appendChild(title)\n    keyboardDiv.appendChild(form)\n    this.element.appendChild(keyboardDiv)\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\n    form.appendChild(submit)\n    form.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\n      this.clear()\n    })\n  }\n\n  createPlayerMenu (): void {\n    let playerMenuId = 'playerMenu'\n    let playerLink = document.createElement('button')\n    let playerDiv = document.createElement('div')\n    let playerTitle = document.createElement('h4')\n    let playerForm = document.createElement('form')\n    let playerSubmit = document.createElement('input')\n    EventHandler.registerOnElement(\n      playerLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, playerMenuId)\n    )\n    playerLink.appendChild(document.createTextNode('Player'))\n    playerLink.classList.add('tabLink')\n    this.mainMenu.appendChild(playerLink)\n    playerDiv.setAttribute('id', playerMenuId)\n    playerDiv.classList.add('tabContent')\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\n    playerForm.setAttribute('id', 'playerSettings')\n    playerForm.setAttribute('method', 'post')\n    playerSubmit.setAttribute('type', 'submit')\n    playerSubmit.setAttribute('value', 'Save')\n    playerDiv.appendChild(playerTitle)\n    playerDiv.appendChild(playerForm)\n    this.element.appendChild(playerDiv)\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\n    playerForm.appendChild(playerSubmit)\n    playerForm.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\n      this.clear()\n    })\n  }\n\n  createAudioMenu (): void {\n    let audioMenuId = 'audioMenu'\n    let audioLink = document.createElement('button')\n    let audioDiv = document.createElement('div')\n    let div = document.createElement('div')\n    let audioTitle = document.createElement('h4')\n    let audioLabel = document.createElement('label')\n    let audioSlide = document.createElement('input')\n    EventHandler.registerOnElement(\n      audioLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, audioMenuId)\n    )\n    audioLink.classList.add('tabLink')\n    audioLink.appendChild(document.createTextNode('Audio'))\n    this.mainMenu.appendChild(audioLink)\n    audioDiv.setAttribute('id', audioMenuId)\n    audioDiv.classList.add('tabContent')\n    div.classList.add('row')\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\n    audioLabel.setAttribute('for', 'masterVolume')\n    audioSlide.setAttribute('id', 'masterVolume')\n    audioSlide.setAttribute('type', 'range')\n    audioSlide.setAttribute('min', '0')\n    audioSlide.setAttribute('max', '1')\n    audioSlide.setAttribute('step', '0.1')\n    audioSlide.addEventListener('change', event => this.audioManager.adjustMasterVolume(Number(audioSlide.value)))\n    div.appendChild(audioTitle)\n    div.appendChild(audioLabel)\n    div.appendChild(audioSlide)\n    audioDiv.appendChild(div)\n\n    let ambientDiv = document.createElement('div')\n    let ambientLabel = document.createElement('label')\n    let ambientSlide = document.createElement('input')\n    ambientDiv.classList.add('row')\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\n    ambientLabel.setAttribute('for', 'ambientVolume')\n    ambientSlide.setAttribute('id', 'ambientVolume')\n    ambientSlide.setAttribute('type', 'range')\n    ambientSlide.setAttribute('min', '0')\n    ambientSlide.setAttribute('max', '1')\n    ambientSlide.setAttribute('step', '0.1')\n    ambientSlide.addEventListener('change', event => this.audioManager.adjustAmbientVolume(Number(ambientSlide.value)))\n    ambientDiv.appendChild(ambientLabel)\n    ambientDiv.appendChild(ambientSlide)\n    audioDiv.appendChild(ambientDiv)\n\n    let effectsDiv = document.createElement('div')\n    let effectsLabel = document.createElement('label')\n    let effectsSlide = document.createElement('input')\n    effectsDiv.classList.add('row')\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\n    effectsLabel.setAttribute('for', 'effectsVolume')\n    effectsSlide.setAttribute('id', 'effectsVolume')\n    effectsSlide.setAttribute('type', 'range')\n    effectsSlide.setAttribute('min', '0')\n    effectsSlide.setAttribute('max', '1')\n    effectsSlide.setAttribute('step', '0.1')\n    effectsSlide.addEventListener('change', event => this.audioManager.adjustEffectsVolume(Number(effectsSlide.value)))\n    effectsDiv.appendChild(effectsLabel)\n    effectsDiv.appendChild(effectsSlide)\n    audioDiv.appendChild(effectsDiv)\n    this.element.appendChild(audioDiv)\n  }\n\n  init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu()\n    this.createPlayerMenu()\n    this.createAudioMenu()\n  }\n\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  addPlayerSettingEntry (setting, element): void {\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    let row = document.createElement('div')\n    label.setAttribute('for', setting)\n    label.appendChild(document.createTextNode(setting + ':'))\n    input.setAttribute('id', setting)\n    input.setAttribute('type', 'number')\n    input.setAttribute('name', setting)\n    input.setAttribute('value', this.settings.player[setting])\n    row.classList.add('row')\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  addEntry (setting, element): void {\n    let row = document.createElement('div')\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', this.settings.keyBoard[setting])\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\n    input.setAttribute('id', this.settings.keyBoard[setting])\n    input.setAttribute('type', 'text')\n    input.setAttribute('name', this.settings.keyBoard[setting])\n    input.setAttribute('value', setting)\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  toggleShow (): void {\n    if (this.showing) {\n      this.element.style.display = 'none'\n      this.showing = false\n    } else {\n      this.element.style.display = 'block'\n      this.showing = true\n    }\n  }\n}\n","import { Actions } from '../lib/client/InputManager'\nimport Dimension from '../lib/geometry/Dimension'\n\n/**\n * Settings class for models applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n  gameSize: Dimension\n\n  constructor (canvas: HTMLCanvasElement) {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART\n    }\n    this.player = {\n      maxVelocity: 150,\n      fireDelay: 15,\n      friction: 0.9,\n      acceleration: 50\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n    this.gameSize = new Dimension(canvas.width, canvas.height)\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n","import Background from '../models/Background'\nimport AssetManager from '../lib/client/AssetManager'\nimport InputManager from '../lib/client/InputManager'\nimport Settings from '../config/Settings'\nimport IGame from '../lib/interfaces/IGame'\nimport IGameState from '../lib/interfaces/IGameState'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Space models main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpaceGame implements IGame {\n  state: IGameState\n  background: Background\n  assetManager: AssetManager\n  inputManager: InputManager\n  settings: Settings\n  canvases\n  contexts: Map<ContextId, CanvasRenderingContext2D>\n\n  /**\n   *\n   * @param {IGameState} state\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param canvases\n   */\n  constructor (state: IGameState, assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\n    this.state = state\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.canvases = canvases\n    this.contexts = new Map<ContextId, CanvasRenderingContext2D>()\n    this.init()\n  }\n\n  /**\n   *\n   */\n  public init (): void {\n    if (this.canvases.background.getContext) {\n      this.contexts.set(ContextId.BACKGROUND, this.canvases.background.getContext('2d'))\n      this.contexts.set(ContextId.SHIP, this.canvases.ship.getContext('2d'))\n      this.contexts.set(ContextId.MAIN, this.canvases.main.getContext('2d'))\n      this.contexts.forEach(context => context.clearRect(0, 0, this.settings.gameSize.width, this.settings.gameSize.height))\n    }\n    this.state.reset()\n  }\n\n  /**\n   *\n   */\n  public clear (): void {\n    this.state.renderables.forEach(renderable => renderable.clear(this.contexts.get(renderable.contextId)))\n  }\n\n  /**\n   *\n   */\n  public render (): void {\n    this.state.renderables.forEach(renderable => renderable.render(this.contexts.get(renderable.contextId)))\n  }\n}\n","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n","import AssetManager, { AssetType } from './lib/client/AssetManager'\nimport SpaceGame from './application/SpaceGame'\nimport InputManager from './lib/client/InputManager'\nimport Settings from './config/Settings'\nimport SettingsMenu from './lib/client/SettingsMenu'\nimport EventHandler from './lib/event/EventHandler'\nimport { AssetId } from './enum/AssetId'\nimport AudioManager from './lib/client/AudioManager'\nimport GameLoop from './application/GameLoop'\nimport InvadersState from './application/InvadersState'\nimport InvadersGui from './gui/InvadersGui'\n\nconst audioManager = new AudioManager()\nconst assetManager = new AssetManager(audioManager)\nconst gui = new InvadersGui()\nconst canvases = {\n  background: document.getElementById('background') as HTMLCanvasElement,\n  ship: document.getElementById('ship') as HTMLCanvasElement,\n  main: document.getElementById('main') as HTMLCanvasElement\n}\nconst settings = new Settings(canvases.background)\nconst inputManager = new InputManager(settings)\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager, audioManager)\nassetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\nassetManager.downloadAll(() => {\n  const state = new InvadersState(settings, inputManager, assetManager)\n  state.register(gui)\n  const game = new SpaceGame(state, assetManager, inputManager, settings, canvases)\n  const loop = new GameLoop(game)\n  inputManager.register(loop)\n  settingsMenu.init()\n  let gameOver = document.getElementById('game-over')\n  let set = document.getElementById('settings')\n  let shoot = document.getElementById('shoot')\n  let events = ['click', 'touchstart']\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\n  shoot.addEventListener('contextmenu', event => {\n    event.preventDefault()\n    return false\n  })\n  EventHandler.registerOnElement(gameOver, events, () => loop.restart())\n  EventHandler.registerOnElement(set, events, () => {\n    settingsMenu.toggleShow()\n    loop.togglePause()\n  })\n  loop.start()\n})\n"],"sourceRoot":""}