{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/interfaces/ICollideAble.ts","webpack:///./src/enum/ContextId.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/lib/geometry/Dimension.ts","webpack:///./src/lib/entity/Entity.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/client/InputManager.ts","webpack:///./src/lib/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/application/InvadersGame.ts","webpack:///./src/application/GameLoop.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/models/Enemy.ts","webpack:///./src/models/Bullet.ts","webpack:///./src/models/Pool.ts","webpack:///./src/models/Background.ts","webpack:///./src/models/Ship.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/application/InvadersState.ts","webpack:///./src/lib/client/SettingsMenu.ts","webpack:///./src/config/Settings.ts","webpack:///./src/gui/InvadersGui.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/graphics/2D/SpriteSheet.ts","webpack:///./src/lib/audio/Sound.ts","webpack:///./src/lib/client/AudioManager.ts","webpack:///./src/application/Application.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EntityType","ContextId","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","default","width","height","factor","position","dimension","settings","AssetId","Observable_1","Actions","super","inputMap","keyboard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","evt","preventDefault","touchstartX","pageX","touchstartY","pageY","thisInstance","reset","changedTouches","toucheMoveX","touchMoveY","length","SpriteSheet_1","Ajax_1","AssetType","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudio","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","ambient","AUDIO_AMB","createSound","Vector2_1","ICollideAble_1","colliding","collidesWith","BOX","PLAYER","other","includes","toString","element","events","listener","_observers","_state","observer","filter","obs","update","observers","assetManager","inputManager","contexts","context","clearRect","gameSize","renderables","renderable","clear","contextId","render","InputManager_1","game","lastTime","running","frameId","requestAnimationFrame","time","loop","cancelAnimationFrame","stop","paused","RESTART","restart","diff","quadTree","objects","getAllObjects","obj","findObjects","j","isCollideAbleWith","alive","console","log","Entity_1","Dimension_1","ContextId_1","bulletPool","sound","velocity","percentFire","chance","PLAYER_BULLET","MAIN","explosionSound","set","speed","ctx","drawImage","dt","scorePoints","play","addVector","leftEdge","rightEdge","bottomEdge","random","fire","ENEMY","ENEMY_BULLET","AssetManager_1","Bullet_1","Enemy_1","AssetId_1","maxSize","asId","pool","assetId","subPool","getSprite","getSound","EXPLOSION_I","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","splice","BACKGROUND","startPosition","acceleration","counter","maxTop","laserSound","LASER","SHIP","startX","startY","setVector","getTwo","LEFT","add","player","RIGHT","UP","DOWN","friction","limit","maxVelocity","vel","clone","SHOOT","fireDelay","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","nodes","node","returnedObjects","index","getIndex","Array","insert","split","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","QuadTree_1","Ship_1","Background_1","Pool_1","CollisionManager_1","collisionManager","playerScore","background","playerBulletPool","ship","enemyBulletPool","enemyPool","pools","entities","collideables","movables","enemy","bullet","backgroundAudio","MAIN_THEME","gameOverAudio","GAME_OVER","register","spawnWave","detectCollision","movable","getPool","spacer","style","display","entity","EventHandler_1","ElementClasses","elementId","visible","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","mainMenu","createElement","classList","TAB","appendChild","linkText","title","createTab","container","keys","setting","addEntry","input","setKey","Number","slider","adjustMasterVolume","adjustAmbientVolume","adjustEffectsVolume","tabId","tabContent","tabLink","getElementsByClassName","TAB_CONTENT","TAB_LINK","className","replace","ACTIVE","currentTarget","menuLink","titleElement","openTab","textContent","labelText","parent","action","min","step","row","label","setAttribute","w","a","space","master","effects","newKey","oldKey","findKey","scoreElement","innerHTML","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","data","JSON","stringify","send","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","audioContext","masterGain","gainNode","createGain","gain","connect","playing","source","createBufferSource","Sound_1","initAudioContext","AudioContext","webkitAudioContext","effectsGain","ambientGain","destination","e","decodeAudioData","then","error","AudioManager_1","InvadersGui_1","Settings_1","SettingsMenu_1","InvadersState_1","GameLoop_1","InvadersGame_1","Application","bgCanvas","Map","gui","initContexts","initAssetQueue","downloadAll","setUpGame","shipCanvas","mainCanvas","getContext","queueDownload","shoot","cancelShoot","settingsMenu","gameOver","initTouchControlElements","toggleShow","togglePause","initGui","Application_1","bootstrap"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,IAAA4B,EAAA,oFCnEA,SAAYC,GACVA,EAAA,cACAA,EAAA,cACAA,EAAA,2BACAA,EAAA,uBACAA,EAAA,wBACAA,EAAA,UACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,uBACAA,EAAA,yBACAA,EAAA,0BACAA,EAAA,UACAA,EAAA,cAbF,CAAY3B,EAAA2B,aAAA3B,EAAA2B,+FCAZ,SAAYC,GACVA,IAAA,2BAAYA,IAAA,eAAMA,IAAA,eADpB,CAAY5B,EAAA4B,YAAA5B,EAAA4B,oGCMZC,EAUEC,YAAaC,EAAWC,GACtBC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAUXF,iBAAkBI,EAAaC,GAC7B,OAAO,IAAIN,EAAQK,EAAGH,EAAII,EAAGJ,EAAGG,EAAGF,EAAIG,EAAGH,GAU5CF,sBAAuBI,EAAaC,GAClC,OAAO,IAAIN,EAAQK,EAAGH,EAAII,EAAGJ,EAAGG,EAAGF,EAAIG,EAAGH,GAU5CF,gBAAiBM,EAAiBC,GAChC,OAAO,IAAIR,EAAQO,EAAOL,EAAIM,EAAQD,EAAOJ,EAAIK,GAWnDP,cAAeM,EAAiBC,GAC9B,GAAe,IAAXA,EACF,MAAM,IAAIC,MAAM,iDAElB,OAAO,IAAIT,EAAQO,EAAOL,EAAIM,EAAQD,EAAOJ,EAAIK,GAQnDN,MAAOA,GACLE,KAAKM,GAAKR,EAQZC,MAAOA,GACLC,KAAKO,GAAKR,EAOZD,QACE,OAAOE,KAAKM,GAOdP,QACE,OAAOC,KAAKO,GASdV,IAAKC,EAAWC,GACdC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAQXF,UAAWM,GACTH,KAAKF,EAAIK,EAAOL,EAChBE,KAAKD,EAAII,EAAOJ,EASlBF,IAAKC,EAAWC,GACdC,KAAKF,GAAKA,EACVE,KAAKD,GAAKA,EAQZF,UAAWM,GACTH,KAAKF,GAAKK,EAAOL,EACjBE,KAAKD,GAAKI,EAAOJ,EASnBF,SAAUC,EAAWC,GACnBC,KAAKF,GAAKA,EACVE,KAAKD,GAAKA,EAQZF,eAAgBM,GACdH,KAAKF,GAAKK,EAAOL,EACjBE,KAAKD,GAAKI,EAAOJ,EAQnBF,SAAUO,GACRJ,KAAKF,GAAKM,EACVJ,KAAKD,GAAKK,EASZP,OAAQO,GACN,GAAe,IAAXA,EACF,MAAM,IAAIC,MAAM,+BAElBL,KAAKF,GAAKM,EACVJ,KAAKD,GAAKK,EAQZP,MACE,OAAOW,KAAKC,KAAKT,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,GAQnDF,WACE,OAAO,IAAID,GAASI,KAAKF,GAAIE,KAAKD,GAMpCF,YACE,IAAIa,EAAYV,KAAKW,MACH,IAAdD,GACFV,KAAKY,OAAOF,GAShBb,MAAOgB,GACDL,KAAKM,MAAMd,KAAKW,OAASE,IAC3Bb,KAAKe,YACLf,KAAKgB,SAASH,IAUlBhB,WAAYM,GACV,OAAOK,KAAKC,KAAKD,KAAKS,IAAId,EAAOL,EAAIE,KAAKF,EAAG,GAAKU,KAAKS,IAAId,EAAOJ,EAAIC,KAAKD,EAAG,IAShFF,IAAKM,GACH,OAAOH,KAAKF,EAAIK,EAAOL,EAAIE,KAAKD,EAAII,EAAOJ,EAG7CF,QACEG,KAAKF,EAAIU,KAAKM,MAAMd,KAAKF,GACzBE,KAAKF,EAAIU,KAAKM,MAAMd,KAAKF,GAQ3BD,QACE,OAAO,IAAID,EAAQI,KAAKF,EAAGE,KAAKD,IA/PpChC,EAAAmD,QAAAtB,iFCAA7B,EAAAmD,cAUErB,YAAasB,EAAeC,GAC1BpB,KAAKmB,MAAQA,EACbnB,KAAKoB,OAASA,EAQhBvB,MAAOwB,GACLrB,KAAKmB,OAASE,EACdrB,KAAKoB,QAAUC,mFClBnBtD,EAAAmD,cAYErB,YAAayB,EAAmBC,EAAsBC,GACpDxB,KAAKsB,SAAWA,EAChBtB,KAAKuB,UAAYA,EACjBvB,KAAKwB,SAAWA,EAGlB3B,yFCzBF,SAAY4B,GACVA,EAAA,cACAA,EAAA,cACAA,EAAA,2BACAA,EAAA,uBACAA,EAAA,wBACAA,EAAA,UACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,uBACAA,EAAA,yBACAA,EAAA,0BACAA,EAAA,UACAA,EAAA,cAbF,CAAY1D,EAAA0D,UAAA1D,EAAA0D,4FCHZ,MAAAC,EAAA7D,EAAA,KAGA,SAAY8D,GACVA,EAAA,QACAA,EAAA,YACAA,EAAA,YACAA,EAAA,cACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,qBACAA,EAAA,uBARF,CAAY5D,EAAA4D,UAAA5D,EAAA4D,aAiBZ5D,EAAAmD,sBAA0CQ,EAAAR,QAOxCrB,YAAa2B,GACXI,QACA5B,KAAK6B,SAAWL,EAASM,SACzB9B,KAAK+B,OACL/B,KAAKgC,yBACLhC,KAAKiC,SACHC,SACAC,SAOJtC,OACEuC,OAAOC,iBAAiB,UAAWC,IACjC,IAAIC,EAAoB,MAAdD,EAAMC,IAAcD,EAAMC,IAAM,QAC1CvC,KAAKwC,MAAMxC,KAAK6B,SAASU,KAAQ,EACjCvC,KAAKyC,WAEPL,OAAOC,iBAAiB,QAASC,IAC/B,IAAIC,EAAoB,MAAdD,EAAMC,IAAcD,EAAMC,IAAM,QAC1CvC,KAAKwC,MAAMxC,KAAK6B,SAASU,KAAQ,EACjCvC,KAAKyC,WAQT5C,yBAEE,IAAI6C,EAASC,SAASC,eAAe,QACjCC,EAAKH,GAAkBN,OAC3BS,EAAGR,iBAAiB,aAgBpB,SAA2BS,GACzBA,EAAIC,iBACJb,EAAQY,EAAIb,QACZe,EAAcF,EAAIb,QAAQ,GAAGgB,MAC7BC,EAAcJ,EAAIb,QAAQ,GAAGkB,QApBqB,GACpDN,EAAGR,iBAAiB,YAsBpB,SAA0BS,GACxBM,EAAaC,QACbP,EAAIC,iBACJZ,EAAOW,EAAIQ,eACXC,EAAcT,EAAIb,QAAQ,GAAGgB,MAC7BO,EAAaV,EAAIb,QAAQ,GAAGkB,MAC5B,IAAK,IAAIlF,EAAI,EAAGA,EAAI6E,EAAIb,QAAQwB,OAAQxF,IAElCkE,EAAKlE,GAAGgF,MAAQf,EAAMjE,GAAGgF,QAC3BG,EAAaZ,MAAMY,EAAavB,SAAY,IAAK,GAE/CM,EAAKlE,GAAGgF,MAAQf,EAAMjE,GAAGgF,QAC3BG,EAAaZ,MAAMY,EAAavB,SAAY,IAAK,GAE/CM,EAAKlE,GAAGkF,MAAQjB,EAAMjE,GAAGkF,QAC3BC,EAAaZ,MAAMY,EAAavB,SAAY,IAAK,GAE/CM,EAAKlE,GAAGkF,MAAQjB,EAAMjE,GAAGkF,QAC3BC,EAAaZ,MAAMY,EAAavB,SAAY,IAAK,GAEnDuB,EAAaX,WA1CiC,GAClDI,EAAGR,iBAAiB,WA6CpB,SAAyBS,GACvBA,EAAIC,iBACJK,EAAaC,UA/CiC,GAChDR,EAAGR,iBAAiB,cAAeC,IACjCA,EAAMS,kBACC,IAGT,IAAIb,KACAC,KACAa,EAAc,EACdE,EAAc,EACdK,EAAc,EACdC,EAAa,EACbJ,EAAepD,KAuCrBH,QACEG,KAAKwC,MAAMxC,KAAK6B,SAAgB,QAAK,EAGvChC,cACEG,KAAKwC,MAAMxC,KAAK6B,SAAgB,QAAK,EAGvChC,QACEG,KAAKwC,MAAMxC,KAAK6B,SAAY,IAAK,EACjC7B,KAAKwC,MAAMxC,KAAK6B,SAAY,IAAK,EACjC7B,KAAKwC,MAAMxC,KAAK6B,SAAY,IAAK,EACjC7B,KAAKwC,MAAMxC,KAAK6B,SAAY,IAAK,mFC/HrC,MAAA6B,EAAA7F,EAAA,IAEA8F,EAAA9F,EAAA,IAIA,IAAY+F,GAAZ,SAAYA,GACVA,EAAA,gBAAmBA,EAAA,4BAA+BA,EAAA,cAAiBA,EAAA,iBADrE,CAAYA,EAAA7F,EAAA6F,YAAA7F,EAAA6F,eAUZ7F,EAAAmD,cAWErB,YAAagE,GACX7D,KAAK8D,OACHC,WACAC,gBACAC,UAEFjE,KAAKkE,cAAgB,EACrBlE,KAAKmE,SACLnE,KAAK6D,aAAeA,EAOtBhE,OACE,OAAOG,KAAKkE,gBAAkBlE,KAAKmE,MAAMV,OAU3C5D,cAAeuE,EAAaC,EAAcC,EAAiBC,EAAO,MAChEvE,KAAKmE,MAAMK,MACTJ,GAAIA,EACJC,KAAMA,EACNC,KAAMA,EACNC,KAAMA,IAUV1E,UAAW4E,EAAMC,GACff,EAAAzC,QAAKyD,QACHC,OAAQ,MACRC,IAAKJ,EAAKJ,KACVS,aAAc,eACbC,IACD/E,KAAK6D,aAAamB,YAAYD,EAAUN,EAAKL,GAAIa,IAC/CjF,KAAK8D,MAAMG,MAAMQ,EAAKL,IAAMa,EAC5BjF,KAAKkE,eAAiB,EAClBlE,KAAKkF,QACPR,QAWR7E,WAAY4E,EAAMC,GAChB,IAAIS,EAAS,IAAIC,MACjBD,EAAO9C,iBAAiB,OAAQ,KAC9BrC,KAAKkE,gBACDlE,KAAKkF,QACPR,MAGJS,EAAOE,IAAMZ,EAAKJ,KAClBrE,KAAK8D,MAAMC,QAAQU,EAAKL,IAAMe,EAShCtF,gBAAiB4E,EAAMC,GACrB,IAAIY,EAAc,IAAIF,MACtBE,EAAYjD,iBAAiB,OAAQ,KACnCrC,KAAK8D,MAAME,aAAaS,EAAKL,IAAM,IAAIV,EAAAxC,QAAYoE,EAAab,EAAKF,KAAKgB,YAAc,EAAGd,EAAKF,KAAKiB,aAAe,GACpHxF,KAAKkE,eAAiB,EAClBlE,KAAKkF,QACPR,MAGJY,EAAYD,IAAMZ,EAAKJ,KAOzBxE,YAAa6E,GACX1E,KAAKmE,MAAMsB,QAAQhB,IACbA,EAAKH,OAASV,EAAU8B,MAC1B1F,KAAK2F,UAAUlB,EAAMC,GACZD,EAAKH,OAASV,EAAUgC,OACjC5F,KAAK6F,WAAWpB,EAAMC,GACbD,EAAKH,OAASV,EAAUkC,cACjC9F,KAAK+F,gBAAgBtB,EAAMC,KAYjC7E,SAAUuE,EAAaE,GACrB,IAAI0B,EAAU1B,IAASV,EAAUqC,UACjC,OAAOjG,KAAK6D,aAAaqC,YAAYlG,KAAK8D,MAAMG,MAAMG,GAAK4B,GAQ7DnG,UAAWuE,GACT,OAAOpE,KAAK8D,MAAMC,QAAQK,GAS5BvE,eAAgBuE,GACd,OAAOpE,KAAK8D,MAAME,aAAaI,oFCnKnC,MAAA+B,EAAAtI,EAAA,GACAuI,EAAAvI,EAAA,GAQAE,EAAAmD,cAeErB,YAAaC,EAAGC,EAAGoB,EAAOC,GACxBpB,KAAKsB,SAAW,IAAI6E,EAAAjF,QAAQpB,EAAGC,GAC/BC,KAAKmB,MAAQA,EACbnB,KAAKoB,OAASA,EACdpB,KAAKqG,WAAY,EACjBrG,KAAKsG,gBACLtG,KAAKsE,KAAO8B,EAAA1G,WAAW6G,IACvBvG,KAAKsG,aAAa9B,KAAK4B,EAAA1G,WAAW8G,QAQpC3G,kBAAmB4G,GACjB,OAAOzG,KAAKsG,aAAaI,SAASD,EAAMnC,KAAKqC,6FCrCjD5I,EAAAmD,cAQErB,gBAAiB+G,EAAsBC,EAAuBC,GAC5DD,EAAOpB,QAAQnD,GAASsE,EAAQvE,iBAAiBC,EAAOwE,qFCJ5D/I,EAAAmD,cAIErB,cACEG,KAAK+G,cACL/G,KAAKgH,UAQPnH,SAAUoH,GACRjH,KAAK+G,WAAWvC,KAAKyC,GAQvBpH,WAAYoH,GACVjH,KAAK+G,WAAa/G,KAAK+G,WAAWG,OAAOC,GAChCA,IAAQF,GAOnBpH,SACEG,KAAK+G,WAAWtB,QAAQwB,IACtBA,EAASG,OAAOpH,KAAKgH,UAQzBK,gBACE,OAAOrH,KAAK+G,WAOdM,cAAeA,GACbrH,KAAK+G,WAAaM,EAOpB7E,YACE,OAAOxC,KAAKgH,OAOdxE,UAAWA,GACTxC,KAAKgH,OAASxE,mFC7DlBzE,EAAAmD,cAgBErB,YAAa2C,EAAmB8E,EAA4BC,EAA4B/F,EAAoBgG,GAC1GxH,KAAKwC,MAAQA,EACbxC,KAAKsH,aAAeA,EACpBtH,KAAKuH,aAAeA,EACpBvH,KAAKwB,SAAWA,EAChBxB,KAAKwH,SAAWA,EAChBxH,KAAK+B,OAMAlC,OACLG,KAAKwH,SAAS/B,QAAQgC,GAAWA,EAAQC,UAAU,EAAG,EAAG1H,KAAKwB,SAASmG,SAASxG,MAAOnB,KAAKwB,SAASmG,SAASvG,SAC9GpB,KAAKwC,MAAMa,QAMNxD,QACLG,KAAKwC,MAAMoF,YAAYnC,QAAQoC,GAAcA,EAAWC,MAAM9H,KAAKwH,SAASzI,IAAI8I,EAAWE,aAMtFlI,SACLG,KAAKwC,MAAMoF,YAAYnC,QAAQoC,GAAcA,EAAWG,OAAOhI,KAAKwH,SAASzI,IAAI8I,EAAWE,8FCxDhG,MAAAE,EAAApK,EAAA,GASAE,EAAAmD,cAWErB,YAAaqI,GACXlI,KAAKkI,KAAOA,EACZlI,KAAKmI,SAAW,KAChBnI,KAAKwC,SAMA3C,QACLG,KAAKkI,KAAKnG,OACV/B,KAAKkI,KAAK1F,MAAM4F,SAAU,EAC1BpI,KAAKqI,QAAUC,sBAAsBC,GAAQvI,KAAKwI,KAAKD,IAMlD1I,OACDG,KAAKqI,SACPI,qBAAqBzI,KAAKqI,SAIvBxI,UACLG,KAAK0I,OACL1I,KAAKkC,QAMArC,cACLG,KAAKkI,KAAK1F,MAAMmG,QAAU3I,KAAKkI,KAAK1F,MAAMmG,OAMrC9I,KAAM0I,GACX,GAAIvI,KAAKwC,MAAMyF,EAAAtG,QAAQiH,SACrB5I,KAAK6I,eAEL,GAAI7I,KAAKkI,KAAK1F,MAAM4F,QAAS,CAE3B,GADApI,KAAKkI,KAAKJ,QACY,OAAlB9H,KAAKmI,SAAmB,CAC1B,MAAMW,EAAOP,EAAOvI,KAAKmI,SACpBnI,KAAKkI,KAAK1F,MAAMmG,QACnB3I,KAAKkI,KAAK1F,MAAM4E,OAAO0B,EAAO,KAGlC9I,KAAKmI,SAAWI,EAChBvI,KAAKkI,KAAKF,SACVhI,KAAKqI,QAAUC,sBAAsBC,GAAQvI,KAAKwI,KAAKD,KAK7D1I,OAAQ2C,GACNxC,KAAKwC,MAAQA,mFCxEjBzE,EAAAmD,cAQErB,YAAakJ,GACX/I,KAAK+I,SAAWA,EAMlBlJ,kBACE,IAAImJ,KACJhJ,KAAK+I,SAASE,cAAcD,GAC5B,IAAK,IAAI/K,EAAI,EAAGA,EAAI+K,EAAQvF,OAAQxF,IAAK,CACvC,IAAIiL,KACJlJ,KAAK+I,SAASI,YAAYD,EAAKF,EAAQ/K,IAEvC,IAAK,IAAImL,EAAI,EAAGA,EAAIF,EAAIzF,OAAQ2F,IAC1BJ,EAAQ/K,GAAGoL,kBAAkBH,EAAIE,KAClC5I,KAAKM,MAAMkI,EAAQ/K,GAAGqD,SAASxB,GAAKU,KAAKM,MAAMoI,EAAIE,GAAG9H,SAASxB,GAAKoJ,EAAIE,GAAG7H,UAAUJ,OACpFX,KAAKM,MAAMkI,EAAQ/K,GAAGqD,SAASxB,GAAKkJ,EAAQ/K,GAAGsD,UAAUJ,MAAQX,KAAKM,MAAMoI,EAAIE,GAAG9H,SAASxB,IAC5FU,KAAKM,MAAMkI,EAAQ/K,GAAGqD,SAASvB,GAAKS,KAAKM,MAAMoI,EAAIE,GAAG9H,SAASvB,GAAKmJ,EAAIE,GAAG7H,UAAUH,QACrFZ,KAAKM,MAAMkI,EAAQ/K,GAAGqD,SAASvB,GAAKiJ,EAAQ/K,GAAGsD,UAAUH,OAASZ,KAAKM,MAAMoI,EAAIE,GAAG9H,SAASvB,IAC9FiJ,EAAQ/K,GAAGqL,OAASJ,EAAIE,GAAGE,QAC5BC,QAAQC,IAAIR,EAAQ/K,IACpB+K,EAAQ/K,GAAGoI,WAAY,EACvB6C,EAAIE,GAAG/C,WAAY,qFCxC7B,MAAAF,EAAAtI,EAAA,GAEAuI,EAAAvI,EAAA,GAKA4L,EAAA5L,EAAA,GACA6L,EAAA7L,EAAA,GACA8L,EAAA9L,EAAA,GAUAE,EAAAmD,sBAAmCuI,EAAAvI,QA6BjCrB,YAAasB,EAAeC,EAAgB+D,EAAQb,EAAkBsF,EAAkBpI,EAAoBqI,EAAc3B,GACxHtG,MAAM,IAAIuE,EAAAjF,QAAQ,EAAG,GAAI,IAAIwI,EAAAxI,QAAUC,EAAOC,GAASI,GACvDxB,KAAK8J,SAAW,IAAI3D,EAAAjF,QAAQ,EAAG,GAC/BlB,KAAKmF,OAASA,EACdnF,KAAK+J,YAAc,KACnB/J,KAAKgK,OAAS,EACdhK,KAAKsJ,OAAQ,EACbtJ,KAAKsE,KAAOA,EACZtE,KAAKsG,gBACLtG,KAAKsG,aAAa9B,KAAK4B,EAAA1G,WAAWuK,eAClCjK,KAAKqG,WAAY,EACjBrG,KAAK4J,WAAaA,EAClB5J,KAAK+H,UAAY4B,EAAAhK,UAAUuK,KAC3BlK,KAAKmK,eAAiBN,EACtB7J,KAAKkI,KAAOA,EAMdrI,OACEG,KAAKsB,SAAS8I,IAAI,EAAG,GACrBpK,KAAK8J,SAASM,IAAI,EAAG,GACrBpK,KAAKqK,MAAQ,EACbrK,KAAKsJ,OAAQ,EACbtJ,KAAKqG,WAAY,EAMnBxG,OACEG,KAAK4J,WAAW7K,IAAIyB,KAAKM,MAAMd,KAAKsB,SAASxB,EAAIE,KAAKuB,UAAUJ,MAAQ,GAAIX,KAAKM,MAAMd,KAAKsB,SAASvB,EAAIC,KAAKuB,UAAUH,SAAU,KAOpIvB,OAAQyK,GACFtK,KAAKsJ,OACPgB,EAAIC,UAAUvK,KAAKmF,OAAQnF,KAAKsB,SAASxB,EAAGE,KAAKsB,SAASvB,GAQ9DF,MAAOyK,GACLA,EAAI5C,UAAU1H,KAAKsB,SAASxB,EAAI,EAAGE,KAAKsB,SAASvB,EAAGC,KAAKuB,UAAUJ,MAAQ,EAAGnB,KAAKuB,UAAUH,QAO/FvB,KAAM2K,GACCxK,KAAKqG,WAmBRrG,KAAKkI,KAAKuC,cACVzK,KAAKmK,eAAeO,OACpB1K,KAAKsJ,OAAQ,GApBTtJ,KAAKsJ,QACPtJ,KAAKsB,SAASqJ,UAAU3K,KAAK8J,UACzB9J,KAAKsB,SAASxB,GAAKE,KAAK4K,SAC1B5K,KAAK8J,SAAShK,EAAIE,KAAKqK,MACdrK,KAAKsB,SAASxB,GAAKE,KAAK6K,UAAY7K,KAAKuB,UAAUJ,MAC5DnB,KAAK8J,SAAShK,GAAKE,KAAKqK,MACfrK,KAAKsB,SAASvB,GAAKC,KAAK8K,aACjC9K,KAAKqK,MAAQ,IACbrK,KAAK8J,SAAS/J,EAAI,EAClBC,KAAKsB,SAASvB,GAAK,EACnBC,KAAK8J,SAAShK,GAAKE,KAAKqK,OAE1BrK,KAAKgK,OAASxJ,KAAKM,MAAsB,IAAhBN,KAAKuK,UAC1B/K,KAAKgK,OAAS,IAAMhK,KAAK+J,aAC3B/J,KAAKgL,QAgBbnL,MAAOC,EAAWC,EAAWsK,GAC3BrK,KAAKsB,SAAS8I,IAAItK,EAAGC,GACrBC,KAAK8J,SAASM,IAAI,EAAGC,GACrBrK,KAAKqK,MAAQA,EACbrK,KAAKsJ,OAAQ,EACbtJ,KAAK4K,SAAW5K,KAAKsB,SAASxB,EAAI,IAClCE,KAAK6K,UAAY7K,KAAKsB,SAASxB,EAAI,IACnCE,KAAK8K,WAAa9K,KAAKsB,SAASvB,EAAI,IAOtCF,kBAAmB4G,GACjB,OAAOzG,KAAKsG,aAAaI,SAASD,EAAMnC,KAAKqC,6FCxJjD,MAAAR,EAAAtI,EAAA,GACAuI,EAAAvI,EAAA,GACA4L,EAAA5L,EAAA,GAIA6L,EAAA7L,EAAA,GACA8L,EAAA9L,EAAA,GASAE,EAAAmD,sBAAoCuI,EAAAvI,QAiBlCrB,YAAasB,EAAeC,EAAgB+D,EAAab,EAAkB9C,GACzEI,MAAM,IAAIuE,EAAAjF,QAAQ,EAAG,GAAI,IAAIwI,EAAAxI,QAAUC,EAAOC,GAASI,GACvDxB,KAAKqK,MAAQ,EACbrK,KAAKmF,OAASA,EACdnF,KAAKsJ,OAAQ,EACbtJ,KAAKsE,KAAOA,EACZtE,KAAKqG,WAAY,EACjBrG,KAAKsG,gBACDtG,KAAKsE,OAAS8B,EAAA1G,WAAWuK,cAC3BjK,KAAKsG,aAAa9B,KAAK4B,EAAA1G,WAAWuL,OACzBjL,KAAKsE,OAAS8B,EAAA1G,WAAWwL,cAClClL,KAAKsG,aAAa9B,KAAK4B,EAAA1G,WAAW8G,QAEpCxG,KAAKwB,SAAWA,EAChBxB,KAAK+H,UAAY4B,EAAAhK,UAAUuK,KAM7BrK,OACEG,KAAKsB,SAAS8I,IAAI,EAAG,GACrBpK,KAAKqK,MAAQ,EACbrK,KAAKsJ,OAAQ,EACbtJ,KAAKqG,WAAY,EASnBxG,MAAOC,EAAWC,EAAWsK,GAC3BrK,KAAKsB,SAAS8I,IAAItK,EAAGC,GACrBC,KAAKqK,MAAQA,EACbrK,KAAKsJ,OAAQ,EAMfzJ,OAAQyK,GACDtK,KAAKsE,OAAS8B,EAAA1G,WAAWuK,eAAiBjK,KAAKsB,SAASvB,GAAK,EAAIC,KAAKuB,UAAUH,QAClFpB,KAAKsE,OAAS8B,EAAA1G,WAAWwL,cAAgBlL,KAAKsB,SAASvB,GAAKC,KAAKwB,SAASmG,SAASvG,OACpFpB,KAAKsJ,OAAQ,EAEbgB,EAAIC,UAAUvK,KAAKmF,OAAQnF,KAAKsB,SAASxB,EAAGE,KAAKsB,SAASvB,GAQ9DF,MAAOyK,GACLA,EAAI5C,UAAU1H,KAAKsB,SAASxB,EAAI,EAAGE,KAAKsB,SAASvB,EAAI,EAAGC,KAAKuB,UAAUJ,MAAQ,EAAGnB,KAAKuB,UAAUH,OAAS,GAO5GvB,KAAM2K,GACCxK,KAAKsE,OAAS8B,EAAA1G,WAAWuK,eAAiBjK,KAAKsB,SAASvB,GAAK,EAAIC,KAAKuB,UAAUH,QAClFpB,KAAKsE,OAAS8B,EAAA1G,WAAWwL,cAAgBlL,KAAKsB,SAASvB,GAAKC,KAAKwB,SAASmG,SAASvG,QACpFpB,KAAKqG,WACLrG,KAAKsJ,OAAQ,EACbtJ,KAAKqG,WAAY,GAEjBrG,KAAKsB,SAASvB,GAAKS,KAAKM,MAAMd,KAAKqK,MAAQG,GAS/C3K,kBAAmB4G,GACjB,OAAOzG,KAAKsG,aAAaI,SAASD,EAAMnC,KAAKqC,6FCjHjD,MAAAwE,EAAAtN,EAAA,GACAuN,EAAAvN,EAAA,IACAwN,EAAAxN,EAAA,IACAuI,EAAAvI,EAAA,GACAyN,EAAAzN,EAAA,GAGA8L,EAAA9L,EAAA,GAOAE,EAAAmD,cAqBErB,YAAayH,EAA4BiE,EAAiBjH,EAAkBkH,EAAehK,EAAoBiK,EAAa,KAAMvD,EAAmB,MACnJlI,KAAKsH,aAAeA,EACpBtH,KAAKuL,QAAUA,EACfvL,KAAKsE,KAAOA,EACZtE,KAAK0L,QAAUF,EACfxL,KAAKyL,QACLzL,KAAK2L,QAAUF,EACfzL,KAAKwB,SAAWA,EAChBxB,KAAK+H,UAAY4B,EAAAhK,UAAUuK,KAC3BlK,KAAKkI,KAAOA,EACZlI,KAAK+B,OAMPlC,OACE,MAAMsF,EAASnF,KAAKsH,aAAasE,UAAU5L,KAAK0L,SAChD,GAAI1L,KAAKsE,OAAS8B,EAAA1G,WAAWuL,MAC3B,IAAK,IAAIhN,EAAI,EAAGA,EAAI+B,KAAKuL,QAAStN,IAChC+B,KAAKyL,KAAKxN,GAAK,IAAIoN,EAAAnK,QACjBiE,EAAOhE,MACPgE,EAAO/D,OAAQ+D,EACfnF,KAAKsE,KACLtE,KAAK2L,QACL3L,KAAKwB,SACLxB,KAAKsH,aAAauE,SAASP,EAAA7J,QAAQqK,YAAaX,EAAAvH,UAAU8B,OAAQ1F,KAAKkI,WAG3E,IAAK,IAAIjK,EAAI,EAAGA,EAAI+B,KAAKuL,QAAStN,IAChC+B,KAAKyL,KAAKxN,GAAK,IAAImN,EAAAlK,QAAOiE,EAAOhE,MAAOgE,EAAO/D,OAAQ+D,EAAQnF,KAAKsE,KAAMtE,KAAKwB,UAS9E3B,UACL,OAAOG,KAAKyL,KAAKvE,OAAO9H,GAAUA,EAAOkK,OASpCzJ,IAAKC,EAAWC,EAAWsK,GAChC,MAAM0B,EAAc/L,KAAKyL,KAAKzL,KAAKuL,QAAU,GACxCQ,EAAYzC,QACfyC,EAAYC,MAAMlM,EAAGC,EAAGsK,GACxBrK,KAAKyL,KAAKQ,QAAQjM,KAAKyL,KAAKS,QAazBrM,OAAQsM,EAAYC,EAAYC,EAAgBC,EAAYC,EAAYC,GACxExM,KAAKyL,KAAKzL,KAAKuL,QAAU,GAAGjC,OAC9BtJ,KAAKyL,KAAKzL,KAAKuL,QAAU,GAAGjC,QAC7BtJ,KAAKjB,IAAIoN,EAAIC,EAAIC,GACjBrM,KAAKjB,IAAIuN,EAAIC,EAAIC,IAQd3M,OAAQyK,GACb,IAAK,IAAIrM,EAAI,EAAGA,EAAI+B,KAAKyL,KAAKhI,OAAQxF,IAEhC+B,KAAKyL,KAAKxN,GAAGqL,MACftJ,KAAKyL,KAAKxN,GAAG+J,OAAOsC,IAEpBtK,KAAKyL,KAAKxN,GAAG8D,OACb/B,KAAKyL,KAAKjH,KAAMxE,KAAKyL,KAAKgB,OAAOxO,EAAG,GAAI,KASvC4B,MAAOyK,GACZtK,KAAKyL,KAAKhG,QAAQrG,GAAUA,EAAO0I,MAAMwC,IAGpCzK,KAAM2K,GACXxK,KAAKyL,KAAKhG,QAAQrG,GAAUA,EAAO+C,KAAKqI,qFCtI5C,MAAArE,EAAAtI,EAAA,GAGA8L,EAAA9L,EAAA,GAEA4L,EAAA5L,EAAA,GACA6L,EAAA7L,EAAA,GASAE,EAAAmD,sBAAwCuI,EAAAvI,QAatCrB,YAAasB,EAAeC,EAAgB+D,EAAa3D,GACvDI,MAAM,IAAIuE,EAAAjF,QAAQ,EAAG,GAAI,IAAIwI,EAAAxI,QAAUC,EAAOC,GAASI,GACvDxB,KAAKqK,MAAQ,EACbrK,KAAKmF,OAASA,EACdnF,KAAK+H,UAAY4B,EAAAhK,UAAU+M,WAM7B7M,OACEG,KAAKsB,SAAS8I,IAAI,EAAG,GAOvBvK,OAAQyK,GACNA,EAAIC,UAAUvK,KAAKmF,OAAQnF,KAAKsB,SAASxB,EAAGE,KAAKsB,SAASvB,GAC1DuK,EAAIC,UAAUvK,KAAKmF,OAAQnF,KAAKsB,SAASxB,EAAGE,KAAKsB,SAASvB,EAAIC,KAAKuB,UAAUH,QAQ/EvB,KAAM2K,GACJxK,KAAKsB,SAASvB,GAAKC,KAAKqK,MACpBrK,KAAKsB,SAASvB,GAAKC,KAAKuB,UAAUH,SACpCpB,KAAKsB,SAASvB,EAAI,GAOtBF,0FClEF,MAAAsG,EAAAtI,EAAA,GAGAuI,EAAAvI,EAAA,GACAoK,EAAApK,EAAA,GACAsN,EAAAtN,EAAA,GAEAyN,EAAAzN,EAAA,GACA4L,EAAA5L,EAAA,GAIA6L,EAAA7L,EAAA,GACA8L,EAAA9L,EAAA,GAQAE,EAAAmD,sBAAkCuI,EAAAvI,QA0BhCrB,YAAasB,EAAeC,EAAgBkG,EAA4BmE,EAAYjK,GAClFI,MAAM,IAAIuE,EAAAjF,QAAQ,EAAG,GAAI,IAAIwI,EAAAxI,QAAUC,EAAOC,GAASI,GACvDxB,KAAK2M,cAAgB,IAAIxG,EAAAjF,QAAQ,EAAG,GACpClB,KAAK4M,aAAe,IAAIzG,EAAAjF,QAAQ,EAAG,GACnClB,KAAK8J,SAAW,IAAI3D,EAAAjF,QAAQ,EAAG,GAC/BlB,KAAKmF,OAASmC,EAAasE,UAAUN,EAAA7J,QAAQ+E,QAC7CxG,KAAKsE,KAAO8B,EAAA1G,WAAW8G,OACvBxG,KAAK4J,WAAa6B,EAClBzL,KAAK6M,QAAU,EACf7M,KAAKsG,gBACLtG,KAAKsG,aAAa9B,KAAK4B,EAAA1G,WAAWwL,cAClClL,KAAKqG,WAAY,EACjBrG,KAAKwC,SACLxC,KAAKwB,SAAWA,EAChBxB,KAAKsH,aAAeA,EACpBtH,KAAK8M,OAAStM,KAAKM,MAAMd,KAAKwB,SAASmG,SAASvG,OAAS,EAAI,GAC7DpB,KAAK+M,WAAazF,EAAauE,SAASP,EAAA7J,QAAQuL,MAAO7B,EAAAvH,UAAU8B,OACjE1F,KAAK+H,UAAY4B,EAAAhK,UAAUsN,KAC3BjN,KAAKsJ,OAAQ,EAMfzJ,OACE,MAAMqN,EAASlN,KAAKwB,SAASmG,SAASxG,MAAQ,EAAInB,KAAKsH,aAAasE,UAAUN,EAAA7J,QAAQ+E,QAAQrF,MACxFgM,EAASnN,KAAKwB,SAASmG,SAASvG,OAAS,EAAI,EAAyD,EAArDpB,KAAKsH,aAAasE,UAAUN,EAAA7J,QAAQ+E,QAAQpF,OACnGpB,KAAKsB,SAAS8L,UAAU,IAAIjH,EAAAjF,QAAQgM,EAAQC,IAC5CnN,KAAK8J,SAASM,IAAI,EAAG,GACrBpK,KAAKqG,WAAY,EACjBrG,KAAKsJ,OAAQ,EAMfzJ,OACEG,KAAK4J,WAAWyD,OACd7M,KAAKM,MAAMd,KAAKsB,SAASxB,GAAK,GAAIU,KAAKM,MAAMd,KAAKsB,SAASvB,GAAI,IAC/DS,KAAKM,MAAMd,KAAKsB,SAASxB,GAAK,GAAIU,KAAKM,MAAMd,KAAKsB,SAASvB,GAAI,KAEjEC,KAAK+M,WAAWrC,OAOlB7K,OAAQyK,GACDtK,KAAKqG,WACRiE,EAAIC,UAAUvK,KAAKmF,OAAQ3E,KAAKM,MAAMd,KAAKsB,SAASxB,GAAIU,KAAKM,MAAMd,KAAKsB,SAASvB,IAQrFF,MAAOyK,GACLA,EAAI5C,UAAUlH,KAAKM,MAAMd,KAAKsB,SAASxB,GAAIU,KAAKM,MAAMd,KAAKsB,SAASvB,GAAIC,KAAKuB,UAAUJ,MAAOnB,KAAKuB,UAAUH,QAO/GvB,KAAM2K,GACJ,IAAKxK,KAAKqG,UAAW,CACnBrG,KAAK6M,UACL7M,KAAK4M,aAAaxC,IAAI,EAAG,GACrBpK,KAAKwC,MAAMyF,EAAAtG,QAAQ2L,OACrBtN,KAAK4M,aAAaW,KAAKvN,KAAKwB,SAASgM,OAAOZ,aAAc,GAExD5M,KAAKwC,MAAMyF,EAAAtG,QAAQ8L,QACrBzN,KAAK4M,aAAaW,IAAIvN,KAAKwB,SAASgM,OAAOZ,aAAc,GAEvD5M,KAAKwC,MAAMyF,EAAAtG,QAAQ+L,KACrB1N,KAAK4M,aAAaW,IAAI,GAAIvN,KAAKwB,SAASgM,OAAOZ,cAE7C5M,KAAKwC,MAAMyF,EAAAtG,QAAQgM,OACrB3N,KAAK4M,aAAaW,IAAI,EAAGvN,KAAKwB,SAASgM,OAAOZ,cAEhD5M,KAAK8J,SAAS9I,SAAShB,KAAKwB,SAASgM,OAAOI,UAC5C5N,KAAK8J,SAASa,UAAU3K,KAAK4M,cAC7B5M,KAAK8J,SAAS+D,MAAM7N,KAAKwB,SAASgM,OAAOM,aACzC,MAAMC,EAAM/N,KAAK8J,SAASkE,QAC1BD,EAAI/M,SAASwJ,GACbxK,KAAKsB,SAASqJ,UAAUoD,GACpB/N,KAAKsB,SAASxB,GAAK,IACrBE,KAAKsB,SAASxB,EAAI,EAClBE,KAAK8J,SAAShK,IAAM,GAElBE,KAAKsB,SAASxB,GAAKE,KAAKwB,SAASmG,SAASxG,MAAQnB,KAAKuB,UAAUJ,QACnEnB,KAAKsB,SAASxB,EAAIE,KAAKwB,SAASmG,SAASxG,MAAQnB,KAAKuB,UAAUJ,OAE9DnB,KAAKsB,SAASvB,GAAKC,KAAK8M,SAC1B9M,KAAKsB,SAASvB,EAAIC,KAAK8M,QAErB9M,KAAKsB,SAASvB,GAAKC,KAAKwB,SAASmG,SAASvG,OAASpB,KAAKuB,UAAUH,SACpEpB,KAAKsB,SAASvB,EAAIC,KAAKwB,SAASmG,SAASvG,OAASpB,KAAKuB,UAAUH,QAG/DpB,KAAKwC,MAAMyF,EAAAtG,QAAQsM,QAAUjO,KAAK6M,SAAW7M,KAAKwB,SAASgM,OAAOU,YACpElO,KAAKgL,OACLhL,KAAK6M,QAAU,IASrBhN,OAAQ2C,GACNxC,KAAKwC,MAAQA,EAQf3C,kBAAmB4G,GACjB,OAAOzG,KAAKsG,aAAaI,SAASD,EAAMnC,KAAKqC,6FC1KjD,MAAAwH,EAAAtQ,EAAA,SASAuQ,EAcEvO,YAAawO,EAAS,IAAIF,EAAAjN,QAAO,EAAG,EAAG,EAAG,GAAIoN,EAAQ,GACpDtO,KAAKsO,MAAQA,EACbtO,KAAKuO,WAAa,GAClBvO,KAAKwO,UAAY,EACjBxO,KAAKqO,OAASA,EACdrO,KAAKgJ,WACLhJ,KAAKyO,SAMP5O,QACEG,KAAKgJ,WACLhJ,KAAKyO,MAAMhJ,QAAQiJ,GAAQA,EAAK5G,SAChC9H,KAAKyO,SAQP5O,cAAe8O,GAGb,OAFA3O,KAAKyO,MAAMhJ,QAAQiJ,GAAQA,EAAKzF,cAAc0F,IAC9C3O,KAAKgJ,QAAQvD,QAAQrG,GAAUuP,EAAgBnK,KAAKpF,IAC7CuP,EAST9O,YAAa8O,EAAiBvP,GAC5B,QAAsB,IAAXA,EAET,YADAmK,QAAQC,IAAI,oBAGd,IAAIoF,EAAQ5O,KAAK6O,SAASzP,GAK1B,OAJe,IAAXwP,GAAgB5O,KAAKyO,MAAMhL,QAC7BzD,KAAKyO,MAAMG,GAAOzF,YAAYwF,EAAiBvP,GAEjDY,KAAKgJ,QAAQvD,QAAQyD,GAAOyF,EAAgBnK,KAAK0E,IAC1CyF,EAQT9O,OAAQT,GACN,QAAsB,IAAXA,EAGX,GAAIA,aAAkB0P,MACpB1P,EAAOqG,QAAQmB,GAAW5G,KAAK+O,OAAOnI,QADxC,CAIA,GAAI5G,KAAKyO,MAAMhL,OAAS,EAAG,CACzB,IAAImL,EAAQ5O,KAAK6O,SAASzP,GAE1B,IAAe,IAAXwP,EAEF,YADA5O,KAAKyO,MAAMG,GAAOG,OAAO3P,GAM7B,GAFAY,KAAKgJ,QAAQxE,KAAKpF,GAEdY,KAAKgJ,QAAQvF,OAASzD,KAAKuO,YAAcvO,KAAKsO,MAAQtO,KAAKwO,UAAW,MAC3C,IAAlBxO,KAAKyO,MAAM,IACpBzO,KAAKgP,QAEP,IAAI/Q,EAAI,EACR,KAAOA,EAAI+B,KAAKgJ,QAAQvF,QAAQ,CAC9B,IAAImL,EAAQ5O,KAAK6O,SAAS7O,KAAKgJ,QAAQ/K,KACxB,IAAX2Q,EACF5O,KAAKyO,MAAMG,GAAOG,OAAQ/O,KAAKgJ,QAAQyD,OAAOxO,EAAG,GAAI,IAErDA,OAYR4B,SAAUT,GACR,IAAIwP,GAAS,EACTK,EAAmBjP,KAAKqO,OAAO/M,SAASxB,EAAIE,KAAKqO,OAAOlN,MAAQ,EAChE+N,EAAqBlP,KAAKqO,OAAO/M,SAASvB,EAAIC,KAAKqO,OAAOjN,OAAS,EAEnE+N,EAAe/P,EAAOkC,SAASvB,EAAImP,GAAsB9P,EAAOkC,SAASvB,EAAIX,EAAOgC,OAAS8N,EAE7FE,EAAkBhQ,EAAOkC,SAASvB,EAAImP,EAe1C,OAbI9P,EAAOkC,SAASxB,EAAImP,GAAoB7P,EAAOkC,SAASxB,EAAIV,EAAO+B,MAAQ8N,EACzEE,EACFP,EAAQ,EACCQ,IACTR,EAAQ,GAEDxP,EAAOkC,SAASxB,EAAImP,IACzBE,EACFP,EAAQ,EACCQ,IACTR,EAAQ,IAGLA,EAMT/O,QACE,IAAIwP,EAAYrP,KAAKqO,OAAOlN,MAAQ,EAAK,EACrCmO,EAAatP,KAAKqO,OAAOjN,OAAS,EAAK,EAC3CpB,KAAKyO,MAAM,GAAK,IAAIL,EAClB,IAAID,EAAAjN,QAAOlB,KAAKqO,OAAO/M,SAASxB,EAAIuP,EAAUrP,KAAKqO,OAAO/M,SAASvB,EAAGsP,EAAUC,GAAYtP,KAAKsO,MAAQ,GAC3GtO,KAAKyO,MAAM,GAAK,IAAIL,EAClB,IAAID,EAAAjN,QAAOlB,KAAKqO,OAAO/M,SAASxB,EAAGE,KAAKqO,OAAO/M,SAASvB,EAAGsP,EAAUC,GAAYtP,KAAKsO,MAAQ,GAChGtO,KAAKyO,MAAM,GAAK,IAAIL,EAClB,IAAID,EAAAjN,QAAOlB,KAAKqO,OAAO/M,SAASxB,EAAGE,KAAKqO,OAAO/M,SAASvB,EAAIuP,EAAWD,EAAUC,GAAYtP,KAAKsO,MAAQ,GAC5GtO,KAAKyO,MAAM,GAAK,IAAIL,EAClB,IAAID,EAAAjN,QAAOlB,KAAKqO,OAAO/M,SAASxB,EAAIuP,EAAUrP,KAAKqO,OAAO/M,SAASvB,EAAIuP,EAAWD,EAAUC,GAAYtP,KAAKsO,MAAQ,IAjJ3HvQ,EAAAmD,QAAAkN,iFCRA,MAAAhI,EAAAvI,EAAA,GACA0R,EAAA1R,EAAA,IAGAsN,EAAAtN,EAAA,GACA2R,EAAA3R,EAAA,IACAsQ,EAAAtQ,EAAA,GACAyN,EAAAzN,EAAA,GACA4R,EAAA5R,EAAA,IACA6R,EAAA7R,EAAA,IAKA8R,EAAA9R,EAAA,IACA6D,EAAA7D,EAAA,IAQAE,EAAAmD,sBAA2CQ,EAAAR,QAsBzCrB,YAAa2B,EAAoB+F,EAA4BD,GAC3D1F,QACA5B,KAAKsH,aAAeA,EACpBtH,KAAK+I,SAAW,IAAIwG,EAAArO,QAAS,IAAIiN,EAAAjN,QAAO,EAAG,EAAGM,EAASmG,SAASxG,MAAOK,EAASmG,SAASvG,SACzFpB,KAAK4P,iBAAmB,IAAID,EAAAzO,QAAiBlB,KAAK+I,UAClD/I,KAAKoI,SAAU,EACfpI,KAAK2I,QAAS,EACd3I,KAAK6P,YAAc,EACnB,MAAMC,EAAa,IAAIL,EAAAvO,QACrBM,EAASmG,SAASxG,MAClBK,EAASmG,SAASvG,OAClBkG,EAAasE,UAAUN,EAAA7J,QAAQiL,YAC/BlL,GAEIuO,EAAmB,IAAIL,EAAAxO,QAAKlB,KAAKsH,aAAc,GAAIlB,EAAA1G,WAAWuK,cAAeqB,EAAA7J,QAAQwI,cAAezI,GACpGwO,EAAO,IAAIR,EAAAtO,QAAKoG,EAAasE,UAAUN,EAAA7J,QAAQ+E,QAAQrF,MAAOmG,EAAasE,UAAUN,EAAA7J,QAAQ+E,QAAQpF,OAAQkG,EAAcyI,EAAkBvO,GAC7IyO,EAAkB,IAAIP,EAAAxO,QAAKlB,KAAKsH,aAAc,GAAIlB,EAAA1G,WAAWwL,aAAcI,EAAA7J,QAAQyJ,aAAc1J,GACjG0O,EAAY,IAAIR,EAAAxO,QAAKlB,KAAKsH,aAAc,GAAIlB,EAAA1G,WAAWuL,MAAOK,EAAA7J,QAAQwJ,MAAOzJ,EAAUyO,EAAiBjQ,MAC9GA,KAAKmQ,SACLnQ,KAAKoQ,YACLpQ,KAAK4H,eACL5H,KAAKqQ,gBACLrQ,KAAKsQ,YAELtQ,KAAKmQ,MAAM3L,KAAKuL,GAChB/P,KAAKmQ,MAAM3L,KAAKyL,GAChBjQ,KAAKmQ,MAAM3L,KAAK0L,GAEhBlQ,KAAKoQ,SAAS5L,KAAKwL,GACnBhQ,KAAKoQ,SAAS5L,KAAKsL,GAEnBI,EAAUzE,KAAKhG,QAAQ8K,GAASvQ,KAAKoQ,SAAS5L,KAAK+L,IACnDN,EAAgBxE,KAAKhG,QAAQ+K,GAAUxQ,KAAKoQ,SAAS5L,KAAKgM,IAC1DT,EAAiBtE,KAAKhG,QAAQ+K,GAAUxQ,KAAKoQ,SAAS5L,KAAKgM,IAE3DxQ,KAAKqQ,aAAa7L,KAAKwL,GAEvBE,EAAUzE,KAAKhG,QAAQ8K,GAASvQ,KAAKqQ,aAAa7L,KAAK+L,IACvDN,EAAgBxE,KAAKhG,QAAQ+K,GAAUxQ,KAAKqQ,aAAa7L,KAAKgM,IAC9DT,EAAiBtE,KAAKhG,QAAQ+K,GAAUxQ,KAAKqQ,aAAa7L,KAAKgM,IAE/DxQ,KAAKsQ,SAAS9L,KAAKwL,GACnBhQ,KAAKsQ,SAAS9L,KAAKsL,GACnB9P,KAAKsQ,SAAS9L,KAAK0L,GACnBlQ,KAAKsQ,SAAS9L,KAAKuL,GACnB/P,KAAKsQ,SAAS9L,KAAKyL,GAEnBjQ,KAAK4H,YAAYpD,KAAKwL,GACtBhQ,KAAK4H,YAAYpD,KAAKsL,GACtB9P,KAAK4H,YAAYpD,KAAKuL,GACtB/P,KAAK4H,YAAYpD,KAAKyL,GACtBjQ,KAAK4H,YAAYpD,KAAK0L,GAEtBlQ,KAAKyQ,gBAAkBzQ,KAAKsH,aAAauE,SAASP,EAAA7J,QAAQiP,WAAYvF,EAAAvH,UAAUqC,WAChFjG,KAAK2Q,cAAgB3Q,KAAKsH,aAAauE,SAASP,EAAA7J,QAAQmP,UAAWzF,EAAAvH,UAAUqC,WAC7EsB,EAAasJ,SAASb,GAOxBnQ,OAAQ2K,GACNxK,KAAK8Q,YACL9Q,KAAK+I,SAASjB,QACd9H,KAAK+I,SAASgG,OAAO/O,KAAKqQ,cAC1BrQ,KAAK4P,iBAAiBmB,kBACtB/Q,KAAKsQ,SAAS7K,QAAQuL,GAAWA,EAAQ7O,KAAKqI,IAMhD3K,YACE,GAAuC,IAAnCG,KAAKmQ,MAAM,GAAGc,UAAUxN,OAAc,CACxC,MAAMrC,EAASpB,KAAKsH,aAAasE,UAAUN,EAAA7J,QAAQwJ,OAAO7J,OACpDD,EAAQnB,KAAKsH,aAAasE,UAAUN,EAAA7J,QAAQwJ,OAAO9J,MACzD,IAAIrB,EAAI,IACJC,GAAKqB,EACT,MAAM8P,EAAa,IAAJnR,EACf,IAAK,IAAI9B,EAAI,EAAGA,GAAK,GAAIA,IACvB+B,KAAKmQ,MAAM,GAAGpR,IAAIe,EAAGC,EAAG,KACxBD,GAAKqB,EAAQ,GACTlD,EAAI,GAAM,IACZ6B,EAAI,IACJC,GAAKmR,IAMbrR,cACEG,KAAK6P,aAAe,GACpB7P,KAAKwC,MAAQxC,KAAK6P,YAClB7P,KAAKyC,SAMP5C,WACEG,KAAKyQ,gBAAgB/H,OACrB/F,SAASC,eAAe,aAAauO,MAAMC,QAAU,QACrDpR,KAAK2Q,cAAgB3Q,KAAKsH,aAAauE,SAASP,EAAA7J,QAAQmP,UAAWzF,EAAAvH,UAAUqC,WAC7EjG,KAAK2Q,cAAcjG,MAAK,GAM1B7K,QACEG,KAAKyQ,gBAAgB/H,OACrB1I,KAAK2Q,cAAcjI,OACnB/F,SAASC,eAAe,aAAauO,MAAMC,QAAU,OACrDpR,KAAK+I,SAASjB,QACd9H,KAAKoQ,SAAS3K,QAAQ4L,GAAUA,EAAOtP,QACvC/B,KAAK8Q,YACL9Q,KAAK6P,YAAc,EACnB7P,KAAKwC,MAAQxC,KAAK6P,YAClB7P,KAAKyC,SACLzC,KAAKyQ,gBAAgB/F,MAAK,oFCpK9B,MAAA4G,EAAAzT,EAAA,GAGA,IAAK0T,GAAL,SAAKA,GACHA,EAAA,UACAA,EAAA,yBACAA,EAAA,mBACAA,EAAA,gBAJF,CAAKA,WAaLxT,EAAAmD,cAQErB,YAAa2R,EAAmBhQ,EAAoB8F,EAA4BzD,GAC9E7D,KAAK4G,QAAUjE,SAASC,eAAe4O,GACvCxR,KAAKwB,SAAWA,EAChBxB,KAAKsH,aAAeA,EACpBtH,KAAK6D,aAAeA,EACpB7D,KAAKyR,SAAU,EAGV5R,OACLG,KAAK0R,iBACL1R,KAAK2R,mBAAmB,eAAgB,WAAY,qBACpD3R,KAAK4R,iBAAiB,aAAc,SAAU,mBAC9C5R,KAAK6R,gBAAgB,YAAa,QAAS,kBAGtChS,QACL,KAAOG,KAAK4G,QAAQkL,YAClB9R,KAAK4G,QAAQmL,YAAY/R,KAAK4G,QAAQkL,YAExC9R,KAAK+B,OAGAlC,aACLG,KAAK4G,QAAQuK,MAAMC,QAAUpR,KAAKyR,QAAU,OAAS,QACrDzR,KAAKyR,SAAWzR,KAAKyR,QAGf5R,iBACNG,KAAKgS,SAAWrP,SAASsP,cAAc,OACvCjS,KAAKgS,SAASE,UAAU3E,IAAIgE,EAAeY,KAC3CnS,KAAK4G,QAAQwL,YAAYpS,KAAKgS,UAGxBnS,mBAAoBuE,EAAYiO,EAAkBC,GACxDtS,KAAKuS,UAAUnO,EAAIiO,EAAUC,EAAOE,IAClC7T,OAAO8T,KAAKzS,KAAKwB,SAASM,UAAU2D,QAClCiN,GAAW1S,KAAK2S,SACd3S,KAAKwB,SAASM,SAAS4Q,GACvBA,EACA,OACA1S,KAAKwB,SAASM,SAAS4Q,GACvBF,EACAI,GAAS5S,KAAKwB,SAASqR,OAAOD,EAAM3T,MAAO2T,EAAMxO,QAMjDvE,iBAAkBuE,EAAYiO,EAAkBC,GACtDtS,KAAKuS,UAAUnO,EAAIiO,EAAUC,EAAOE,IAClC7T,OAAO8T,KAAKzS,KAAKwB,SAASgM,QAAQ/H,QAChCiN,GAAW1S,KAAK2S,SACdD,EACA1S,KAAKwB,SAASgM,OAAOkF,GACrB,SACAA,EACAF,EACAI,GAAS5S,KAAKwB,SAASgM,OAAOkF,GAAWI,OAAOF,EAAM3T,WAMtDY,gBAAiBuE,EAAYiO,EAAkBC,GACrDtS,KAAKuS,UAAUnO,EAAIiO,EAAUC,EAAOE,IAClCxS,KAAK2S,SACH,eACA,EACA,QACA,iBACAH,EACAO,GAAU/S,KAAK6D,aAAamP,mBAAmBF,OAAOC,EAAO9T,SAE/De,KAAK2S,SACH,gBACA,EACA,QACA,kBACAH,EACAO,GAAU/S,KAAK6D,aAAaoP,oBAAoBH,OAAOC,EAAO9T,SAEhEe,KAAK2S,SACH,gBACA,EACA,QACA,kBACAH,EACAO,GAAU/S,KAAK6D,aAAaqP,oBAAoBJ,OAAOC,EAAO9T,WAK5DY,QAASyC,EAAO6Q,GACtB,IAAIC,EACAC,EACJD,EAAazQ,SAAS2Q,uBAAuB/B,EAAegC,aAC5D,IAAK,IAAItV,EAAI,EAAGA,EAAImV,EAAW3P,OAAQxF,IACrCmV,EAAWnV,GAAGkT,MAAMC,QAAU,OAEhCiC,EAAU1Q,SAAS2Q,uBAAuB/B,EAAeiC,UACzD,IAAK,IAAIvV,EAAI,EAAGA,EAAIoV,EAAQ5P,OAAQxF,IAClCoV,EAAQpV,GAAGwV,UAAYJ,EAAQpV,GAAGwV,UAAUC,QAAQ,IAAMnC,EAAeoC,OAAQ,IAEnFhR,SAASC,eAAeuQ,GAAOhC,MAAMC,QAAU,QAC/C9O,EAAMsR,cAAcH,WAAa,IAAMlC,EAAeoC,OAGhD9T,UAAWuE,EAAYiO,EAAkBC,EAAe5N,GAC9D,MAAM8N,EAAY7P,SAASsP,cAAc,OACnC4B,EAAWlR,SAASsP,cAAc,UAClC6B,EAAenR,SAASsP,cAAc,MAC5CX,EAAApQ,QAAa2P,SAASgD,GAAW,QAAS,cAAevR,GAAStC,KAAK+T,QAAQzR,EAAO8B,IACtFyP,EAASG,YAAc3B,EACvBwB,EAAS3B,UAAU3E,IAAIgE,EAAeiC,UACtChB,EAAUpO,GAAKA,EACfoO,EAAUN,UAAU3E,IAAIgE,EAAegC,aACvCf,EAAUJ,YAAY0B,GACtBA,EAAaE,YAAc1B,EAC3BtS,KAAKgS,SAASI,YAAYyB,GAC1B7T,KAAK4G,QAAQwL,YAAYI,GACzB9N,EAAS8N,GAGH3S,SAAUuE,EAAInF,EAAOqF,EAAM2P,EAAmBC,EAAQC,EAAQ5P,GAAS6P,IAAK,EAAGvT,IAAK,EAAGwT,KAAM,KACnG,MAAMC,EAAM3R,SAASsP,cAAc,OAC7BsC,EAAQ5R,SAASsP,cAAc,SAC/BW,EAAQjQ,SAASsP,cAAc,SACrCqC,EAAIpC,UAAU3E,IAAI,OAClBgH,EAAMC,aAAa,MAAOpQ,GAC1BmQ,EAAMP,YAAcC,EACpBrB,EAAMxO,GAAKA,EACXwO,EAAMpU,KAAO4F,EACbwO,EAAM3T,MAAQA,EACd2T,EAAMtO,KAAOA,EACA,UAATA,IACFsO,EAAMwB,IAAM7P,EAAK6P,IAAIzN,WACrBiM,EAAM/R,IAAM0D,EAAK1D,IAAI8F,WACrBiM,EAAMyB,KAAO9P,EAAK8P,KAAK1N,YAEzBiM,EAAMvQ,iBAAiB,SAAUC,GAAS6R,EAAOvB,IACjD0B,EAAIlC,YAAYmC,GAChBD,EAAIlC,YAAYQ,GAChBsB,EAAO9B,YAAYkC,oFCxKvB,MAAArM,EAAApK,EAAA,GASAE,EAAAmD,cAUErB,YAAa0B,GACXvB,KAAK8B,UACH2S,EAAKxM,EAAAtG,QAAQ+L,GACbjO,EAAKwI,EAAAtG,QAAQgM,KACb+G,EAAKzM,EAAAtG,QAAQ2L,KACb/O,EAAK0J,EAAAtG,QAAQ8L,MACbkH,MAAS1M,EAAAtG,QAAQsM,MACjBjP,EAAKiJ,EAAAtG,QAAQiH,SAEf5I,KAAKwN,QACHM,YAAa,IACbI,UAAW,GACXN,SAAU,GACVhB,aAAc,IAEhB5M,KAAKiE,OACH2Q,OAAQ,EACR5O,QAAS,EACT6O,QAAS,GAEX7U,KAAK2H,SAAWpG,EAGlB1B,QAASZ,GACP,OAAON,OAAO8T,KAAKzS,KAAK8B,UAAUoF,OAAO3E,GAAOvC,KAAK8B,SAASS,KAAStD,GAAO,GAGhFY,OAAQiV,EAAQX,GACd,IAAIY,EAAS/U,KAAKgV,QAAQb,GACtBW,IAAWC,IACbxL,QAAQC,IAAI,OAASuL,EAAQ,SAAWD,EAAS,WAAaX,GAC9DnU,KAAK8B,SAASgT,GAAU9U,KAAK8B,SAASiT,UAC/B/U,KAAK8B,SAASiT,qFC3C3BhX,EAAAmD,cAMErB,cACEG,KAAKiV,aAAetS,SAASC,eAAe,SAOvC/C,OAAQ2C,GACbxC,KAAKiV,aAAaC,UAAY1S,EAAMmE,kGCvBxCwO,EAqBStV,cAAe0E,EAAMG,GAC1B,IAAI0Q,EAAQ,IAAIC,eAChBD,EAAM/S,iBAAiB,OAAQ,KAC7BqC,EAAS0Q,EAAMrQ,YAEjBqQ,EAAME,KACJ/Q,EAAKK,OAASL,EAAKK,OAASuQ,EAAKI,SAAS3Q,OAC1CL,EAAKM,IAAMN,EAAKM,IAAMsQ,EAAKI,SAAS1Q,IACpCN,EAAKiR,MAAQjR,EAAKiR,MAAQL,EAAKI,SAASC,OAEtCjR,EAAKhF,eAAe,gBACtB6V,EAAMK,iBACJ,eACAlR,EAAKmR,YAAcnR,EAAKmR,YAAcP,EAAKI,SAASG,aAGpDnR,EAAKhF,eAAe,kBACtB6V,EAAMtQ,aAAeP,EAAKO,cAExBP,EAAKhF,eAAe,SAAgC,iBAAdgF,EAAKoR,OAC7CpR,EAAKoR,KAAOC,KAAKC,UAAUtR,EAAKoR,OAElCP,EAAMU,KAAKvR,EAAKoR,KAAOpR,EAAKoR,KAAO,OA1CtBR,EAAAI,UACb1Q,IAAK,GACLD,OAAQ,MACR8Q,YAAa,YACbF,OAAO,EACPG,KAAM,MANV5X,EAAAmD,QAAAiU,iFCMApX,EAAAmD,cAaErB,YAAakW,EAAyBxQ,EAAYC,GAChDxF,KAAKgW,OAASD,EACd/V,KAAKiW,YAAc1Q,EACnBvF,KAAKkW,aAAe1Q,EACpBxF,KAAKmW,cAAgB3V,KAAKM,MAAMd,KAAKgW,OAAO7U,MAAQnB,KAAKiW,aAO3DF,YACE,OAAO/V,KAAKgW,OAOdD,UAAWA,GACT,KAAMA,aAAiB3Q,OACrB,MAAM,IAAI/E,MAAM,6CAElBL,KAAKgW,OAASD,EAOhBxQ,iBACE,OAAOvF,KAAKiW,YAOd1Q,eAAgBA,GACdvF,KAAKiW,YAAc1Q,EAOrBC,kBACE,OAAOxF,KAAKkW,aAOd1Q,gBAAiBA,GACfxF,KAAKkW,aAAe1Q,EAOtB4Q,mBACE,OAAOpW,KAAKmW,cAOdC,iBAAkBA,GAChBpW,KAAKmW,cAAgBC,mFCpFzBrY,EAAAmD,cAcErB,YAAawW,EAAcC,EAAsBrR,GAC/CjF,KAAKqW,aAAeA,EACpBrW,KAAKsW,WAAaA,EAClBtW,KAAKiF,OAASA,EACdjF,KAAKuW,SAAWvW,KAAKqW,aAAaG,aAClCxW,KAAKuW,SAASE,KAAKxX,MAAQ,GAC3Be,KAAKuW,SAASG,QAAQ1W,KAAKsW,YAC3BtW,KAAK2W,SAAU,EAOjB9W,KAAM2I,GAAO,GACXxI,KAAK4W,OAAS5W,KAAKqW,aAAaQ,qBAChC7W,KAAK4W,OAAO3R,OAASjF,KAAKiF,OAC1BjF,KAAK4W,OAAOpO,KAAOA,EACnBxI,KAAK4W,OAAOF,QAAQ1W,KAAKuW,UACzBvW,KAAK4W,OAAO1U,MAAM,GAMpBrC,OACMG,KAAK4W,QACP5W,KAAK4W,OAAOlO,KAAK,oFC/CvB,MAAAoO,EAAAjZ,EAAA,IAQAE,EAAAmD,cASErB,cACEG,KAAK+W,mBAMPlX,mBACE,IAEEuC,OAAO4U,aAAe5U,OAAO4U,cAAgBC,mBAC7CjX,KAAKqW,aAAe,IAAIW,aACxBhX,KAAKsW,WAAatW,KAAKqW,aAAaG,aACpCxW,KAAKkX,YAAclX,KAAKqW,aAAaG,aACrCxW,KAAKmX,YAAcnX,KAAKqW,aAAaG,aACrCxW,KAAKsW,WAAWG,KAAKxX,MAAQ,EAC7Be,KAAKsW,WAAWI,QAAQ1W,KAAKqW,aAAae,aAC1CpX,KAAKkX,YAAYR,QAAQ1W,KAAKsW,YAC9BtW,KAAKmX,YAAYT,QAAQ1W,KAAKsW,YAC9BtW,KAAKmX,YAAYV,KAAKxX,MAAQ,EAC9Be,KAAKkX,YAAYT,KAAKxX,MAAQ,EAC9B,MAAOoY,GACP9N,QAAQC,IAAI,mDAUhB3J,YAAa8V,EAAMvR,EAAIM,GACrB1E,KAAKqW,aAAaiB,gBAAgB3B,GAAM4B,KACtCtS,GAAUP,EAASO,GACnBuS,IAAWjO,QAAQC,IAAI,iCAAmCgO,KAQvD3X,mBAAoBZ,GACzBe,KAAKsW,WAAWG,KAAKxX,MAAQA,EAOxBY,oBAAqBZ,GAC1Be,KAAKmX,YAAYV,KAAKxX,MAAQA,EAOzBY,oBAAqBZ,GAC1Be,KAAKkX,YAAYT,KAAKxX,MAAQA,EASzBY,YAAaoF,EAAQe,GAC1B,OAAO,IAAI8Q,EAAA5V,QAAMlB,KAAKqW,aAAcrQ,EAAUhG,KAAKmX,YAAcnX,KAAKkX,YAAajS,oFCvFvF,MAAAwS,EAAA5Z,EAAA,IACAsN,EAAAtN,EAAA,GACA6Z,EAAA7Z,EAAA,IACA8Z,EAAA9Z,EAAA,IACA+Z,EAAA/Z,EAAA,IACAoK,EAAApK,EAAA,GACA8L,EAAA9L,EAAA,GACA6L,EAAA7L,EAAA,GACAyN,EAAAzN,EAAA,GACAga,EAAAha,EAAA,IACAia,EAAAja,EAAA,IACAyT,EAAAzT,EAAA,GACAka,EAAAla,EAAA,UASAma,EAWEnY,cACE,MAAMoY,EAAWtV,SAASC,eAAe,cACzC5C,KAAKwH,SAAW,IAAI0Q,IACpBlY,KAAK6D,aAAe,IAAI4T,EAAAvW,QACxBlB,KAAKsH,aAAe,IAAI6D,EAAAjK,QAAalB,KAAK6D,cAC1C7D,KAAKmY,IAAM,IAAIT,EAAAxW,QACflB,KAAKwB,SAAW,IAAImW,EAAAzW,QAAS,IAAIwI,EAAAxI,QAAU+W,EAAS9W,MAAO8W,EAAS7W,SACpEpB,KAAKuH,aAAe,IAAIU,EAAA/G,QAAalB,KAAKwB,UAOrC3B,mBACL,OAAO,IAAImY,EAMNnY,OACLG,KAAKoY,eACLpY,KAAKqY,iBACLrY,KAAKsH,aAAagR,YAAY,IAAMtY,KAAKuY,aAMnC1Y,eACN,MAAMoY,EAAWtV,SAASC,eAAe,cACnC4V,EAAa7V,SAASC,eAAe,QACrC6V,EAAa9V,SAASC,eAAe,QAC3C5C,KAAKwH,SAAS4C,IAAIT,EAAAhK,UAAU+M,WAAYuL,EAASS,WAAW,OAC5D1Y,KAAKwH,SAAS4C,IAAIT,EAAAhK,UAAUsN,KAAMuL,EAAWE,WAAW,OACxD1Y,KAAKwH,SAAS4C,IAAIT,EAAAhK,UAAUuK,KAAMuO,EAAWC,WAAW,OAMlD7Y,iBACNG,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQiL,WAAY,iCAAkCvB,EAAAvH,UAAUgC,QAChG5F,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQ+E,OAAQ,0BAA2B2E,EAAAvH,UAAUgC,QACrF5F,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQwI,cAAe,4BAA6BkB,EAAAvH,UAAUgC,QAC9F5F,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQwJ,MAAO,2BAA4BE,EAAAvH,UAAUgC,QACrF5F,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQyJ,aAAc,kCAAmCC,EAAAvH,UAAUgC,QACnG5F,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQiP,WAAY,8BAA+BvF,EAAAvH,UAAU8B,OAC7F1F,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQuL,MAAO,yBAA0B7B,EAAAvH,UAAU8B,OACnF1F,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQqK,YAAa,6BAA8BX,EAAAvH,UAAU8B,OAC7F1F,KAAKsH,aAAaqR,cAAcrN,EAAA7J,QAAQmP,UAAW,6BAA8BzF,EAAAvH,UAAU8B,OAGrF7F,2BACN,MAAM+Y,EAAQjW,SAASC,eAAe,SACtCgW,EAAMvW,iBAAiB,aAAc,IAAMrC,KAAKuH,aAAaqR,SAC7DA,EAAMvW,iBAAiB,WAAY,IAAMrC,KAAKuH,aAAasR,eAC3DD,EAAMvW,iBAAiB,cAAeC,IACpCA,EAAMS,kBACC,IAQHlD,QAAS2I,GACf,MAAMsQ,EAAe,IAAIlB,EAAA1W,QAAa,gBAAiBlB,KAAKwB,SAAUxB,KAAKsH,aAActH,KAAK6D,cACxFkV,EAAWpW,SAASC,eAAe,aACnCwH,EAAMzH,SAASC,eAAe,YAC9BiE,GAAU,QAAS,cAEzBiS,EAAa/W,OACb/B,KAAKgZ,2BACL1H,EAAApQ,QAAa2P,SAASkI,EAAUlS,EAAQ,IAAM2B,EAAKK,WACnDyI,EAAApQ,QAAa2P,SAASzG,EAAKvD,EAAQ,KACjCiS,EAAaG,aACbzQ,EAAK0Q,gBAODrZ,YACN,MAAM2C,EAAQ,IAAIqV,EAAA3W,QAAclB,KAAKwB,SAAUxB,KAAKuH,aAAcvH,KAAKsH,cACjEY,EAAO,IAAI6P,EAAA7W,QAAasB,EAAOxC,KAAKsH,aAActH,KAAKuH,aAAcvH,KAAKwB,SAAUxB,KAAKwH,UACzFgB,EAAO,IAAIsP,EAAA5W,QAASgH,GAC1BlI,KAAKuH,aAAasJ,SAASrI,GAC3BxI,KAAKmZ,QAAQ3Q,GACbhG,EAAMqO,SAAS7Q,KAAKmY,KACpB3P,EAAKtG,SAxGTnE,EAAAmD,QAAA8W,iFCrBA,MAAAoB,EAAAvb,EAAA,IAQA8E,SAASN,iBAAiB,mBAAoB,IAAM+W,EAAAlY,QAAYmY,YAAYtX","file":"invaders.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collideable entities.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface ICollideAble {\n  collidesWith: EntityType[]\n  colliding: boolean\n  type: EntityType\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean\n}\n","export enum ContextId {\n  BACKGROUND, MAIN, SHIP\n}\n","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n","/**\n * Dimension class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Dimension {\n  width: number\n  height: number\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width Width\n   * @param {number} height Height\n   */\n  constructor (width: number, height: number) {\n    this.width = width\n    this.height = height\n  }\n\n  /**\n   * Scale the dimension.\n   *\n   * @param {number} factor\n   */\n  scale (factor: number) {\n    this.width *= factor\n    this.height *= factor\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport Settings from '../../config/Settings'\nimport Dimension from '../geometry/Dimension'\n\n/**\n * Base entity class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Entity {\n  dimension: Dimension\n  settings: Settings\n  position: Vector2\n\n  /**\n   * Constructor. Sets position and dimension of entity.\n   *\n   * @param {Vector2} position Initial position\n   * @param {Dimension} dimension Initial dimension\n   * @param {Settings} settings\n   */\n  constructor (position: Vector2, dimension: Dimension, settings: Settings) {\n    this.position = position\n    this.dimension = dimension\n    this.settings = settings\n  }\n\n  init (): void {\n    // throw new Error('Implement in subclass.')\n  }\n}\n","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n","import Observable from '../observer/Observable'\nimport Settings from '../../config/Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyboard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../ajax/Ajax'\nimport { AssetId } from '../../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport ICollideAble, { EntityType } from '../interfaces/ICollideAble'\n\n/**\n * Hitbox used for defining collision boundaries.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class HitBox implements ICollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static register (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n","import Background from '../models/Background'\nimport AssetManager from '../lib/client/AssetManager'\nimport InputManager from '../lib/client/InputManager'\nimport Settings from '../config/Settings'\nimport IGame from '../lib/interfaces/IGame'\nimport IGameState from '../lib/interfaces/IGameState'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Space models main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersGame implements IGame {\n  state: IGameState\n  background: Background\n  assetManager: AssetManager\n  inputManager: InputManager\n  settings: Settings\n  contexts: Map<ContextId, CanvasRenderingContext2D>\n\n  /**\n   *\n   * @param {IGameState} state\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param {CanvasRenderingContext2D[]} contexts\n   */\n  constructor (state: IGameState, assetManager: AssetManager, inputManager: InputManager, settings: Settings, contexts: Map<ContextId, CanvasRenderingContext2D>) {\n    this.state = state\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.contexts = contexts\n    this.init()\n  }\n\n  /**\n   *\n   */\n  public init (): void {\n    this.contexts.forEach(context => context.clearRect(0, 0, this.settings.gameSize.width, this.settings.gameSize.height))\n    this.state.reset()\n  }\n\n  /**\n   *\n   */\n  public clear (): void {\n    this.state.renderables.forEach(renderable => renderable.clear(this.contexts.get(renderable.contextId)))\n  }\n\n  /**\n   *\n   */\n  public render (): void {\n    this.state.renderables.forEach(renderable => renderable.render(this.contexts.get(renderable.contextId)))\n  }\n}\n","import IGameLoop from '../lib/interfaces/IGameLoop'\nimport IGame from '../lib/interfaces/IGame'\nimport { Actions } from '../lib/client/InputManager'\nimport Observer from '../lib/observer/Observer'\n\n/**\n * Game loop.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class GameLoop implements IGameLoop, Observer {\n  public game: IGame\n  public lastTime: number\n  public frameId: number\n  private state: any\n\n  /**\n   * Constructor.\n   *\n   * @param {IGame} game Game instance\n   */\n  constructor (game: IGame) {\n    this.game = game\n    this.lastTime = null\n    this.state = {}\n  }\n\n  /**\n   *\n   */\n  public start (): void {\n    this.game.init()\n    this.game.state.running = true\n    this.frameId = requestAnimationFrame(time => this.loop(time))\n  }\n\n  /**\n   *\n   */\n  public stop (): void {\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId)\n    }\n  }\n\n  public restart (): void {\n    this.stop()\n    this.start()\n  }\n\n  /**\n   *\n   */\n  public togglePause (): void {\n    this.game.state.paused = !this.game.state.paused\n  }\n\n  /**\n   *\n   */\n  public loop (time: number): void {\n    if (this.state[Actions.RESTART]) {\n      this.restart()\n    } else {\n      if (this.game.state.running) {\n        this.game.clear()\n        if (this.lastTime !== null) {\n          const diff = time - this.lastTime\n          if (!this.game.state.paused) {\n            this.game.state.update(diff / 1000)\n          }\n        }\n        this.lastTime = time\n        this.game.render()\n        this.frameId = requestAnimationFrame(time => this.loop(time))\n      }\n    }\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n}\n","import QuadTree from './QuadTree'\nimport ICollisionManager from '../interfaces/ICollisionManager'\n\n/**\n * Collision Manager.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class CollisionManager implements ICollisionManager {\n  quadTree: QuadTree\n\n  /**\n   * Constructor.\n   *\n   * @param {QuadTree} quadTree\n   */\n  constructor (quadTree: QuadTree) {\n    this.quadTree = quadTree\n  }\n\n  /**\n   * Collision detection algorithm.\n   */\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].dimension.width &&\n            Math.floor(objects[i].position.x) + objects[i].dimension.width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].dimension.height &&\n            Math.floor(objects[i].position.y) + objects[i].dimension.height > Math.floor(obj[j].position.y))\n        && objects[i].alive && obj[j].alive) {\n          console.log(objects[i])\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Sound from '../lib/audio/Sound'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\nimport IGameState from '../lib/interfaces/IGameState'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  velocity: Vector2\n  speed: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  explosionSound: Sound\n  game: IGameState\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Pool} bulletPool\n   * @param {Settings} settings\n   * @param {Sound} sound\n   * @param {IGameState} game\n   */\n  constructor (width: number, height: number, sprite, type: EntityType, bulletPool: Pool, settings: Settings, sound: Sound, game: IGameState) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.contextId = ContextId.MAIN\n    this.explosionSound = sound\n    this.game = game\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.position.set(0, 0)\n    this.velocity.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.dimension.width / 2), Math.floor(this.position.y + this.dimension.height), -200)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (this.alive) {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y, this.dimension.width + 1, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt Delta time\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      if (this.alive) {\n        this.position.addVector(this.velocity)\n        if (this.position.x <= this.leftEdge) {\n          this.velocity.x = this.speed\n        } else if (this.position.x >= this.rightEdge + this.dimension.width) {\n          this.velocity.x = -this.speed\n        } else if (this.position.y >= this.bottomEdge) {\n          this.speed = 1.5\n          this.velocity.y = 0\n          this.position.y -= 5\n          this.velocity.x = -this.speed\n        }\n        this.chance = Math.floor(Math.random() * 101)\n        if (this.chance / 100 < this.percentFire) {\n          this.fire()\n        }\n      }\n    } else {\n      this.game.scorePoints()\n      this.explosionSound.play()\n      this.alive = false\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.velocity.set(0, speed)\n    this.speed = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\n\n/**\n * Bullet class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Bullet extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  speed: number\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, type: EntityType, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 0\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height)) {\n      this.alive = false\n    } else {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y - 1, this.dimension.width + 1, this.dimension.height + 1)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height) ||\n      this.colliding) {\n      this.alive = false\n      this.colliding = false\n    } else {\n      this.position.y -= Math.floor(this.speed * dt)\n    }\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Bullet from './Bullet'\nimport Enemy from './Enemy'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport { AssetId } from '../enum/AssetId'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IGameState from '../lib/interfaces/IGameState'\n\n/**\n *\n */\nexport default class Pool implements IRenderable, IMovable {\n  contextId: ContextId\n  assetManager: AssetManager\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  settings: Settings\n  game: IGameState\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {number} maxSize\n   * @param {EntityType} type\n   * @param {AssetId} asId\n   * @param {Settings} settings\n   * @param {Pool} pool\n   * @param {IGameState}game\n   */\n  constructor (assetManager: AssetManager, maxSize: number, type: EntityType, asId: AssetId, settings: Settings, pool: Pool = null, game: IGameState = null) {\n    this.assetManager = assetManager\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const sprite = this.assetManager.getSprite(this.assetId)\n    if (this.type === EntityType.ENEMY) {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(\n          sprite.width,\n          sprite.height, sprite,\n          this.type,\n          this.subPool,\n          this.settings,\n          this.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO), this.game)\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Bullet(sprite.width, sprite.height, sprite, this.type, this.settings)\n      }\n    }\n  }\n\n  /**\n   *\n   * @returns {IMovable[]}\n   */\n  public getPool (): IMovable[] {\n    return this.pool.filter(object => object.alive)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  public get (x: number, y: number, speed: number): void {\n    const lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  public getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  public render (ctx: CanvasRenderingContext2D): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        this.pool[i].render(ctx)\n      } else {\n        this.pool[i].init()\n        this.pool.push((this.pool.splice(i, 1))[0])\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  public clear (ctx: CanvasRenderingContext2D): void {\n    this.pool.forEach(object => object.clear(ctx))\n  }\n\n  public move (dt: number): void {\n    this.pool.forEach(object => object.move(dt))\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport Settings from '../config/Settings'\n\n/**\n * Shifting background.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Background extends Entity implements IRenderable, IMovable {\n  contextId: ContextId\n  speed: number\n  sprite: any\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 1\n    this.sprite = sprite\n    this.contextId = ContextId.BACKGROUND\n  }\n\n  /**\n   * Initialize.\n   */\n  init (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    ctx.drawImage(this.sprite, this.position.x, this.position.y - this.dimension.height)\n  }\n\n  /**\n   * Update position.\n   *\n   * @param {number} dt Delta Time\n   */\n  move (dt: number): void {\n    this.position.y += this.speed\n    if (this.position.y >= this.dimension.height) {\n      this.position.y = 0\n    }\n  }\n\n  /**\n   * Clear the background.\n   */\n  clear (): void {\n    // Not applicable\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport Observer from '../lib/observer/Observer'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport { Actions } from '../lib/client/InputManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Player ship model class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Ship extends Entity implements IRenderable, IMovable, Observer, ICollideAble {\n  acceleration: Vector2\n  sprite: any\n  bulletPool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings: Settings\n  laserSound: Sound\n  assetManager: AssetManager\n  contextId: ContextId\n  alive: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, assetManager: AssetManager, pool: Pool, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.startPosition = new Vector2(0, 0)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.bulletPool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.assetManager = assetManager\n    this.maxTop = Math.floor(this.settings.gameSize.height / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n    this.contextId = ContextId.SHIP\n    this.alive = false\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const startX = this.settings.gameSize.width / 2 - this.assetManager.getSprite(AssetId.PLAYER).width\n    const startY = this.settings.gameSize.height / 4 * 3 + this.assetManager.getSprite(AssetId.PLAYER).height * 2\n    this.position.setVector(new Vector2(startX, startY))\n    this.velocity.set(0, 0)\n    this.colliding = false\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 200,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 200\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (!this.colliding) {\n      ctx.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.dimension.width, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      this.counter++\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.player.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.player.acceleration)\n      }\n      this.velocity.multiply(this.settings.player.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.player.maxVelocity)\n      const vel = this.velocity.clone()\n      vel.multiply(dt)\n      this.position.addVector(vel)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.settings.gameSize.width - this.dimension.width) {\n        this.position.x = this.settings.gameSize.width - this.dimension.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.settings.gameSize.height - this.dimension.height) {\n        this.position.y = this.settings.gameSize.height - this.dimension.height\n      }\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.player.fireDelay) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  /**\n   *\n   * @param state\n   */\n  update (state: any): void {\n    this.state = state\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import HitBox from './HitBox'\nimport ICollideAble from '../interfaces/ICollideAble'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: ICollideAble[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all models objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n","import IGameState from '../lib/interfaces/IGameState'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport QuadTree from '../lib/collision/QuadTree'\nimport Settings from '../config/Settings'\nimport InputManager from '../lib/client/InputManager'\nimport { default as AssetManager, AssetType } from '../lib/client/AssetManager'\nimport Ship from '../models/Ship'\nimport HitBox from '../lib/collision/HitBox'\nimport { AssetId } from '../enum/AssetId'\nimport Background from '../models/Background'\nimport Pool from '../models/Pool'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Entity from '../lib/entity/Entity'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Sound from '../lib/audio/Sound'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Observable from '../lib/observer/Observable'\n\n/**\n * Multiverse invaders game state.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersState extends Observable implements IGameState {\n  running: boolean\n  paused: boolean\n  quadTree: QuadTree\n  entities: Entity[]\n  renderables: IRenderable[]\n  collideables: ICollideAble[]\n  movables: IMovable[]\n  pools: Pool[]\n  assetManager: AssetManager\n  collisionManager: CollisionManager\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  playerScore: number\n\n  /**\n   *\n   * @param {Settings} settings\n   * @param {InputManager} inputManager\n   * @param {AssetManager} assetManager\n   * @param {CollisionManager} collisionManager\n   */\n  constructor (settings: Settings, inputManager: InputManager, assetManager: AssetManager) {\n    super()\n    this.assetManager = assetManager\n    this.quadTree = new QuadTree(new HitBox(0, 0, settings.gameSize.width, settings.gameSize.height))\n    this.collisionManager = new CollisionManager(this.quadTree)\n    this.running = false\n    this.paused = false\n    this.playerScore = 0\n    const background = new Background(\n      settings.gameSize.width,\n      settings.gameSize.height,\n      assetManager.getSprite(AssetId.BACKGROUND),\n      settings\n    )\n    const playerBulletPool = new Pool(this.assetManager, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET, settings)\n    const ship = new Ship(assetManager.getSprite(AssetId.PLAYER).width, assetManager.getSprite(AssetId.PLAYER).height, assetManager, playerBulletPool, settings)\n    const enemyBulletPool = new Pool(this.assetManager, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET, settings)\n    const enemyPool = new Pool(this.assetManager, 30, EntityType.ENEMY, AssetId.ENEMY, settings, enemyBulletPool, this)\n    this.pools = []\n    this.entities = []\n    this.renderables = []\n    this.collideables = []\n    this.movables = []\n\n    this.pools.push(playerBulletPool)\n    this.pools.push(enemyBulletPool)\n    this.pools.push(enemyPool)\n\n    this.entities.push(ship)\n    this.entities.push(background)\n\n    enemyPool.pool.forEach(enemy => this.entities.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n\n    this.collideables.push(ship)\n\n    enemyPool.pool.forEach(enemy => this.collideables.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n\n    this.movables.push(ship)\n    this.movables.push(background)\n    this.movables.push(enemyPool)\n    this.movables.push(playerBulletPool)\n    this.movables.push(enemyBulletPool)\n\n    this.renderables.push(ship)\n    this.renderables.push(background)\n    this.renderables.push(playerBulletPool)\n    this.renderables.push(enemyBulletPool)\n    this.renderables.push(enemyPool)\n\n    this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    inputManager.register(ship)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  update (dt: number): void {\n    this.spawnWave()\n    this.quadTree.clear()\n    this.quadTree.insert(this.collideables)\n    this.collisionManager.detectCollision()\n    this.movables.forEach(movable => movable.move(dt))\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    if (this.pools[2].getPool().length === 0) {\n      const height = this.assetManager.getSprite(AssetId.ENEMY).height\n      const width = this.assetManager.getSprite(AssetId.ENEMY).width\n      let x = 200\n      let y = -height\n      const spacer = y * 1.5\n      for (let i = 1; i <= 21; i++) {\n        this.pools[2].get(x, y, 300)\n        x += width + 25\n        if (i % 7 === 0) {\n          x = 200\n          y += spacer\n        }\n      }\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n    this.state = this.playerScore\n    this.notify()\n  }\n\n  /**\n   *\n   */\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  /**\n   *\n   */\n  reset (): void {\n    this.backgroundAudio.stop()\n    this.gameOverAudio.stop()\n    document.getElementById('game-over').style.display = 'none'\n    this.quadTree.clear()\n    this.entities.forEach(entity => entity.init())\n    this.spawnWave()\n    this.playerScore = 0\n    this.state = this.playerScore\n    this.notify()\n    this.backgroundAudio.play(true)\n  }\n}\n","import Settings from '../../config/Settings'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../event/EventHandler'\nimport AudioManager from './AudioManager'\n\nenum ElementClasses {\n  TAB = 'tab',\n  TAB_CONTENT = 'tabContent',\n  TAB_LINK = 'tabLink',\n  ACTIVE = 'active'\n}\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  visible: boolean\n\n  constructor (elementId: string, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = document.getElementById(elementId) as HTMLDivElement\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.visible = false\n  }\n\n  public init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu('keyboardMenu', 'Keyboard', 'Keyboard Settings')\n    this.createPlayerMenu('playerMenu', 'Player', 'Player Settings')\n    this.createAudioMenu('audioMenu', 'Audio', 'Audio Settings')\n  }\n\n  public clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  public toggleShow (): void {\n    this.element.style.display = this.visible ? 'none' : 'block'\n    this.visible = !this.visible\n  }\n\n  private createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add(ElementClasses.TAB)\n    this.element.appendChild(this.mainMenu)\n  }\n\n  private createKeyboardMenu (id: string, linkText: string, title: string): void {\n    this.createTab(id, linkText, title, container => {\n      Object.keys(this.settings.keyboard).forEach(\n        setting => this.addEntry(\n          this.settings.keyboard[setting],\n          setting,\n          'text',\n          this.settings.keyboard[setting],\n          container,\n          input => this.settings.setKey(input.value, input.id)\n        )\n      )\n    })\n  }\n\n  private createPlayerMenu (id: string, linkText: string, title: string): void {\n    this.createTab(id, linkText, title, container => {\n      Object.keys(this.settings.player).forEach(\n        setting => this.addEntry(\n          setting,\n          this.settings.player[setting],\n          'number',\n          setting,\n          container,\n          input => this.settings.player[setting] = Number(input.value)\n        )\n      )\n    })\n  }\n\n  private createAudioMenu (id: string, linkText: string, title: string): void {\n    this.createTab(id, linkText, title, container => {\n      this.addEntry(\n        'masterVolume',\n        1,\n        'range',\n        'Master Volume:',\n        container,\n        slider => this.audioManager.adjustMasterVolume(Number(slider.value))\n      )\n      this.addEntry(\n        'ambientVolume',\n        1,\n        'range',\n        'Ambient Volume:',\n        container,\n        slider => this.audioManager.adjustAmbientVolume(Number(slider.value))\n      )\n      this.addEntry(\n        'effectsVolume',\n        1,\n        'range',\n        'Effects Volume:',\n        container,\n        slider => this.audioManager.adjustEffectsVolume(Number(slider.value))\n      )\n    })\n  }\n\n  private openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName(ElementClasses.TAB_CONTENT)\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName(ElementClasses.TAB_LINK)\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' ' + ElementClasses.ACTIVE, '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' ' + ElementClasses.ACTIVE\n  }\n\n  private createTab (id: string, linkText: string, title: string, callback): void {\n    const container = document.createElement('div')\n    const menuLink = document.createElement('button')\n    const titleElement = document.createElement('h4')\n    EventHandler.register(menuLink, ['click', 'touchstart'], event => this.openTab(event, id))\n    menuLink.textContent = linkText\n    menuLink.classList.add(ElementClasses.TAB_LINK)\n    container.id = id\n    container.classList.add(ElementClasses.TAB_CONTENT)\n    container.appendChild(titleElement)\n    titleElement.textContent = title\n    this.mainMenu.appendChild(menuLink)\n    this.element.appendChild(container)\n    callback(container)\n  }\n\n  private addEntry (id, value, type, labelText: string, parent, action, opts = { min: 0, max: 1, step: 0.1 }): void {\n    const row = document.createElement('div')\n    const label = document.createElement('label')\n    const input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', id)\n    label.textContent = labelText\n    input.id = id\n    input.name = id\n    input.value = value\n    input.type = type\n    if (type === 'range') {\n      input.min = opts.min.toString()\n      input.max = opts.max.toString()\n      input.step = opts.step.toString()\n    }\n    input.addEventListener('change', event => action(input))\n    row.appendChild(label)\n    row.appendChild(input)\n    parent.appendChild(row)\n  }\n}\n","import { Actions } from '../lib/client/InputManager'\nimport Dimension from '../lib/geometry/Dimension'\n\n/**\n * Settings class for models applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyboard\n  player\n  audio\n  gameSize: Dimension\n\n  /**\n   *\n   * @param {Dimension} dimension\n   */\n  constructor (dimension: Dimension) {\n    this.keyboard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART\n    }\n    this.player = {\n      maxVelocity: 150,\n      fireDelay: 15,\n      friction: 0.9,\n      acceleration: 50\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n    this.gameSize = dimension\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyboard).filter(key => this.keyboard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyboard[newKey] = this.keyboard[oldKey]\n      delete this.keyboard[oldKey]\n    }\n  }\n}\n","import Observer from '../lib/observer/Observer'\n\n/**\n * Multiverse Invaders GUI.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersGui implements Observer {\n  scoreElement: HTMLElement\n\n  /**\n   * Constructor.\n   */\n  constructor () {\n    this.scoreElement = document.getElementById('score')\n  }\n\n  /**\n   *\n   * @param state\n   */\n  public update (state: any): void {\n    this.scoreElement.innerHTML = state.toString()\n  }\n}\n","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    if (this.source) {\n      this.source.stop(0)\n    }\n  }\n}\n","import Sound from '../audio/Sound'\n\n/**\n * Audio manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  public adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  public adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  public adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  public createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n","import AudioManager from '../lib/client/AudioManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport InvadersGui from '../gui/InvadersGui'\nimport Settings from '../config/Settings'\nimport SettingsMenu from '../lib/client/SettingsMenu'\nimport InputManager from '../lib/client/InputManager'\nimport { ContextId } from '../enum/ContextId'\nimport Dimension from '../lib/geometry/Dimension'\nimport { AssetId } from '../enum/AssetId'\nimport InvadersState from './InvadersState'\nimport GameLoop from './GameLoop'\nimport EventHandler from '../lib/event/EventHandler'\nimport InvadersGame from './InvadersGame'\nimport IGameLoop from '../lib/interfaces/IGameLoop'\n\n/**\n * Application application class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Application {\n  private audioManager: AudioManager\n  private assetManager: AssetManager\n  private gui: InvadersGui\n  private settings: Settings\n  private inputManager: InputManager\n  private contexts: Map<ContextId, CanvasRenderingContext2D>\n\n  /**\n   * Constructor.\n   */\n  constructor () {\n    const bgCanvas = document.getElementById('background') as HTMLCanvasElement\n    this.contexts = new Map<ContextId, CanvasRenderingContext2D>()\n    this.audioManager = new AudioManager()\n    this.assetManager = new AssetManager(this.audioManager)\n    this.gui = new InvadersGui()\n    this.settings = new Settings(new Dimension(bgCanvas.width, bgCanvas.height))\n    this.inputManager = new InputManager(this.settings)\n  }\n\n  /**\n   * Instantiate a singleton instance of Application.\n   * @returns {Application}\n   */\n  public static bootstrap (): Application {\n    return new Application()\n  }\n\n  /**\n   * Initialize the game.\n   */\n  public init (): void {\n    this.initContexts()\n    this.initAssetQueue()\n    this.assetManager.downloadAll(() => this.setUpGame())\n  }\n\n  /**\n   * Initialize all canvas contexts.\n   */\n  private initContexts (): void {\n    const bgCanvas = document.getElementById('background') as HTMLCanvasElement\n    const shipCanvas = document.getElementById('ship') as HTMLCanvasElement\n    const mainCanvas = document.getElementById('main') as HTMLCanvasElement\n    this.contexts.set(ContextId.BACKGROUND, bgCanvas.getContext('2d'))\n    this.contexts.set(ContextId.SHIP, shipCanvas.getContext('2d'))\n    this.contexts.set(ContextId.MAIN, mainCanvas.getContext('2d'))\n  }\n\n  /**\n   * Queue assets to be preloaded.\n   */\n  private initAssetQueue (): void {\n    this.assetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\n    this.assetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\n    this.assetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\n    this.assetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\n  }\n\n  private initTouchControlElements (): void {\n    const shoot = document.getElementById('shoot')\n    shoot.addEventListener('touchstart', () => this.inputManager.shoot())\n    shoot.addEventListener('touchend', () => this.inputManager.cancelShoot())\n    shoot.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n  }\n\n  /**\n   *\n   * @param {IGameLoop} loop\n   */\n  private initGui (loop: IGameLoop): void {\n    const settingsMenu = new SettingsMenu('settings-menu', this.settings, this.assetManager, this.audioManager)\n    const gameOver = document.getElementById('game-over')\n    const set = document.getElementById('settings')\n    const events = ['click', 'touchstart']\n\n    settingsMenu.init()\n    this.initTouchControlElements()\n    EventHandler.register(gameOver, events, () => loop.restart())\n    EventHandler.register(set, events, () => {\n      settingsMenu.toggleShow()\n      loop.togglePause()\n    })\n  }\n\n  /**\n   * Set up all game relevant objects.\n   */\n  private setUpGame (): void {\n    const state = new InvadersState(this.settings, this.inputManager, this.assetManager)\n    const game = new InvadersGame(state, this.assetManager, this.inputManager, this.settings, this.contexts)\n    const loop = new GameLoop(game)\n    this.inputManager.register(loop)\n    this.initGui(loop)\n    state.register(this.gui)\n    loop.start()\n  }\n}\n","import Application from './application/Application'\n\n/**\n * Start script.\n *\n * @author Daniel Peters\n * @version 1.0\n */\ndocument.addEventListener('DOMContentLoaded', () => Application.bootstrap().init())\n"],"sourceRoot":""}