{"version":3,"sources":["webpack:///webpack/bootstrap 73076fdd0a47ce4f39d5","webpack:///./src/graphics/webgl-test.ts","webpack:///./src/graphics/webgl/WebGL.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","WebGL_1","document","addEventListener","canvas","getElementById","gl","default","initContext","initShaders","squareVerticesBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","initBuffers","WebGL","[object Object]","canvasElement","getContext","e","console","log","message","fragmentShader","getShader","vertexShader","shaderProgram","createProgram","vertexPositionAttribute","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","getAttribLocation","enableVertexAttribArray","id","shaderScript","shaderSource","currentChild","firstChild","nodeType","textContent","nextSibling","shader","type","createShader","FRAGMENT_SHADER","VERTEX_SHADER","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,uFC7DA,MAAAC,EAAA3B,EAAA,IAkBA4B,SAASC,iBAAiB,mBAAoB,KAC5C,IAAIC,EAASF,SAASG,eAAe,SACjCC,EAAKL,EAAAM,QAAMC,YAAYJ,GAEvBE,IACFL,EAAAM,QAAME,YAAYH,GAnBtB,SAAsBA,GACpB,MAAMI,EAAuBJ,EAAGK,eAChCL,EAAGM,WAAWN,EAAGO,aAAcH,GAS/BJ,EAAGQ,WAAWR,EAAGO,aAAc,IAAIE,cANjC,EAAK,EAAK,GACT,EAAK,EAAK,EACX,GAAM,EAAK,GACV,GAAM,EAAK,IAG6CT,EAAGU,aAS5DC,CAAYX,8FClBhBY,EAOEC,mBAAoBC,GAClB,IAAId,EAAK,KAET,IACEA,EAAKc,EAAcC,WAAW,UAAYD,EAAcC,WAAW,sBACnE,MAAOC,GACPC,QAAQC,IAAI,sDAAwDF,EAAEG,SAGxE,OAAOnB,EAQTa,mBAAoBb,GAClB,MAAMoB,EAAiBR,EAAMS,UAAUrB,EAAI,aACrCsB,EAAeV,EAAMS,UAAUrB,EAAI,aACnCuB,EAAgBvB,EAAGwB,gBACzB,IAAIC,EAEJzB,EAAG0B,aAAaH,EAAeD,GAC/BtB,EAAG0B,aAAaH,EAAeH,GAC/BpB,EAAG2B,YAAYJ,GAEVvB,EAAG4B,oBAAoBL,EAAevB,EAAG6B,cAC5CZ,QAAQC,IAAI,4CAGdlB,EAAG8B,WAAWP,GAEdE,EAA0BzB,EAAG+B,kBAAkBR,EAAe,mBAC9DvB,EAAGgC,wBAAwBP,GAU7BZ,iBAAkBb,EAA2BiC,GAC3C,MAAMC,EAAetC,SAASG,eAAekC,GAE7C,IAAKC,EACH,OAAO,KAGT,IAAIC,EAAe,GACfC,EAAeF,EAAaG,WAEhC,KAAOD,GACyB,IAA1BA,EAAaE,WACfH,GAAgBC,EAAaG,aAE/BH,EAAeA,EAAaI,YAG9B,IAAIC,EAEJ,GAA0B,wBAAtBP,EAAaQ,KACfD,EAASzC,EAAG2C,aAAa3C,EAAG4C,qBACvB,IAA0B,sBAAtBV,EAAaQ,KAGtB,OAAO,KAFPD,EAASzC,EAAG2C,aAAa3C,EAAG6C,eAQ9B,OAHA7C,EAAGmC,aAAaM,EAAQN,GACxBnC,EAAG8C,cAAcL,GAEZzC,EAAG+C,mBAAmBN,EAAQzC,EAAGgD,gBAK/BP,GAJLxB,QAAQC,IAAI,+DAAiElB,EAAGiD,iBAAiBR,IAC1F,OAnFbvE,EAAA+B,QAAAW","file":"webgl.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 52);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73076fdd0a47ce4f39d5","import WebGL from './webgl/WebGL'\r\n\r\nconst horAspect = 480.0 / 640.0\r\n\r\nfunction initBuffers (gl: WebGLRenderingContext): void {\r\n  const squareVerticesBuffer = gl.createBuffer()\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, squareVerticesBuffer)\r\n\r\n  const vertices = [\r\n    1.0, 1.0, 0.0,\r\n    -1.0, 1.0, 0.0,\r\n    1.0, -1.0, 0.0,\r\n    -1.0, -1.0, 0.0\r\n  ]\r\n\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  let canvas = document.getElementById('scene') as HTMLCanvasElement\r\n  let gl = WebGL.initContext(canvas)\r\n\r\n  if (gl) {\r\n    WebGL.initShaders(gl)\r\n    initBuffers(gl)\r\n  }\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/webgl-test.ts","/**\r\n * Collection of WebGL initialization methods.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class WebGL {\r\n  /**\r\n   * Initialize the WebGL context.\r\n   *\r\n   * @param {HTMLCanvasElement} canvasElement Canvas element on which the scenes will be drawn.\r\n   * @returns {WebGLRenderingContext} WebGL Context\r\n   */\r\n  static initContext (canvasElement: HTMLCanvasElement): WebGLRenderingContext {\r\n    let gl = null\r\n\r\n    try {\r\n      gl = canvasElement.getContext('webgl') || canvasElement.getContext('experimental-webgl')\r\n    } catch (e) {\r\n      console.log('Failed to initialize webgl context! Error message: ' + e.message)\r\n    }\r\n\r\n    return gl\r\n  }\r\n\r\n  /**\r\n   * Initialize vertex and fragment shaders.\r\n   *\r\n   * @param {WebGLRenderingContext} gl WebGL context\r\n   */\r\n  static initShaders (gl: WebGLRenderingContext): void {\r\n    const fragmentShader = WebGL.getShader(gl, 'shader-fs')\r\n    const vertexShader = WebGL.getShader(gl, 'shader-vs')\r\n    const shaderProgram = gl.createProgram()\r\n    let vertexPositionAttribute\r\n\r\n    gl.attachShader(shaderProgram, vertexShader)\r\n    gl.attachShader(shaderProgram, fragmentShader)\r\n    gl.linkProgram(shaderProgram)\r\n\r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n      console.log('Initialisation of shader program failed.')\r\n    }\r\n\r\n    gl.useProgram(shaderProgram)\r\n\r\n    vertexPositionAttribute = gl.getAttribLocation(shaderProgram, 'aVertexPosition')\r\n    gl.enableVertexAttribArray(vertexPositionAttribute)\r\n  }\r\n\r\n  /**\r\n   * Get a shader from a script by script tag id.\r\n   *\r\n   * @param {WebGLRenderingContext} gl WebGL context\r\n   * @param {string} id Script tag id\r\n   * @returns {WebGLShader} Shader instance\r\n   */\r\n  static getShader (gl: WebGLRenderingContext, id: string): WebGLShader {\r\n    const shaderScript = document.getElementById(id) as HTMLScriptElement\r\n\r\n    if (!shaderScript) {\r\n      return null\r\n    }\r\n\r\n    let shaderSource = ''\r\n    let currentChild = shaderScript.firstChild\r\n\r\n    while (currentChild) {\r\n      if (currentChild.nodeType === 3) {\r\n        shaderSource += currentChild.textContent\r\n      }\r\n      currentChild = currentChild.nextSibling\r\n    }\r\n\r\n    let shader\r\n\r\n    if (shaderScript.type === 'x-shader/x-fragment') {\r\n      shader = gl.createShader(gl.FRAGMENT_SHADER)\r\n    } else if (shaderScript.type === 'x-shader/x-vertex') {\r\n      shader = gl.createShader(gl.VERTEX_SHADER)\r\n    } else {\r\n      return null\r\n    }\r\n\r\n    gl.shaderSource(shader, shaderSource)\r\n    gl.compileShader(shader)\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      console.log('An error occurred when trying to compile the shader source: ' + gl.getShaderInfoLog(shader))\r\n      return null\r\n    }\r\n\r\n    return shader\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/webgl/WebGL.ts"],"sourceRoot":""}