{"version":3,"sources":["webpack:///webpack/bootstrap 9c0a0383854fb4f9637e","webpack:///./src/calculator/postfix/calculator.ts","webpack:///./src/calculator/postfix/PostFixCalculator.ts","webpack:///./src/math/MatrixFactory.ts","webpack:///./src/math/Matrix.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","PostFixCalculator_1","MatrixFactory_1","calculator","document","getElementById","input","addEventListener","ev","preventDefault","resultBox","innerHTML","expression","value","appendChild","createTextNode","default","calculate","toString","querySelectorAll","forEach","key","textContent","matrix","createMatrix","matrix2","matrix3","clone","add","console","log","multiply","mArray","PostFixCalculator","[object Object]","result","match","VALID_INPUT","Error","operation","split","token","isNaN","Number","operand2","pop","operand","Math","pow","push","Matrix_1","length","Matrix","this","rows","columns","equals","j","newArray","val","k","scalar","other","array","arr","slice","Array","from"],"mappings":"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","file":"calculator.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9c0a0383854fb4f9637e","import PostFixCalculator from './PostFixCalculator'\nimport MatrixFactory from '../../math/MatrixFactory'\n\nconst calculator = document.getElementById('calculator')\nconst input = document.getElementById('expression') as HTMLInputElement\n\ncalculator.addEventListener('submit', ev => {\n  ev.preventDefault()\n  const resultBox = document.getElementById('result')\n  resultBox.innerHTML = ''\n  const expression = input.value\n  resultBox.appendChild(document.createTextNode(PostFixCalculator.calculate(expression).toString()))\n})\n\ndocument.querySelectorAll('.math').forEach(key => {\n  key.addEventListener('click', () => input.value += key.textContent)\n})\n\nconst matrix = MatrixFactory.createMatrix([\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [10, 11, 12]\n])\n\nconst matrix2 = MatrixFactory.createMatrix([\n  [4, 5, 6],\n  [7, 8, 9],\n  [10, 11, 12],\n  [13, 14, 15]\n])\n\nconst matrix3 = MatrixFactory.createMatrix([\n  [4, 5, 6, 2],\n  [7, 8, 9, 2],\n  [10, 11, 12, 2]\n])\n\nconst m = matrix.clone()\nm.add(matrix2)\nconsole.log(m)\nconsole.log(matrix2)\n\n// matrix.multScalar(2)\nconsole.log(matrix)\n\nconsole.log(matrix.multiply(matrix3).mArray)\n\n\n\n// WEBPACK FOOTER //\n// ./src/calculator/postfix/calculator.ts","/**\n * Simple postfix calculator.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class PostFixCalculator {\n  static VALID_INPUT = '^\\\\s*([-+]?)(\\\\d+)(?:\\\\s*\\\\s*([-+]?)(\\\\d+)\\\\s*([-+*\\\\/\\\\^]))+$'\n\n  static calculate (input: string): number {\n    let result = null\n    if (input.match(PostFixCalculator.VALID_INPUT)) {\n      let tokens = input.split(' ')\n      let operation = []\n\n      tokens.forEach(token => {\n        if (isNaN(Number(token))) {\n          const operand2 = operation.pop()\n          const operand = operation.pop()\n\n          switch (token) {\n            case '+':\n              result = operand + operand2\n              break\n            case '-':\n              result = operand - operand2\n              break\n            case '*':\n              result = operand * operand2\n              break\n            case '/':\n              if (operand2 !== 0) {\n                result = operand / operand2\n              } else {\n                throw new Error('Division by zero not allowed!')\n              }\n              break\n            case '^':\n              result = Math.pow(operand, operand2)\n              break\n            default:\n              throw new Error('Internal error!')\n          }\n          operation.push(result)\n        } else {\n          operation.push(Number(token))\n        }\n      })\n    } else {\n      throw new Error('The expression is not valid!')\n    }\n    return result\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/calculator/postfix/PostFixCalculator.ts","import Matrix from './Matrix'\n\n/**\n * Matrix factory:\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class MatrixFactory {\n\n  /**\n   * Creates a matrix with an array.\n   *\n   * @param mArray The array used to create the matrix\n   * @returns {Matrix} The generated matrix object\n   */\n  static createMatrix (mArray): Matrix {\n    const length = mArray[0].length\n    for (let i = 1; i < mArray.length; i++) {\n      if (mArray[i].length !== length) {\n        return null\n      }\n    }\n    return new Matrix(mArray)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/MatrixFactory.ts","/**\n * Matrix class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Matrix {\n  rows: number\n  columns: number\n  mArray: number[][]\n\n  /**\n   * Default constructor.\n   *\n   * @param {number[][]} mArray Matrix array\n   */\n  constructor (mArray: number[][]) {\n    this.mArray = mArray\n    this.rows = mArray.length\n    this.columns = mArray[0].length\n  }\n\n  /**\n   * Add another matrix to this matrix.\n   * The dimension of the other matrix must be equal to this.\n   *\n   * @param {Matrix} matrix\n   */\n  add (matrix: Matrix): void {\n    if (this.equals(matrix)) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          this.mArray[i][j] += matrix.mArray[i][j]\n        }\n      }\n    }\n  }\n\n  /**\n   * Subtract another matrix from this matrix.\n   * The dimension of the other matrix must be equal to this.\n   *\n   * @param {Matrix} matrix\n   */\n  subtract (matrix: Matrix): void {\n    if (this.equals(matrix)) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          this.mArray[i][j] -= matrix.mArray[i][j]\n        }\n      }\n    }\n  }\n\n  /**\n   * Matrix multiplication algorithm.\n   *\n   * @param {Matrix} matrix Another matrix\n   * @returns {Matrix} Resulting matrix\n   */\n  multiply (matrix: Matrix): Matrix {\n    let newArray = []\n    if (this.columns === matrix.rows) {\n      for (let i = 0; i < this.rows; i++) {\n        newArray[i] = []\n        for (let j = 0; j < matrix.columns; j++) {\n          let val = 0\n          for (let k = 0; k < this.columns; k++) {\n            val += this.mArray[i][k] * matrix.mArray[k][j]\n          }\n          newArray[i].push(val)\n        }\n      }\n    } else {\n      return null\n    }\n    return new Matrix(newArray)\n  }\n\n  /**\n   *\n   * @param {number} scalar\n   */\n  multScalar (scalar: number): void {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.mArray[i][j] *= scalar\n      }\n    }\n  }\n\n  /**\n   * Check if the row and column length are equal to another matrix's.\n   *\n   * @param {Matrix} other Other Matrix\n   * @returns {boolean} Returns true if the lengths match\n   */\n  equals (other: Matrix): boolean {\n    return other.rows === this.rows && other.columns === this.columns\n  }\n\n  /**\n   * Generate an exact copy of this matrix.\n   *\n   * @returns {Matrix} A copy of this matrix\n   */\n  clone (): Matrix {\n    let array = []\n    this.mArray.forEach(arr => array.push(arr.slice(0)))\n    return new Matrix(Array.from(array))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/math/Matrix.ts"],"sourceRoot":""}