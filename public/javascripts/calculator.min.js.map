{"version":3,"sources":["webpack:///webpack/bootstrap 73076fdd0a47ce4f39d5","webpack:///./src/calculator/postfix/calculator.ts","webpack:///./src/lib/math/PostFixCalculator.ts","webpack:///./src/lib/math/MatrixFactory.ts","webpack:///./src/lib/math/Matrix.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","PostFixCalculator_1","MatrixFactory_1","calculator","document","getElementById","input","addEventListener","ev","preventDefault","resultBox","innerHTML","expression","value","appendChild","createTextNode","default","calculate","toString","querySelectorAll","forEach","key","textContent","matrix","createMatrix","matrix2","matrix3","matrix4","clone","add","console","log","multiply","mArray","rotate","transpose","PostFixCalculator","[object Object]","result","match","VALID_INPUT","Error","operation","split","token","isNaN","Number","operand2","pop","operand","Math","pow","push","Matrix_1","length","Matrix","this","rows","columns","array","valid","equals","j","newArray","val","k","scalar","direction","row","reverse","other","arr","slice","Array","from"],"mappings":"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","file":"calculator.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 49);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73076fdd0a47ce4f39d5","import PostFixCalculator from '../../lib/math/PostFixCalculator'\r\nimport MatrixFactory from '../../lib/math/MatrixFactory'\r\n\r\nconst calculator = document.getElementById('calculator')\r\nconst input = document.getElementById('expression') as HTMLInputElement\r\n\r\ncalculator.addEventListener('submit', ev => {\r\n  ev.preventDefault()\r\n  const resultBox = document.getElementById('result')\r\n  resultBox.innerHTML = ''\r\n  const expression = input.value\r\n  resultBox.appendChild(document.createTextNode(PostFixCalculator.calculate(expression).toString()))\r\n})\r\n\r\ndocument.querySelectorAll('.math').forEach(key => {\r\n  key.addEventListener('click', () => input.value += key.textContent)\r\n})\r\n\r\nconst matrix = MatrixFactory.createMatrix([\r\n  [1, 2, 3],\r\n  [4, 5, 6],\r\n  [7, 8, 9],\r\n  [10, 11, 12]\r\n])\r\n\r\nconst matrix2 = MatrixFactory.createMatrix([\r\n  [4, 5, 6],\r\n  [7, 8, 9],\r\n  [10, 11, 12],\r\n  [13, 14, 15]\r\n])\r\n\r\nconst matrix3 = MatrixFactory.createMatrix([\r\n  [4, 5, 6, 2],\r\n  [7, 8, 9, 2],\r\n  [10, 11, 12, 2]\r\n])\r\n\r\nconst matrix4 = MatrixFactory.createMatrix([\r\n  [4, 5, 6, 2],\r\n  [7, 8, 9, 2],\r\n  [10, 11, 12, 2]\r\n])\r\n\r\nconst m = matrix.clone()\r\nm.add(matrix2)\r\nconsole.log(m)\r\nconsole.log(matrix2)\r\n\r\n// matrix.multScalar(2)\r\nconsole.log(matrix)\r\n\r\nconsole.log(matrix.multiply(matrix3).mArray)\r\nmatrix4.rotate(1)\r\nconsole.log(matrix4.mArray)\r\nmatrix4.transpose()\r\nconsole.log(matrix4.mArray)\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/calculator/postfix/calculator.ts","/**\r\n * Simple postfix calculator.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class PostFixCalculator {\r\n  static VALID_INPUT = '^\\\\s*([-+]?)(\\\\d+)(?:\\\\s*\\\\s*([-+]?)(\\\\d+)\\\\s*([-+*\\\\/\\\\^]))+$'\r\n\r\n  static calculate (input: string): number {\r\n    let result = null\r\n    if (input.match(PostFixCalculator.VALID_INPUT)) {\r\n      let tokens = input.split(' ')\r\n      let operation = []\r\n\r\n      tokens.forEach(token => {\r\n        if (isNaN(Number(token))) {\r\n          const operand2 = operation.pop()\r\n          const operand = operation.pop()\r\n\r\n          switch (token) {\r\n            case '+':\r\n              result = operand + operand2\r\n              break\r\n            case '-':\r\n              result = operand - operand2\r\n              break\r\n            case '*':\r\n              result = operand * operand2\r\n              break\r\n            case '/':\r\n              if (operand2 !== 0) {\r\n                result = operand / operand2\r\n              } else {\r\n                throw new Error('Division by zero not allowed!')\r\n              }\r\n              break\r\n            case '^':\r\n              result = Math.pow(operand, operand2)\r\n              break\r\n            default:\r\n              throw new Error('Internal error!')\r\n          }\r\n          operation.push(result)\r\n        } else {\r\n          operation.push(Number(token))\r\n        }\r\n      })\r\n    } else {\r\n      throw new Error('The expression is not valid!')\r\n    }\r\n    return result\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/PostFixCalculator.ts","import Matrix from './Matrix'\r\n\r\n/**\r\n * Matrix factory:\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class MatrixFactory {\r\n\r\n  /**\r\n   * Creates a matrix with an array.\r\n   *\r\n   * @param mArray The array used to create the matrix\r\n   * @returns {Matrix} The generated matrix object\r\n   */\r\n  static createMatrix (mArray): Matrix {\r\n    const length = mArray[0].length\r\n    for (let i = 1; i < mArray.length; i++) {\r\n      if (mArray[i].length !== length) {\r\n        return null\r\n      }\r\n    }\r\n    return new Matrix(mArray)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/MatrixFactory.ts","/**\r\n * Matrix class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Matrix {\r\n  rows: number\r\n  columns: number\r\n  mArray: number[][]\r\n\r\n  /**\r\n   * Default constructor.\r\n   *\r\n   * @param {number[][]} mArray Matrix array\r\n   */\r\n  constructor (mArray: number[][]) {\r\n    this.mArray = mArray\r\n    this.rows = mArray.length\r\n    this.columns = mArray[0].length\r\n  }\r\n\r\n  set (array: number[][]): void {\r\n    const length = array[0].length\r\n    let valid = true\r\n    for (let i = 1; i < array.length; i++) {\r\n      if (array[i].length !== length) {\r\n        valid = false\r\n      }\r\n    }\r\n    if (valid) {\r\n      this.rows = array.length\r\n      this.columns = array[0].length\r\n      this.mArray = array\r\n    } else {\r\n      throw new Error('The passed matrix array is malformed: ' + array)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add another matrix to this matrix.\r\n   * The dimension of the other matrix must be equal to this.\r\n   *\r\n   * @param {Matrix} matrix\r\n   */\r\n  add (matrix: Matrix): void {\r\n    if (this.equals(matrix)) {\r\n      for (let i = 0; i < this.rows; i++) {\r\n        for (let j = 0; j < this.columns; j++) {\r\n          this.mArray[i][j] += matrix.mArray[i][j]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subtract another matrix from this matrix.\r\n   * The dimension of the other matrix must be equal to this.\r\n   *\r\n   * @param {Matrix} matrix\r\n   */\r\n  subtract (matrix: Matrix): void {\r\n    if (this.equals(matrix)) {\r\n      for (let i = 0; i < this.rows; i++) {\r\n        for (let j = 0; j < this.columns; j++) {\r\n          this.mArray[i][j] -= matrix.mArray[i][j]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Matrix multiplication algorithm.\r\n   *\r\n   * @param {Matrix} matrix Another matrix\r\n   * @returns {Matrix} Resulting matrix\r\n   */\r\n  multiply (matrix: Matrix): Matrix {\r\n    let newArray = []\r\n    if (this.columns === matrix.rows) {\r\n      for (let i = 0; i < this.rows; i++) {\r\n        newArray[i] = []\r\n        for (let j = 0; j < matrix.columns; j++) {\r\n          let val = 0\r\n          for (let k = 0; k < this.columns; k++) {\r\n            val += this.mArray[i][k] * matrix.mArray[k][j]\r\n          }\r\n          newArray[i].push(val)\r\n        }\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n    return new Matrix(newArray)\r\n  }\r\n\r\n  /**\r\n   * Multiply this matrix by a scalar.\r\n   *\r\n   * @param {number} scalar Scalar by which the matrix is multiplied by\r\n   */\r\n  multScalar (scalar: number): void {\r\n    for (let i = 0; i < this.rows; i++) {\r\n      for (let j = 0; j < this.columns; j++) {\r\n        this.mArray[i][j] *= scalar\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transposes this matrix.\r\n   */\r\n  transpose (): void {\r\n    let array = []\r\n    for (let i = 0; i < this.columns; i++) {\r\n      array[i] = []\r\n      for (let j = 0; j < this.rows; j++) {\r\n        array[i][j] = this.mArray[j][i]\r\n      }\r\n    }\r\n\r\n    this.rows = array.length\r\n    this.columns = array[0].length\r\n    this.mArray = array\r\n  }\r\n\r\n  rotate (direction: number): void {\r\n    this.transpose()\r\n    if (direction > 0) {\r\n      this.mArray.forEach(row => row.reverse())\r\n    } else {\r\n      this.mArray.reverse()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if the row and column length are equal to another matrix's.\r\n   *\r\n   * @param {Matrix} other Other Matrix\r\n   * @returns {boolean} Returns true if the lengths match\r\n   */\r\n  equals (other: Matrix): boolean {\r\n    return other.rows === this.rows && other.columns === this.columns\r\n  }\r\n\r\n  /**\r\n   * Generate an exact copy of this matrix.\r\n   *\r\n   * @returns {Matrix} A copy of this matrix\r\n   */\r\n  clone (): Matrix {\r\n    let array = []\r\n    this.mArray.forEach(arr => array.push(arr.slice(0)))\r\n    return new Matrix(Array.from(array))\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Matrix.ts"],"sourceRoot":""}