{"version":3,"sources":["webpack:///webpack/bootstrap 562da519d7bb5ce5d565","webpack:///./src/game/interfaces/CollideAble.ts","webpack:///./src/lib/vector/Vector2.ts","webpack:///./src/client/InputManager.ts","webpack:///./src/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/client/graphics/2D/SpriteSheet.ts","webpack:///./src/client/audio/Sound.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/client/Settings.ts","webpack:///./src/lib/tileset/test.ts","webpack:///./src/game/Rpg.ts","webpack:///./src/lib/entity/Entity.ts","webpack:///./src/game/entities/Area.ts","webpack:///./src/client/graphics/2D/Camera.ts","webpack:///./src/client/graphics/2D/Rectangle.ts","webpack:///./src/lib/tileset/TileSetMap.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EntityType","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","Observable_1","Actions","InputManager","Observable","settings","super","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","handleTouchStart","handleTouchMove","handleTouchEnd","preventDefault","touchstartX","touchstartY","toucheMoveX","touchMoveY","thisInstance","evt","pageX","pageY","reset","changedTouches","length","SpriteSheet_1","Sound_1","Ajax_1","AssetType","AssetManager","cache","sprites","spriteSheets","audio","downloadCount","queue","initAudioContext","AudioContext","webkitAudioContext","audioContext","masterGain","createGain","effectsGain","ambientGain","gain","value","connect","destination","e","console","log","id","path","type","opts","push","item","callback","Ajax","create","method","url","responseType","response","decodeAudio","data","decodeAudioData","then","buffer","done","error","sprite","Image","src","spriteSheet","SpriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudioFromUrl","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","Sound","Vector2_1","CollideAble_1","HitBox","width","height","position","colliding","collidesWith","BOX","PLAYER","other","includes","toString","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","gainNode","playing","loop","source","createBufferSource","stop","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","_observers","_state","observer","filter","obs","update","observers","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","objects","nodes","node","clear","returnedObjects","getAllObjects","index","getIndex","findObjects","obj","Array","element","insert","split","splice","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","CollisionManager","quadTree","j","isCollideAbleWith","InputManager_1","Settings","w","UP","DOWN","a","LEFT","RIGHT","space","SHOOT","r","RESTART","player","maxVelocity","fireDelay","friction","acceleration","master","ambient","effects","keys","newKey","action","oldKey","findKey","Rpg_1","Rpg","QuadTree_1","Entity_1","CollisionManager_1","Area_1","Camera_1","Settings_1","AssetManager_1","TileSetMap_1","canvas","canvasPlayer","assetManager","inputManager","queueDownload","MAP","BACKGROUND","downloadAll","ground","Entity","getSprite","getContext","area","Area","TileSetMap","innerWidth","map","innerHeight","collisionManager","camera","Camera","generate","register","follow","getSound","AUDIO_LOOP","play","run","hitBoxes","detectCollision","draw","previousPosition","render","requestAnimationFrame","context","velocity","worldWidth","worldHeight","goBack","setVector","set","add","addVector","limit","xView","yView","prevXView","prevYView","clearRect","drawImage","temp","clone","Rectangle_1","AXIS","viewWidth","viewHeight","deadZone","axis","BOTH","following","viewportRect","Rectangle","worldRect","xDeadZone","yDeadZone","HORIZONTAL","VERTICAL","within","left","top","right","bottom","mapLayers","tileSize","tilesPerRow","tilesPerColumn","imageTilesPerRow","tileSetImage","ctx","createElement","layer","generateLayer","toDataURL","row","col","tile","indexOf","tileRow","tileCol"],"mappings":"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GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACrO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACvO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAClO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACrO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACzO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACvO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAClO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACrO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACjO,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnO,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACjO,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACtO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KA2CvOzO,KAAK0M,OAAS,IAAIgB,EAAAgB,OAAO,IAAK,IAAK1O,KAAKmO,aAAaQ,UAAUrH,EAAA3H,WAAWmI,QAAS9H,KAAKkO,aAAaU,WAAW,OAChH5O,KAAK6O,KAAO,IAAIjB,EAAAkB,KACd,IAAId,EAAAe,WACF/O,KAAKmO,aAAaQ,UAAUrH,EAAA3H,WAAW2O,MACthM,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAChM,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7L,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjL,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACvL,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,IAAK,IAAK,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7L,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACthL,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrL,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjllL,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACpL,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClL,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG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","file":"tileSetMap.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 562da519d7bb5ce5d565","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enmey',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'BOX'\n}\n\nexport interface CollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n\n  isCollideAbleWith (other: CollideAble): boolean\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/interfaces/CollideAble.ts","export class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/vector/Vector2.ts","import { Observable } from '../lib/observer/Observable'\nimport { Settings } from './Settings'\n\nexport enum Actions {\n  UP = 'UP', DOWN = 'DOWN', LEFT = 'LEFT', RIGHT = 'RIGHT', SHOOT = 'SHOOT', RESTART = 'RESTART'\n}\n\n/**\n *\n */\nexport class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/InputManager.ts","import { EntityType } from '../game/interfaces/CollideAble'\nimport { SpriteSheet } from './graphics/2D/SpriteSheet'\nimport { Sound } from './audio/Sound'\nimport { Ajax } from '../lib/ajax/Ajax'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_LOOP = 'LOOP'\n}\n\nexport class AssetManager {\n  audioContext\n  cache\n  queue\n  downloadCount: number\n  masterGain: GainNode\n  effectsGain: GainNode\n  ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.initAudioContext()\n  }\n\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {EntityType} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: EntityType, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudioFromUrl audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudioFromUrl (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.decodeAudio(response, item.id, callback)\n    })\n  }\n\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => {\n        this.cache.audio[id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      },\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudioFromUrl(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {EntityType} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: EntityType, type: AssetType): Sound {\n    let gain\n    if (type === AssetType.AUDIO) {\n      gain = this.effectsGain\n    } else {\n      gain = this.ambientGain\n    }\n    return new Sound(this.audioContext, gain, this.cache.audio[id])\n  }\n\n  /**\n   *\n   * @param {string} id\n   * @returns {EntityType}\n   */\n  getSprite (id: EntityType): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {EntityType} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: EntityType): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/AssetManager.ts","import { Vector2 } from '../vector/Vector2'\nimport { CollideAble, EntityType } from '../../game/interfaces/CollideAble'\n\nexport class HitBox implements CollideAble{\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/HitBox.ts","/**\n * Sprite sheet definition.\n */\nexport class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/SpriteSheet.ts","export class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  stop (): void {\n    this.source.stop(0)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/audio/Sound.ts","export class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ajax/Ajax.ts","import { Observer } from './Observer'\n\n/**\n *\n */\nexport class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   *\n   * @param {Observer} observer\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   *\n   * @param {Observer} observer\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   *\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import { HitBox } from './HitBox'\nimport { Drawable } from '../../game/interfaces/Drawable'\n\n/**\n *\n */\nexport class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: Drawable[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all game objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/QuadTree.ts","export class CollisionManager {\n  quadTree\n\n  constructor (quadTree) {\n    this.quadTree = quadTree\n  }\n\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        // DETECT COLLISION ALGORITHM\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/CollisionManager.ts","import { Actions } from './InputManager'\n\nexport class Settings {\n  keyBoard\n  player\n  audio\n\n  constructor () {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART\n    }\n    this.player = {\n      maxVelocity: 15,\n      fireDelay: 15,\n      friction: 0.7,\n      acceleration: 3\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Settings.ts","import { Rpg } from '../../game/Rpg'\n\ndocument.addEventListener('DOMContentLoaded', () => new Rpg())\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/tileset/test.ts","import { QuadTree } from '../lib/collision/QuadTree'\nimport { Entity } from '../lib/entity/Entity'\nimport { CollisionManager } from '../lib/collision/CollisionManager'\nimport { Area } from './entities/Area'\nimport { Camera } from '../client/graphics/2D/Camera'\nimport { InputManager } from '../client/InputManager'\nimport { Settings } from '../client/Settings'\nimport { AssetManager, AssetType } from '../client/AssetManager'\nimport { TileSetMap } from '../lib/tileset/TileSetMap'\nimport { EntityType } from './interfaces/CollideAble'\nimport { HitBox } from '../lib/collision/HitBox'\nimport { IGame } from '../lib/interfaces/IGame'\n\nexport class Rpg implements IGame {\n  playing: boolean\n  canvas: HTMLCanvasElement\n  context: CanvasRenderingContext2D\n  canvasPlayer: HTMLCanvasElement\n  assetManager: AssetManager\n  inputManager: InputManager\n  settings: Settings\n  area: Area\n  camera: Camera\n  player: Entity\n  quadTree: QuadTree\n  collisionManager: CollisionManager\n\n  constructor () {\n    this.canvas = document.getElementById('background') as HTMLCanvasElement\n    this.canvasPlayer = document.getElementById('player') as HTMLCanvasElement\n    this.assetManager = new AssetManager()\n    this.settings = new Settings()\n    this.inputManager = new InputManager(this.settings)\n    this.init()\n  }\n\n  init (): void {\n    this.assetManager.queueDownload(EntityType.MAP, 'assets/tilesets/tileset.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(EntityType.PLAYER, 'assets/sprites/player.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(EntityType.BACKGROUND, 'assets/audio/amb_wilderness.mp3', AssetType.AUDIO)\n    this.assetManager.downloadAll(() => {\n      let ground = [\n        [172, 172, 172, 79, 34, 34, 34, 34, 34, 34, 34, 34, 56, 57, 54, 55, 56, 147, 67, 67, 68, 79, 79, 171, 172, 172, 173, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n        [172, 172, 172, 79, 34, 34, 34, 34, 34, 34, 146, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 159, 189, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n        [172, 172, 172, 79, 79, 34, 34, 34, 34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 159, 189, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n        [188, 188, 188, 79, 79, 79, 79, 34, 34, 34, 36, 172, 172, 143, 142, 157, 79, 79, 79, 79, 79, 79, 187, 159, 189, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n        [79, 79, 79, 79, 79, 79, 79, 79, 34, 34, 36, 172, 159, 158, 172, 143, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 39, 51, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 36, 172, 143, 142, 172, 172, 143, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 52, 172, 172, 172, 172, 172, 172, 143, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 52, 172, 172, 172, 172, 172, 172, 159, 188, 189, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 188, 158, 172, 172, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 187, 158, 159, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 159, 188, 189, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [155, 142, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 187, 188, 188, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [171, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [171, 172, 143, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 187, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [187, 188, 158, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [79, 79, 79, 188, 189, 79, 79, 79, 79, 79, 79, 155, 156, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 156, 156, 156, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 79, 79, 79, 79, 79, 79, 155, 172, 172, 159, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79]\n\n      ]\n\n      let topLayer = [\n        [0, 0, 32, 33, 0, 220, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 48, 49, 0, 236, 220, 220, 236, 0, 0, 147, 72, 73, 70, 71, 72, 73, 83, 83, 84, 85, 0, 0, 0, 0, 0, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 64, 65, 54, 0, 236, 236, 0, 0, 162, 163, 84, 89, 86, 87, 88, 89, 99, 99, 100, 101, 0, 0, 0, 0, 7, 112, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 80, 81, 70, 54, 55, 50, 0, 0, 0, 179, 100, 105, 102, 103, 104, 105, 0, 0, 0, 0, 0, 0, 16, 22, 23, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 96, 97, 86, 70, 65, 144, 193, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 102, 86, 81, 160, 161, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 65, 174, 175, 67, 66, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 102, 97, 176, 177, 0, 0, 37, 0, 252, 0, 0, 0, 201, 202, 0, 0, 0, 0, 0, 80, 81, 190, 191, 83, 82, 70, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 48, 49, 0, 0, 53, 0, 0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 96, 97, 222, 223, 99, 98, 86, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [201, 202, 0, 0, 0, 0, 0, 64, 65, 66, 68, 69, 0, 0, 0, 0, 0, 233, 234, 0, 0, 0, 0, 0, 238, 239, 0, 0, 238, 239, 102, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [217, 218, 0, 0, 0, 0, 0, 80, 81, 82, 84, 85, 0, 0, 0, 0, 0, 249, 250, 0, 0, 0, 0, 0, 254, 255, 0, 0, 254, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [233, 234, 0, 0, 0, 0, 0, 96, 97, 98, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [249, 250, 0, 0, 201, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 239, 0, 0, 238, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 255, 0, 0, 254, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 233, 234, 196, 197, 198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [2, 3, 4, 0, 249, 250, 228, 229, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [18, 19, 20, 8, 0, 0, 244, 245, 246, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 35, 40, 24, 25, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 40, 41, 20, 8, 9, 0, 0, 0, 0, 0, 0, 0, 16, 17, 18, 19, 20, 21, 0, 0, 0, 0, 0, 0, 0, 233, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 40, 19, 24, 25, 8, 9, 0, 0, 0, 0, 0, 48, 49, 50, 51, 52, 115, 3, 4, 0, 0, 0, 0, 0, 249, 250, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 40, 41, 20, 21, 0, 0, 0, 0, 0, 64, 65, 66, 67, 52, 19, 19, 20, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      ]\n      this.player = new Entity(350, 370, this.assetManager.getSprite(EntityType.PLAYER), this.canvasPlayer.getContext('2d'))\n      this.area = new Area(\n        new TileSetMap(\n          this.assetManager.getSprite(EntityType.MAP),\n          [ground, topLayer],\n          this.canvas.getContext('2d'),\n          32, ground[0].length,\n          ground.length,\n          16\n        )\n      )\n      this.canvas.width = window.innerWidth > this.area.map.width ? this.area.map.width : window.innerWidth\n      this.canvas.height = window.innerHeight > this.area.map.height ? this.area.map.height : window.innerHeight\n      this.canvasPlayer.width = window.innerWidth > this.area.map.width ? this.area.map.width : window.innerWidth\n      this.canvasPlayer.height = window.innerHeight > this.area.map.height ? this.area.map.height : window.innerHeight\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvas.width, this.canvas.height))\n      this.collisionManager = new CollisionManager(this.quadTree)\n      this.camera = new Camera(0, 0, this.canvasPlayer.width, this.canvasPlayer.height, this.area.map.width, this.area.map.height)\n\n      // generate a large tileSetImage texture for the room\n      this.area.map.generate()\n      this.inputManager.register(this.player)\n      this.camera.follow(this.player, this.canvas.width / 2, this.canvas.height / 2)\n      let ambient = this.assetManager.getSound(EntityType.BACKGROUND, AssetType.AUDIO_LOOP)\n      ambient.play(true)\n      this.run()\n    })\n  }\n\n  start (): void {\n\n  }\n\n  stop (): void {\n\n  }\n\n  update (): void {\n    this.quadTree.clear()\n    this.quadTree.insert(this.player)\n    this.quadTree.insert(this.area.map.hitBoxes)\n    this.collisionManager.detectCollision()\n    this.camera.update()\n    this.player.move(this.area.map.width, this.area.map.height)\n  }\n\n  render (): void {\n    this.player.draw(\n      Math.floor(this.camera.position.x),\n      Math.floor(this.camera.position.y),\n      Math.floor(this.camera.previousPosition.x),\n      Math.floor(this.camera.previousPosition.y)\n    )\n    this.area.map.draw(Math.floor(this.camera.position.x), Math.floor(this.camera.position.y))\n  }\n\n  run (): void {\n    this.update()\n    this.render()\n    window.requestAnimationFrame(() => this.run())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/Rpg.ts","import { Vector2 } from '../vector/Vector2'\nimport { Actions } from '../../client/InputManager'\nimport { Observer } from '../observer/Observer'\nimport { CollideAble, EntityType } from '../../game/interfaces/CollideAble'\nimport { Drawable } from '../../game/interfaces/Drawable'\n\nexport class Entity implements Observer, CollideAble, Drawable {\n  speed: number\n  canvasWidth: number\n  canvasHeight: number\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  velocity: Vector2\n  sprite\n  context\n  acceleration: Vector2\n  state\n  width\n  height\n  previousPosition: Vector2\n\n  constructor (x: number, y: number, sprite, context) {\n    this.position = new Vector2(x, y)\n    this.velocity = new Vector2(1, 1)\n    this.sprite = sprite\n    this.context = context\n    this.acceleration = new Vector2(0, 0)\n    this.state = {}\n    this.colliding = false\n    this.type = EntityType.PLAYER\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.BOX)\n    this.width = sprite.width\n    this.height = sprite.height\n    this.previousPosition = new Vector2(x, y)\n  }\n\n  move (worldWidth, worldHeight): void {\n    if (!this.colliding) {\n      this.previousPosition.setVector(this.position)\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-3, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(3, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -3)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, 3)\n      }\n      this.velocity.multiply(0.6)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(15)\n      this.position.addVector(this.velocity)\n\n      if (this.position.x - this.width / 2 < 0) {\n        this.position.x = this.width / 2\n      }\n      if (this.position.y - this.height / 2 < 0) {\n        this.position.y = this.height / 2\n      }\n      if (this.position.x + this.width / 2 > worldWidth) {\n        this.position.x = worldWidth - this.width / 2\n      }\n      if (this.position.y + this.height / 2 > worldHeight) {\n        this.position.y = worldHeight - this.height / 2\n      }\n    } else {\n      this.goBack()\n    }\n  }\n\n  draw (xView: number, yView: number, prevXView: number, prevYView: number): void {\n    this.context.clearRect(\n      (Math.floor(this.previousPosition.x) - this.width / 2) - prevXView,\n      (Math.floor(this.previousPosition.y) - this.height / 2) - prevYView,\n      this.width,\n      this.height\n    )\n    this.context.drawImage(\n      this.sprite,\n      (Math.floor(this.position.x) - this.width / 2) - xView,\n      (Math.floor(this.position.y) - this.height / 2) - yView,\n      this.width,\n      this.height\n    )\n  }\n\n  goBack (): void {\n    let temp = this.position.clone()\n    this.position.setVector(this.previousPosition)\n    this.previousPosition.setVector(temp)\n    this.colliding = false\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/entity/Entity.ts","import { TileSetMap } from '../../lib/tileset/TileSetMap'\n\nexport class Area {\n  map: TileSetMap\n\n  constructor (map: TileSetMap) {\n    this.map = map\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Area.ts","import { Vector2 } from '../../../lib/vector/Vector2'\nimport { Rectangle } from './Rectangle'\nimport { Drawable } from '../../../game/interfaces/Drawable'\n\nexport enum AXIS {\n  NONE = 'none',\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n  BOTH = 'both'\n}\n\nexport class Camera {\n  position: Vector2\n  previousPosition: Vector2\n  viewWidth: number\n  viewHeight: number\n  axis: AXIS\n  following: Drawable\n  deadZone: Vector2\n  viewportRect: Rectangle\n  worldRect: Rectangle\n\n  constructor (x, y, viewWidth, viewHeight, worldWidth, worldHeight) {\n    // position of camera (left-top coordinate)\n    this.position = new Vector2(x, y)\n    this.previousPosition = new Vector2(x, y)\n    this.deadZone = new Vector2(0, 0)\n\n    // viewport dimensions\n    this.viewWidth = viewWidth\n    this.viewHeight = viewHeight\n\n    // allow camera to move in vertical and horizontal axis\n    this.axis = AXIS.BOTH\n\n    // object that should be followed\n    this.following = null\n\n    // rectangle that represents the viewport\n    this.viewportRect = new Rectangle(this.position.x, this.position.y, this.viewWidth, this.viewHeight)\n\n    // rectangle that represents the world's boundary (room's boundary)\n    this.worldRect = new Rectangle(0, 0, worldWidth, worldHeight)\n\n  }\n\n  /**\n   * Object needs to have \"x\" and \"y\" properties (as world(or room) position)\n   *\n   * @param {Drawable} following\n   * @param xDeadZone\n   * @param yDeadZone\n   */\n  follow (following: Drawable, xDeadZone, yDeadZone): void {\n    this.following = following\n    this.deadZone.set(xDeadZone, yDeadZone)\n  }\n\n  update (): void {\n    this.previousPosition.setVector(this.position)\n    // keep following the player (or other desired object)\n    if (this.following != null) {\n      if (this.axis === AXIS.HORIZONTAL || this.axis === AXIS.BOTH) {\n        // moves camera on horizontal axis based on followed object position\n        if (this.following.position.x - this.position.x + this.deadZone.x > this.viewWidth) {\n          this.position.x = this.following.position.x - (this.viewWidth - this.deadZone.x)\n        } else if (this.following.position.x - this.deadZone.x < this.position.x) {\n          this.position.x = this.following.position.x - this.deadZone.x\n        }\n      }\n      if (this.axis === AXIS.VERTICAL || this.axis === AXIS.BOTH) {\n        // moves camera on vertical axis based on followed object position\n        if (this.following.position.y - this.position.y + this.deadZone.y > this.viewHeight) {\n          this.position.y = this.following.position.y - (this.viewHeight - this.deadZone.y)\n        } else if (this.following.position.y - this.deadZone.y < this.position.y) {\n          this.position.y = this.following.position.y - this.deadZone.y\n        }\n      }\n    }\n\n    // update viewportRect\n    this.viewportRect.set(this.position.x, this.position.y)\n\n    // don't let camera leaves the world's boundary\n    if (!this.viewportRect.within(this.worldRect)) {\n      if (this.viewportRect.left < this.worldRect.left) {\n        this.position.x = this.worldRect.left\n      }\n      if (this.viewportRect.top < this.worldRect.top) {\n        this.position.y = this.worldRect.top\n      }\n      if (this.viewportRect.right > this.worldRect.right) {\n        this.position.x = this.worldRect.right - this.viewWidth\n      }\n      if (this.viewportRect.bottom > this.worldRect.bottom) {\n        this.position.y = this.worldRect.bottom - this.viewHeight\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/Camera.ts","export class Rectangle {\n  left: number\n  right: number\n  top: number\n  bottom: number\n  width: number\n  height: number\n\n  constructor (left: number, top: number, width: number, height: number) {\n    this.left = left\n    this.top = top\n    this.width = width\n    this.height = height\n    this.right = this.left + this.width\n    this.bottom = this.top + this.height\n  }\n\n  set (left: number, top: number, width?: number, height?: number): void {\n    this.left = left\n    this.top = top\n    this.width = width || this.width\n    this.height = height || this.height\n    this.right = (this.left + this.width)\n    this.bottom = (this.top + this.height)\n  }\n\n  within (other): boolean {\n    return (other.left <= this.left &&\n      other.right >= this.right &&\n      other.top <= this.top &&\n      other.bottom >= this.bottom)\n  }\n\n  overlaps (other): boolean {\n    return (this.left < other.right &&\n      other.left < this.right &&\n      this.top < other.bottom &&\n      other.top < this.bottom)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/Rectangle.ts","import { HitBox } from '../collision/HitBox'\n\nexport class TileSetMap {\n  tileSetImage: HTMLImageElement\n  image: HTMLImageElement\n  width: number\n  height: number\n  context\n  mapLayers\n  tileSize: number\n  tilesPerRow: number\n  tilesPerColumn: number\n  imageTilesPerRow: number\n  hitBoxes: Array<HitBox>\n\n  constructor (image, mapLayers, context, tileSize: number, tilesPerRow: number, tilesPerColumn: number, imageTilesPerRow: number) {\n    this.tileSetImage = image\n    this.width = tilesPerRow * tileSize\n    this.height = tilesPerColumn * tileSize\n    this.mapLayers = mapLayers\n    this.context = context\n    this.tileSize = tileSize\n    this.tilesPerRow = tilesPerRow\n    this.tilesPerColumn = tilesPerColumn\n    this.imageTilesPerRow = imageTilesPerRow\n    this.hitBoxes = []\n    console.log(this.width)\n    console.log(this.height)\n  }\n\n  generate (): void {\n    let ctx = document.createElement('canvas').getContext('2d')\n    ctx.canvas.width = this.width\n    ctx.canvas.height = this.height\n\n    this.mapLayers.forEach(layer => this.generateLayer(ctx, layer))\n\n    // store the generate map as this tileSetImage texture\n    this.image = new Image()\n    this.image.src = ctx.canvas.toDataURL('image/png')\n\n    // clear context\n    ctx = null\n  }\n\n  generateLayer (ctx, layer): void {\n    for (let row = 0; row < this.tilesPerColumn; row++) {\n      for (let col = 0; col < this.tilesPerRow; col++) {\n        let tile = layer[row][col]\n        if (tile !== 0 && this.mapLayers.indexOf(layer) === this.mapLayers.length - 1) {\n          this.hitBoxes.push(new HitBox((col * this.tileSize), (row * this.tileSize), this.tileSize, this.tileSize))\n        }\n        let tileRow = (tile / this.imageTilesPerRow) | 0\n        let tileCol = (tile % this.imageTilesPerRow) | 0\n        ctx.drawImage(\n          this.tileSetImage,\n          (tileCol * this.tileSize),\n          (tileRow * this.tileSize),\n          this.tileSize,\n          this.tileSize,\n          (col * this.tileSize),\n          (row * this.tileSize),\n          this.tileSize,\n          this.tileSize\n        )\n      }\n    }\n  }\n\n  /**\n   * draw the map adjusted to camera\n   * @param xView\n   * @param yView\n   */\n  draw (xView, yView): void {\n    this.context.drawImage(this.image, 0, 0, this.image.width, this.image.height, -xView, -yView, this.image.width, this.image.height)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/tileset/TileSetMap.ts"],"sourceRoot":""}