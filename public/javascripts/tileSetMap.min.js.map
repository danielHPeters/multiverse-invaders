{"version":3,"sources":["webpack:///webpack/bootstrap 73076fdd0a47ce4f39d5","webpack:///./src/game/interfaces/CollideAble.ts","webpack:///./src/client/InputManager.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/client/Settings.ts","webpack:///./src/graphics/2D/SpriteSheet.ts","webpack:///./src/audio/Sound.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/lib/tileset/test.ts","webpack:///./src/game/Rpg.ts","webpack:///./src/lib/entity/Entity.ts","webpack:///./src/game/entities/Area.ts","webpack:///./src/graphics/2D/Camera.ts","webpack:///./src/lib/geometry/Rectangle.ts","webpack:///./src/lib/tileset/TileSetMap.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EntityType","Observable_1","Actions","default","[object Object]","settings","super","this","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","handleTouchStart","handleTouchMove","handleTouchEnd","preventDefault","touchstartX","touchstartY","toucheMoveX","touchMoveY","thisInstance","evt","pageX","pageY","reset","changedTouches","length","Vector2","x","y","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","SpriteSheet_1","Sound_1","Ajax_1","AssetType","cache","sprites","spriteSheets","audio","downloadCount","queue","initAudioContext","AudioContext","webkitAudioContext","audioContext","masterGain","createGain","effectsGain","ambientGain","gain","value","connect","destination","e","console","log","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","data","decodeAudioData","then","buffer","done","error","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudioFromUrl","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","Vector2_1","CollideAble_1","width","height","position","colliding","collidesWith","BOX","PLAYER","other","includes","toString","_observers","_state","observer","filter","obs","update","observers","InputManager_1","w","UP","DOWN","a","LEFT","RIGHT","space","SHOOT","r","RESTART","q","ROTATE_LEFT","ROTATE_RIGHT","player","maxVelocity","fireDelay","friction","acceleration","master","ambient","effects","keys","newKey","action","oldKey","findKey","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","gainNode","playing","loop","source","createBufferSource","stop","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","objects","nodes","node","clear","returnedObjects","getAllObjects","index","getIndex","findObjects","obj","Array","element","insert","split","splice","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","quadTree","j","isCollideAbleWith","Rpg_1","QuadTree_1","Entity_1","CollisionManager_1","Area_1","Camera_1","Settings_1","AssetManager_1","TileSetMap_1","canvas","canvasPlayer","assetManager","inputManager","queueDownload","MAP","BACKGROUND","downloadAll","ground","getSprite","getContext","area","innerWidth","map","innerHeight","collisionManager","camera","generate","register","follow","getSound","AUDIO_LOOP","play","run","timeStamp","hitBoxes","detectCollision","draw","previousPosition","render","requestAnimationFrame","context","velocity","worldWidth","worldHeight","goBack","setVector","set","add","addVector","limit","xView","yView","prevXView","prevYView","clearRect","drawImage","temp","clone","Rectangle_1","AXIS","viewWidth","viewHeight","deadZone","axis","BOTH","following","viewportRect","worldRect","xDeadZone","yDeadZone","HORIZONTAL","VERTICAL","within","left","top","right","bottom","mapLayers","tileSize","tilesPerRow","tilesPerColumn","imageTilesPerRow","tileSetImage","ctx","createElement","layer","generateLayer","toDataURL","row","col","tile","indexOf","tileRow","tileCol"],"mappings":"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I,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACrO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACvO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAClO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACrO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACzO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACvO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAClO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACrO,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACjO,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnO,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACjO,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACtO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACnO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACpO,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KA2CvOlO,KAAK+I,OAAS,IAAIoE,EAAAvN,QAAO,IAAK,IAAKI,KAAK4N,aAAaO,UAAUpH,EAAAtH,WAAW6H,QAAStH,KAAK2N,aAAaS,WAAW,OAChHpO,KAAKqO,KAAO,IAAIhB,EAAAzN,QACd,IAAI6N,EAAA7N,QACFI,KAAK4N,aAAaO,UAAUpH,EAAAtH,WAAWsO,MACthM,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAChjL,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACvL,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,IAAK,IAAK,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7L,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACthL,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrL,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACjllL,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACpL,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClL,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,E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","file":"tileSetMap.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73076fdd0a47ce4f39d5","export enum EntityType {\r\n  PLAYER = 'ship',\r\n  ENEMY = 'enemy',\r\n  ENEMY_BULLET = 'bulletEnemy',\r\n  PLAYER_BULLET = 'bullet',\r\n  BACKGROUND = 'background',\r\n  MAP = 'map',\r\n  GAME_OVER = 'gameOver',\r\n  LASER = 'laser',\r\n  MAIN_THEME = 'shockWave',\r\n  EXPLOSION_I = 'explosion1',\r\n  EXPLOSION_II = 'explosion2',\r\n  BOX = 'box',\r\n  ARENA = 'arena'\r\n}\r\n\r\n/**\r\n * Interface for collide able objects.\r\n */\r\nexport default interface CollideAble {\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/interfaces/CollideAble.ts","import Observable from '../lib/observer/Observable'\r\nimport Settings from './Settings'\r\n\r\nexport enum Actions {\r\n  UP = 'UP',\r\n  DOWN = 'DOWN',\r\n  LEFT = 'LEFT',\r\n  RIGHT = 'RIGHT',\r\n  SHOOT = 'SHOOT',\r\n  RESTART = 'RESTART',\r\n  ROTATE_LEFT = 'R-LEFT',\r\n  ROTATE_RIGHT = 'R-RIGHT'\r\n}\r\n\r\n/**\r\n * Input manager class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class InputManager extends Observable {\r\n  inputMap\r\n  touches\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor (settings: Settings) {\r\n    super()\r\n    this.inputMap = settings.keyBoard\r\n    this.init()\r\n    this.initializeTouchHandler()\r\n    this.touches = {\r\n      start: [],\r\n      move: []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register pressed keys and notify observers.\r\n   */\r\n  init (): void {\r\n    window.addEventListener('keydown', event => {\r\n      let key = event.key !== ' ' ? event.key : 'space'\r\n      this.state[this.inputMap[key]] = true\r\n      this.notify()\r\n    })\r\n    window.addEventListener('keyup', event => {\r\n      let key = event.key !== ' ' ? event.key : 'space'\r\n      this.state[this.inputMap[key]] = false\r\n      this.notify()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Maps swipe directions to key press booleans.\r\n   * Allows touch controls on mobile.\r\n   */\r\n  initializeTouchHandler (): void {\r\n    // Register the event listeners\r\n    let button = document.getElementById('move')\r\n    let el = button ? button : window\r\n    el.addEventListener('touchstart', handleTouchStart, false)\r\n    el.addEventListener('touchmove', handleTouchMove, false)\r\n    el.addEventListener('touchend', handleTouchEnd, false)\r\n    el.addEventListener('contextmenu', event => {\r\n      event.preventDefault()\r\n      return false\r\n    })\r\n\r\n    let start = []\r\n    let move = []\r\n    let touchstartX = 0\r\n    let touchstartY = 0\r\n    let toucheMoveX = 0\r\n    let touchMoveY = 0\r\n    let thisInstance = this\r\n\r\n    function handleTouchStart (evt): void {\r\n      evt.preventDefault()\r\n      start = evt.touches\r\n      touchstartX = evt.touches[0].pageX\r\n      touchstartY = evt.touches[0].pageY\r\n    }\r\n\r\n    function handleTouchMove (evt): void {\r\n      thisInstance.reset()\r\n      evt.preventDefault()\r\n      move = evt.changedTouches\r\n      toucheMoveX = evt.touches[0].pageX\r\n      touchMoveY = evt.touches[0].pageY\r\n      for (let i = 0; i < evt.touches.length; i++) {\r\n        // Positive values equals left. Negative values equals right\r\n        if (move[i].pageX < start[i].pageX) {\r\n          thisInstance.state[thisInstance.inputMap['a']] = true\r\n        }\r\n        if (move[i].pageX > start[i].pageX) {\r\n          thisInstance.state[thisInstance.inputMap['d']] = true\r\n        }\r\n        if (move[i].pageY < start[i].pageY) {\r\n          thisInstance.state[thisInstance.inputMap['w']] = true\r\n        }\r\n        if (move[i].pageY > start[i].pageY) {\r\n          thisInstance.state[thisInstance.inputMap['s']] = true\r\n        }\r\n        thisInstance.notify()\r\n      }\r\n    }\r\n\r\n    function handleTouchEnd (evt): void {\r\n      evt.preventDefault()\r\n      thisInstance.reset()\r\n    }\r\n  }\r\n\r\n  shoot (): void {\r\n    this.state[this.inputMap['space']] = true\r\n  }\r\n\r\n  cancelShoot (): void {\r\n    this.state[this.inputMap['space']] = false\r\n  }\r\n\r\n  reset (): void {\r\n    this.state[this.inputMap['w']] = false\r\n    this.state[this.inputMap['a']] = false\r\n    this.state[this.inputMap['s']] = false\r\n    this.state[this.inputMap['d']] = false\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/InputManager.ts","/**\r\n * 2D vector implementation.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Vector2 {\r\n  private _x: number\r\n  private _y: number\r\n\r\n  /**\r\n   * Default constructor. Sets x and y values.\r\n   *\r\n   * @param {number} x initial x value\r\n   * @param {number} y initial y value\r\n   */\r\n  constructor (x: number, y: number) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Static addVector method to combine two vectors into a new one.\r\n   *\r\n   * @param {Vector2} v1 first vector\r\n   * @param {Vector2} v2 second vector\r\n   * @returns {Vector2} combined vector\r\n   */\r\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\r\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\r\n  }\r\n\r\n  /**\r\n   * Subtract two vector from each other and put the result into a new vector.\r\n   *\r\n   * @param {Vector2} v1 first vector\r\n   * @param {Vector2} v2 second vector\r\n   * @returns {Vector2} resulting vector\r\n   */\r\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\r\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\r\n  }\r\n\r\n  /**\r\n   * Multiplies a vector with a scalar and returns the resulting vector.\r\n   *\r\n   * @param {Vector2} vector initial vector\r\n   * @param {number} scalar scalar to scale the vector\r\n   * @returns {Vector2} the resulting vector\r\n   */\r\n  static multiply (vector: Vector2, scalar: number): Vector2 {\r\n    return new Vector2(vector.x * scalar, vector.y * scalar)\r\n  }\r\n\r\n  /**\r\n   * Divides a vector by a scalar and returns the result in a new vector.\r\n   * Throws error if trying to divide by zero.\r\n   *\r\n   * @param {Vector2} vector vector to divide\r\n   * @param {number} scalar scalar used to divide vector\r\n   * @returns {Vector2} resulting vector\r\n   */\r\n  static divide (vector: Vector2, scalar: number): Vector2 {\r\n    if (scalar === 0) {\r\n      throw new Error('cannot divide vector by scalar with value \"0\"')\r\n    }\r\n    return new Vector2(vector.x / scalar, vector.y / scalar)\r\n  }\r\n\r\n  /**\r\n   * Set x value of this vector.\r\n   *\r\n   * @param {number} x new x value\r\n   */\r\n  set x (x: number) {\r\n    this._x = x\r\n  }\r\n\r\n  /**\r\n   * Set y value of this vector.\r\n   *\r\n   * @param {number} y new y value\r\n   */\r\n  set y (y: number) {\r\n    this._y = y\r\n  }\r\n\r\n  /**\r\n   * Getter for x value\r\n   * @returns {number} x value\r\n   */\r\n  get x (): number {\r\n    return this._x\r\n  }\r\n\r\n  /**\r\n   * Getter for y value\r\n   * @returns {number} y value\r\n   */\r\n  get y (): number {\r\n    return this._y\r\n  }\r\n\r\n  /**\r\n   * Set vector with both x and y values.\r\n   *\r\n   * @param {number} x new x value\r\n   * @param {number} y new y value\r\n   */\r\n  set (x: number, y: number): void {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Set vector location to another vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  setVector (vector: Vector2): void {\r\n    this.x = vector.x\r\n    this.y = vector.y\r\n  }\r\n\r\n  /**\r\n   * Add x and y to this vector.\r\n   *\r\n   * @param {number} x x value\r\n   * @param {number} y y value\r\n   */\r\n  add (x: number, y: number): void {\r\n    this.x += x\r\n    this.y += y\r\n  }\r\n\r\n  /**\r\n   * Add vector to this vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  addVector (vector: Vector2): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n  }\r\n\r\n  /**\r\n   * Subtraxt x and y from this vector.\r\n   *\r\n   * @param {number} x x value\r\n   * @param {number} y y value\r\n   */\r\n  subtract (x: number, y: number): void {\r\n    this.x -= x\r\n    this.y -= y\r\n  }\r\n\r\n  /**\r\n   * Subtract a vector from this vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  subtractVector (vector: Vector2): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n  }\r\n\r\n  /**\r\n   * Multiply this vector by scalar.\r\n   *\r\n   * @param scalar scalar to multiply the vector\r\n   */\r\n  multiply (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n  }\r\n\r\n  /**\r\n   * Divides this vector by a scalar.\r\n   * Throws error when trying to divide by zero.\r\n   *\r\n   * @param {number} scalar scalar used to divide this vector\r\n   */\r\n  divide (scalar: number): void {\r\n    if (scalar === 0) {\r\n      throw new Error('cannot divide vector by \"0\"')\r\n    }\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n  }\r\n\r\n  /**\r\n   * Get the magnitude / elementsCount of this vector.\r\n   *\r\n   * @returns {number} magnitude / elementsCount of this vector\r\n   */\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  }\r\n\r\n  /**\r\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\r\n   *\r\n   * @returns {Vector2}\r\n   */\r\n  negative (): Vector2 {\r\n    return new Vector2(-this.x, -this.y)\r\n  }\r\n\r\n  /**\r\n   * Normalize the vector.\r\n   */\r\n  normalize (): void {\r\n    let magnitude = this.mag()\r\n    if (magnitude !== 0) {\r\n      this.divide(magnitude)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Limit the vector to a maximum elementsCount.\r\n   *\r\n   * @param max maximum elementsCount\r\n   */\r\n  limit (max): void {\r\n    if (Math.floor(this.mag()) > max) {\r\n      this.normalize()\r\n      this.multiply(max)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the distance of this vector to another vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   * @returns {number} calculated distance\r\n   */\r\n  distanceTo (vector: Vector2): number {\r\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\r\n  }\r\n\r\n  /**\r\n   * Get the dot product between this vector and another vector.\r\n   *\r\n   * @param {Vector2} vector\r\n   * @returns {number} the dot product of this vector and the one passed as param.\r\n   */\r\n  dot (vector: Vector2): number {\r\n    return this.x * vector.x + this.y * vector.y\r\n  }\r\n\r\n  floor (): void {\r\n    this.x = Math.floor(this.x)\r\n    this.x = Math.floor(this.x)\r\n  }\r\n\r\n  /**\r\n   * Create a clone of this vector.\r\n   *\r\n   * @returns {Vector2} cloned vector\r\n   */\r\n  clone (): Vector2 {\r\n    return new Vector2(this.x, this.y)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Vector2.ts","import { EntityType } from '../game/interfaces/CollideAble'\r\nimport SpriteSheet from '../graphics/2D/SpriteSheet'\r\nimport Sound from '../audio/Sound'\r\nimport Ajax from '../lib/ajax/Ajax'\r\n\r\nexport enum AssetType {\r\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_LOOP = 'LOOP'\r\n}\r\n\r\n/**\r\n * Asset manager Class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class AssetManager {\r\n  audioContext\r\n  cache\r\n  queue\r\n  downloadCount: number\r\n  masterGain: GainNode\r\n  effectsGain: GainNode\r\n  ambientGain: GainNode\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor () {\r\n    this.cache = {\r\n      sprites: {},\r\n      spriteSheets: {},\r\n      audio: {}\r\n    }\r\n    this.downloadCount = 0\r\n    this.queue = []\r\n    this.initAudioContext()\r\n  }\r\n\r\n  initAudioContext (): void {\r\n    try {\r\n      // Fix for browsers using prefixes\r\n      window.AudioContext = window.AudioContext || webkitAudioContext\r\n      this.audioContext = new AudioContext()\r\n      this.masterGain = this.audioContext.createGain()\r\n      this.effectsGain = this.audioContext.createGain()\r\n      this.ambientGain = this.audioContext.createGain()\r\n      this.masterGain.gain.value = 1\r\n      this.masterGain.connect(this.audioContext.destination)\r\n      this.effectsGain.connect(this.masterGain)\r\n      this.ambientGain.connect(this.masterGain)\r\n      this.ambientGain.gain.value = 1\r\n      this.effectsGain.gain.value = 1\r\n    } catch (e) {\r\n      console.log('Web Audio API is not supported in this browser')\r\n    }\r\n  }\r\n\r\n  adjustMasterVolume (value: number): void {\r\n    this.masterGain.gain.value = value\r\n  }\r\n\r\n  adjustAmbientVolume (value: number): void {\r\n    this.ambientGain.gain.value = value\r\n  }\r\n\r\n  adjustEffectsVolume (value: number): void {\r\n    this.effectsGain.gain.value = value\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  done (): boolean {\r\n    return this.downloadCount === this.queue.length\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {EntityType} id\r\n   * @param {string} path\r\n   * @param {AssetType} type\r\n   * @param {{}} opts\r\n   */\r\n  queueDownload (id: EntityType, path: string, type: AssetType, opts = null): void {\r\n    this.queue.push({\r\n      id: id,\r\n      path: path,\r\n      type: type,\r\n      opts: opts\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Build an AJAX Request to loadAudioFromUrl audio file into the buffer cache.\r\n   *\r\n   * @param item object with name of file and path to file\r\n   * @param callback function to execute on done\r\n   */\r\n  loadAudioFromUrl (item, callback): void {\r\n    Ajax.create({\r\n      method: 'GET',\r\n      url: item.path,\r\n      responseType: 'arraybuffer'\r\n    }, response => {\r\n      this.decodeAudio(response, item.id, callback)\r\n    })\r\n  }\r\n\r\n  decodeAudio (data, id, callback): void {\r\n    this.audioContext.decodeAudioData(data).then(\r\n      buffer => {\r\n        this.cache.audio[id] = buffer\r\n        this.downloadCount += 1\r\n        if (this.done()) {\r\n          callback()\r\n        }\r\n      },\r\n      error => { console.log('Error with decoding audio data' + error) }\r\n    )\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param callback\r\n   */\r\n  loadSprite (item, callback): void {\r\n    let sprite = new Image()\r\n    sprite.addEventListener('load', () => {\r\n      this.downloadCount++\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    })\r\n    sprite.src = item.path\r\n    this.cache.sprites[item.id] = sprite\r\n  }\r\n\r\n  /**\r\n   * Load sprites sheet.\r\n   *\r\n   * @param item sprite sheet info\r\n   * @param callback called upon downloading all\r\n   */\r\n  loadSpriteSheet (item, callback): void {\r\n    let spriteSheet = new Image()\r\n    spriteSheet.addEventListener('load', () => {\r\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\r\n      this.downloadCount += 1\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    })\r\n    spriteSheet.src = item.path\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param callback\r\n   */\r\n  downloadAll (callback): void {\r\n    this.queue.forEach(item => {\r\n      if (item.type === AssetType.AUDIO) {\r\n        this.loadAudioFromUrl(item, callback)\r\n      } else if (item.type === AssetType.SPRITE) {\r\n        this.loadSprite(item, callback)\r\n      } else if (item.type === AssetType.SPRITE_SHEET) {\r\n        this.loadSpriteSheet(item, callback)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Create an audio buffer source node from cached buffer.\r\n   * Send it to the destination of the audio context and play it.\r\n   *\r\n   * @param {EntityType} id file id\r\n   * @param {AssetType} type\r\n   */\r\n  getSound (id: EntityType, type: AssetType): Sound {\r\n    let gain\r\n    if (type === AssetType.AUDIO) {\r\n      gain = this.effectsGain\r\n    } else {\r\n      gain = this.ambientGain\r\n    }\r\n    return new Sound(this.audioContext, gain, this.cache.audio[id])\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} id\r\n   * @returns {EntityType}\r\n   */\r\n  getSprite (id: EntityType): any {\r\n    return this.cache.sprites[id]\r\n  }\r\n\r\n  /**\r\n   * Get sprite sheet by name.\r\n   *\r\n   * @param {EntityType} id\r\n   * @returns {SpriteSheet}\r\n   */\r\n  getSpriteSheet (id: EntityType): SpriteSheet {\r\n    return this.cache.spriteSheets[id]\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/AssetManager.ts","import Vector2 from '../math/Vector2'\r\nimport CollideAble, { EntityType } from '../../game/interfaces/CollideAble'\r\n\r\nexport default class HitBox implements CollideAble {\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n  position: Vector2\r\n  width: number\r\n  height: number\r\n\r\n  /**\r\n   * Initializes position and dimension.\r\n   * @param {number} x position x\r\n   * @param {number} y position y\r\n   * @param {number} width dimension width\r\n   * @param {number} height dimension height\r\n   */\r\n  constructor (x, y, width, height) {\r\n    this.position = new Vector2(x, y)\r\n    this.width = width\r\n    this.height = height\r\n    this.colliding = false\r\n    this.collidesWith = []\r\n    this.type = EntityType.BOX\r\n    this.collidesWith.push(EntityType.PLAYER)\r\n  }\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/HitBox.ts","import Observer from './Observer'\r\n\r\n/**\r\n * Observable class to be extended by a class that should be observed.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Observable {\r\n  private _observers: Observer[]\r\n  private _state: any\r\n\r\n  constructor () {\r\n    this._observers = []\r\n    this._state = {}\r\n  }\r\n\r\n  /**\r\n   * Register an observer on this observable.\r\n   *\r\n   * @param {Observer} observer Object implementing the Observer interface\r\n   */\r\n  register (observer: Observer): void {\r\n    this._observers.push(observer)\r\n  }\r\n\r\n  /**\r\n   * Remove an observer from this observables observers list.\r\n   *\r\n   * @param {Observer} observer Object implementing the Observer interface\r\n   */\r\n  unRegister (observer: Observer): void {\r\n    this._observers = this._observers.filter(obs => {\r\n      return obs !== observer\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Notify all observers.\r\n   */\r\n  notify (): void {\r\n    this._observers.forEach(observer => {\r\n      observer.update(this._state)\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Observer[]}\r\n   */\r\n  get observers (): Observer[] {\r\n    return this._observers\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Observer[]} observers\r\n   */\r\n  set observers (observers: Observer[]) {\r\n    this._observers = observers\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {any}\r\n   */\r\n  get state (): any {\r\n    return this._state\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {any} state\r\n   */\r\n  set state (state: any) {\r\n    this._state = state\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import { Actions } from './InputManager'\r\n\r\n/**\r\n * Settings class for game applications.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Settings {\r\n  keyBoard\r\n  player\r\n  audio\r\n\r\n  constructor () {\r\n    this.keyBoard = {\r\n      'w': Actions.UP,\r\n      's': Actions.DOWN,\r\n      'a': Actions.LEFT,\r\n      'd': Actions.RIGHT,\r\n      'space': Actions.SHOOT,\r\n      'r': Actions.RESTART,\r\n      'q': Actions.ROTATE_LEFT,\r\n      'e': Actions.ROTATE_RIGHT\r\n    }\r\n    this.player = {\r\n      maxVelocity: 15,\r\n      fireDelay: 15,\r\n      friction: 0.7,\r\n      acceleration: 3\r\n    }\r\n    this.audio = {\r\n      master: 1,\r\n      ambient: 1,\r\n      effects: 1\r\n    }\r\n  }\r\n\r\n  findKey (value): string {\r\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\r\n  }\r\n\r\n  setKey (newKey, action: Actions): void {\r\n    let oldKey = this.findKey(action)\r\n    if (newKey !== oldKey) {\r\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\r\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\r\n      delete this.keyBoard[oldKey]\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Settings.ts","/**\r\n * Sprite sheet definition.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class SpriteSheet {\r\n  private _image\r\n  private _frameWidth\r\n  private _frameHeight\r\n  private _framesPerRow\r\n\r\n  /**\r\n   * Constructor. Sets frame dimensions and calculates number of frames.\r\n   *\r\n   * @param image\r\n   * @param frameWidth\r\n   * @param frameHeight\r\n   */\r\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\r\n    this._image = image\r\n    this._frameWidth = frameWidth\r\n    this._frameHeight = frameHeight\r\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Image}\r\n   */\r\n  get image (): HTMLImageElement {\r\n    return this._image\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Image} image\r\n   */\r\n  set image (image: HTMLImageElement) {\r\n    if (!(image instanceof Image)) {\r\n      throw new Error('Param tileSetImage must be of type Image!')\r\n    }\r\n    this._image = image\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get frameWidth (): number {\r\n    return this._frameWidth\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} frameWidth\r\n   */\r\n  set frameWidth (frameWidth: number) {\r\n    this._frameWidth = frameWidth\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get frameHeight (): number {\r\n    return this._frameHeight\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} frameHeight\r\n   */\r\n  set frameHeight (frameHeight: number) {\r\n    this._frameHeight = frameHeight\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get framesPerRow (): number {\r\n    return this._framesPerRow\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} framesPerRow\r\n   */\r\n  set framesPerRow (framesPerRow: number) {\r\n    this._framesPerRow = framesPerRow\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/2D/SpriteSheet.ts","/**\r\n * Sound class used to play a sound from a file.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Sound {\r\n  audioContext: AudioContext\r\n  source: AudioBufferSourceNode\r\n  gainNode: GainNode\r\n  masterGain: GainNode\r\n  buffer\r\n  playing: boolean\r\n\r\n  /**\r\n   *\r\n   * @param audioContext\r\n   * @param {GainNode} masterGain\r\n   * @param buffer\r\n   */\r\n  constructor (audioContext, masterGain: GainNode, buffer) {\r\n    this.audioContext = audioContext\r\n    this.masterGain = masterGain\r\n    this.buffer = buffer\r\n    this.gainNode = this.audioContext.createGain()\r\n    this.gainNode.gain.value = 0.2\r\n    this.gainNode.connect(this.masterGain)\r\n    this.playing = false\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {boolean} loop\r\n   */\r\n  play (loop = false): void {\r\n    this.source = this.audioContext.createBufferSource()\r\n    this.source.buffer = this.buffer\r\n    this.source.loop = loop\r\n    this.source.connect(this.gainNode)\r\n    this.source.start(0)\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  stop (): void {\r\n    this.source.stop(0)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio/Sound.ts","export default class Ajax {\r\n  private static defaults = {\r\n    url: '',\r\n    method: 'GET',\r\n    contentType: 'text/html',\r\n    async: true,\r\n    data: null\r\n  }\r\n\r\n  /**\r\n   * Create and send an XML-HTTP request.\r\n   * Requires an options object.\r\n   *\r\n   * @param opts Possible option properties:\r\n   * url = url to send the request to.\r\n   * method = request method. GET, POST, PUT, DELETE.\r\n   * contentType = specify the content type of the request.\r\n   * async = boolean flag for async calls. Defaults to true.\r\n   * data = request body.\r\n   * @param callback success callback function\r\n   */\r\n  public static create (opts, callback): void {\r\n    let xHttp = new XMLHttpRequest()\r\n    xHttp.addEventListener('load', () => {\r\n      callback(xHttp.response)\r\n    })\r\n    xHttp.open(\r\n      opts.method ? opts.method : Ajax.defaults.method,\r\n      opts.url ? opts.url : Ajax.defaults.url,\r\n      opts.async ? opts.async : Ajax.defaults.async\r\n    )\r\n    if (opts.hasOwnProperty('contentType')) {\r\n      xHttp.setRequestHeader(\r\n        'Content-Type',\r\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\r\n      )\r\n    }\r\n    if (opts.hasOwnProperty('responseType')) {\r\n      xHttp.responseType = opts.responseType\r\n    }\r\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\r\n      opts.data = JSON.stringify(opts.data)\r\n    }\r\n    xHttp.send(opts.data ? opts.data : null)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ajax/Ajax.ts","import HitBox from './HitBox'\r\nimport Drawable from '../../game/interfaces/Drawable'\r\n\r\n/**\r\n * QuadTree class used to optimize collision checking.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class QuadTree {\r\n  level: number\r\n  maxObjects: number\r\n  maxLevels: number\r\n  hitBox: HitBox\r\n  objects: Drawable[]\r\n  nodes: QuadTree[]\r\n\r\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param {HitBox} hitBox\r\n   * @param {number} level\r\n   */\r\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\r\n    this.level = level\r\n    this.maxObjects = 10\r\n    this.maxLevels = 5\r\n    this.hitBox = hitBox\r\n    this.objects = []\r\n    this.nodes = []\r\n  }\r\n\r\n  /**\r\n   * Clears the QuadTree and its sub nodes from all game objects.\r\n   */\r\n  clear (): void {\r\n    this.objects = []\r\n    this.nodes.forEach(node => node.clear())\r\n    this.nodes = []\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param returnedObjects\r\n   * @returns {any}\r\n   */\r\n  getAllObjects (returnedObjects) {\r\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\r\n    this.objects.forEach(object => returnedObjects.push(object))\r\n    return returnedObjects\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param returnedObjects\r\n   * @param object\r\n   * @returns {any}\r\n   */\r\n  findObjects (returnedObjects, object) {\r\n    if (typeof object === 'undefined') {\r\n      console.log('UNDEFINED OBJECT')\r\n      return\r\n    }\r\n    let index = this.getIndex(object)\r\n    if (index !== -1 && this.nodes.length) {\r\n      this.nodes[index].findObjects(returnedObjects, object)\r\n    }\r\n    this.objects.forEach(obj => returnedObjects.push(obj))\r\n    return returnedObjects\r\n  }\r\n\r\n  /**\r\n   * Insert an object into the QuadTree.\r\n   *\r\n   * @param object\r\n   */\r\n  insert (object): void {\r\n    if (typeof object === 'undefined') {\r\n      return\r\n    }\r\n    if (object instanceof Array) {\r\n      object.forEach(element => this.insert(element))\r\n      return\r\n    }\r\n    if (this.nodes.length > 0) {\r\n      let index = this.getIndex(object)\r\n      // Only addVector the object to a sub node if it can fit completely within one\r\n      if (index !== -1) {\r\n        this.nodes[index].insert(object)\r\n        return\r\n      }\r\n    }\r\n    this.objects.push(object)\r\n\r\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\r\n      if (typeof this.nodes[0] === 'undefined') {\r\n        this.split()\r\n      }\r\n      let i = 0\r\n      while (i < this.objects.length) {\r\n        let index = this.getIndex(this.objects[i])\r\n        if (index !== -1) {\r\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\r\n        } else {\r\n          i++\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the index of an object from the QuadTree.\r\n   *\r\n   * @param object\r\n   * @returns {number}\r\n   */\r\n  getIndex (object): number {\r\n    let index = -1\r\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\r\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\r\n    // Object can fit completely within the top quadrant\r\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\r\n    // Object can fit completely within the bottom quadrant\r\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\r\n    // Object can fit completely within the left quadrants\r\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\r\n      if (topQuadrant) {\r\n        index = 1\r\n      } else if (bottomQuadrant) {\r\n        index = 2\r\n      }\r\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\r\n      if (topQuadrant) {\r\n        index = 0\r\n      } else if (bottomQuadrant) {\r\n        index = 3\r\n      }\r\n    }\r\n    return index\r\n  }\r\n\r\n  /**\r\n   * Split the tree on demand.\r\n   */\r\n  split (): void {\r\n    let subWidth = (this.hitBox.width / 2) | 0\r\n    let subHeight = (this.hitBox.height / 2) | 0\r\n    this.nodes[0] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\r\n    this.nodes[1] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\r\n    this.nodes[2] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\r\n    this.nodes[3] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/QuadTree.ts","import QuadTree from './QuadTree'\r\n\r\nexport default class CollisionManager {\r\n  quadTree: QuadTree\r\n\r\n  constructor (quadTree) {\r\n    this.quadTree = quadTree\r\n  }\r\n\r\n  detectCollision (): void {\r\n    let objects = []\r\n    this.quadTree.getAllObjects(objects)\r\n\r\n    for (let i = 0; i < objects.length; i++) {\r\n      let obj = []\r\n      this.quadTree.findObjects(obj, objects[i])\r\n\r\n      for (let j = 0; j < obj.length; j++) {\r\n        // DETECT COLLISION ALGORITHM\r\n        if (objects[i].isCollideAbleWith(obj[j]) &&\r\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\r\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\r\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\r\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\r\n          objects[i].colliding = true\r\n          obj[j].colliding = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/CollisionManager.ts","import Rpg from '../../game/Rpg'\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => new Rpg())\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/tileset/test.ts","import QuadTree from '../lib/collision/QuadTree'\r\nimport Entity from '../lib/entity/Entity'\r\nimport CollisionManager from '../lib/collision/CollisionManager'\r\nimport Area from './entities/Area'\r\nimport Camera from '../graphics/2D/Camera'\r\nimport InputManager from '../client/InputManager'\r\nimport Settings from '../client/Settings'\r\nimport AssetManager, { AssetType } from '../client/AssetManager'\r\nimport TileSetMap from '../lib/tileset/TileSetMap'\r\nimport { EntityType } from './interfaces/CollideAble'\r\nimport HitBox from '../lib/collision/HitBox'\r\nimport IGame from '../lib/interfaces/IGame'\r\n\r\nexport default class Rpg implements IGame {\r\n  playing: boolean\r\n  canvas: HTMLCanvasElement\r\n  context: CanvasRenderingContext2D\r\n  canvasPlayer: HTMLCanvasElement\r\n  assetManager: AssetManager\r\n  inputManager: InputManager\r\n  settings: Settings\r\n  area: Area\r\n  camera: Camera\r\n  player: Entity\r\n  quadTree: QuadTree\r\n  collisionManager: CollisionManager\r\n\r\n  constructor () {\r\n    this.canvas = document.getElementById('background') as HTMLCanvasElement\r\n    this.canvasPlayer = document.getElementById('player') as HTMLCanvasElement\r\n    this.assetManager = new AssetManager()\r\n    this.settings = new Settings()\r\n    this.inputManager = new InputManager(this.settings)\r\n    this.init()\r\n  }\r\n\r\n  init (): void {\r\n    this.assetManager.queueDownload(EntityType.MAP, 'assets/tilesets/tileset.png', AssetType.SPRITE)\r\n    this.assetManager.queueDownload(EntityType.PLAYER, 'assets/sprites/player.png', AssetType.SPRITE)\r\n    this.assetManager.queueDownload(EntityType.BACKGROUND, 'assets/audio/amb_wilderness.mp3', AssetType.AUDIO)\r\n    this.assetManager.downloadAll(() => {\r\n      let ground = [\r\n        [172, 172, 172, 79, 34, 34, 34, 34, 34, 34, 34, 34, 56, 57, 54, 55, 56, 147, 67, 67, 68, 79, 79, 171, 172, 172, 173, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [172, 172, 172, 79, 34, 34, 34, 34, 34, 34, 146, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 159, 189, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [172, 172, 172, 79, 79, 34, 34, 34, 34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 159, 189, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [188, 188, 188, 79, 79, 79, 79, 34, 34, 34, 36, 172, 172, 143, 142, 157, 79, 79, 79, 79, 79, 79, 187, 159, 189, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 34, 34, 36, 172, 159, 158, 172, 143, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 39, 51, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 36, 172, 143, 142, 172, 172, 143, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 52, 172, 172, 172, 172, 172, 172, 143, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 52, 172, 172, 172, 172, 172, 172, 159, 188, 189, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 188, 158, 172, 172, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 187, 158, 159, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 159, 188, 189, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [155, 142, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 187, 188, 188, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [171, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [171, 172, 143, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 187, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [187, 188, 158, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 188, 189, 79, 79, 79, 79, 79, 79, 155, 156, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 156, 156, 156, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 79, 79, 79, 79, 79, 79, 155, 172, 172, 159, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79]\r\n\r\n      ]\r\n\r\n      let topLayer = [\r\n        [0, 0, 32, 33, 0, 220, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 48, 49, 0, 236, 220, 220, 236, 0, 0, 147, 72, 73, 70, 71, 72, 73, 83, 83, 84, 85, 0, 0, 0, 0, 0, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 64, 65, 54, 0, 236, 236, 0, 0, 162, 163, 84, 89, 86, 87, 88, 89, 99, 99, 100, 101, 0, 0, 0, 0, 7, 112, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 80, 81, 70, 54, 55, 50, 0, 0, 0, 179, 100, 105, 102, 103, 104, 105, 0, 0, 0, 0, 0, 0, 16, 22, 23, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 96, 97, 86, 70, 65, 144, 193, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 102, 86, 81, 160, 161, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 65, 174, 175, 67, 66, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 102, 97, 176, 177, 0, 0, 37, 0, 252, 0, 0, 0, 201, 202, 0, 0, 0, 0, 0, 80, 81, 190, 191, 83, 82, 70, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 48, 49, 0, 0, 53, 0, 0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 96, 97, 222, 223, 99, 98, 86, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [201, 202, 0, 0, 0, 0, 0, 64, 65, 66, 68, 69, 0, 0, 0, 0, 0, 233, 234, 0, 0, 0, 0, 0, 238, 239, 0, 0, 238, 239, 102, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [217, 218, 0, 0, 0, 0, 0, 80, 81, 82, 84, 85, 0, 0, 0, 0, 0, 249, 250, 0, 0, 0, 0, 0, 254, 255, 0, 0, 254, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [233, 234, 0, 0, 0, 0, 0, 96, 97, 98, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [249, 250, 0, 0, 201, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 239, 0, 0, 238, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 255, 0, 0, 254, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 233, 234, 196, 197, 198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [2, 3, 4, 0, 249, 250, 228, 229, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [18, 19, 20, 8, 0, 0, 244, 245, 246, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 35, 40, 24, 25, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 40, 41, 20, 8, 9, 0, 0, 0, 0, 0, 0, 0, 16, 17, 18, 19, 20, 21, 0, 0, 0, 0, 0, 0, 0, 233, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 40, 19, 24, 25, 8, 9, 0, 0, 0, 0, 0, 48, 49, 50, 51, 52, 115, 3, 4, 0, 0, 0, 0, 0, 249, 250, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 40, 41, 20, 21, 0, 0, 0, 0, 0, 64, 65, 66, 67, 52, 19, 19, 20, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n      ]\r\n      this.player = new Entity(350, 370, this.assetManager.getSprite(EntityType.PLAYER), this.canvasPlayer.getContext('2d'))\r\n      this.area = new Area(\r\n        new TileSetMap(\r\n          this.assetManager.getSprite(EntityType.MAP),\r\n          [ground, topLayer],\r\n          this.canvas.getContext('2d'),\r\n          32, ground[0].length,\r\n          ground.length,\r\n          16\r\n        )\r\n      )\r\n      this.canvas.width = window.innerWidth > this.area.map.width ? this.area.map.width : window.innerWidth\r\n      this.canvas.height = window.innerHeight > this.area.map.height ? this.area.map.height : window.innerHeight\r\n      this.canvasPlayer.width = window.innerWidth > this.area.map.width ? this.area.map.width : window.innerWidth\r\n      this.canvasPlayer.height = window.innerHeight > this.area.map.height ? this.area.map.height : window.innerHeight\r\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvas.width, this.canvas.height))\r\n      this.collisionManager = new CollisionManager(this.quadTree)\r\n      this.camera = new Camera(0, 0, this.canvasPlayer.width, this.canvasPlayer.height, this.area.map.width, this.area.map.height)\r\n\r\n      // generate a large tileSetImage texture for the room\r\n      this.area.map.generate()\r\n      this.inputManager.register(this.player)\r\n      this.camera.follow(this.player, this.canvas.width / 2, this.canvas.height / 2)\r\n      let ambient = this.assetManager.getSound(EntityType.BACKGROUND, AssetType.AUDIO_LOOP)\r\n      ambient.play(true)\r\n      this.run()\r\n    })\r\n  }\r\n\r\n  start (): void {\r\n\r\n  }\r\n\r\n  animationCallback (timeStamp: number): void {\r\n  }\r\n\r\n  stop (): void {\r\n\r\n  }\r\n\r\n  update (): void {\r\n    this.quadTree.clear()\r\n    this.quadTree.insert(this.player)\r\n    this.quadTree.insert(this.area.map.hitBoxes)\r\n    this.collisionManager.detectCollision()\r\n    this.camera.update()\r\n    this.player.move(this.area.map.width, this.area.map.height)\r\n  }\r\n\r\n  render (): void {\r\n    this.player.draw(\r\n      Math.floor(this.camera.position.x),\r\n      Math.floor(this.camera.position.y),\r\n      Math.floor(this.camera.previousPosition.x),\r\n      Math.floor(this.camera.previousPosition.y)\r\n    )\r\n    this.area.map.draw(Math.floor(this.camera.position.x), Math.floor(this.camera.position.y))\r\n  }\r\n\r\n  run (): void {\r\n    this.update()\r\n    this.render()\r\n    window.requestAnimationFrame(() => this.run())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/Rpg.ts","import Vector2 from '../math/Vector2'\r\nimport { Actions } from '../../client/InputManager'\r\nimport Observer from '../observer/Observer'\r\nimport CollideAble, { EntityType } from '../../game/interfaces/CollideAble'\r\nimport Drawable from '../../game/interfaces/Drawable'\r\n\r\nexport default class Entity implements Observer, CollideAble, Drawable {\r\n  speed: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n  position: Vector2\r\n  velocity: Vector2\r\n  sprite\r\n  context\r\n  acceleration: Vector2\r\n  state\r\n  width\r\n  height\r\n  previousPosition: Vector2\r\n\r\n  constructor (x: number, y: number, sprite, context) {\r\n    this.position = new Vector2(x, y)\r\n    this.velocity = new Vector2(1, 1)\r\n    this.sprite = sprite\r\n    this.context = context\r\n    this.acceleration = new Vector2(0, 0)\r\n    this.state = {}\r\n    this.colliding = false\r\n    this.type = EntityType.PLAYER\r\n    this.collidesWith = []\r\n    this.collidesWith.push(EntityType.BOX)\r\n    this.width = sprite.width\r\n    this.height = sprite.height\r\n    this.previousPosition = new Vector2(x, y)\r\n  }\r\n\r\n  move (worldWidth, worldHeight): void {\r\n    if (!this.colliding) {\r\n      this.previousPosition.setVector(this.position)\r\n      this.acceleration.set(0, 0)\r\n      if (this.state[Actions.LEFT]) {\r\n        this.acceleration.add(-3, 0)\r\n      }\r\n      if (this.state[Actions.RIGHT]) {\r\n        this.acceleration.add(3, 0)\r\n      }\r\n      if (this.state[Actions.UP]) {\r\n        this.acceleration.add(0, -3)\r\n      }\r\n      if (this.state[Actions.DOWN]) {\r\n        this.acceleration.add(0, 3)\r\n      }\r\n      this.velocity.multiply(0.6)\r\n      this.velocity.addVector(this.acceleration)\r\n      this.velocity.limit(15)\r\n      this.position.addVector(this.velocity)\r\n\r\n      if (this.position.x - this.width / 2 < 0) {\r\n        this.position.x = this.width / 2\r\n      }\r\n      if (this.position.y - this.height / 2 < 0) {\r\n        this.position.y = this.height / 2\r\n      }\r\n      if (this.position.x + this.width / 2 > worldWidth) {\r\n        this.position.x = worldWidth - this.width / 2\r\n      }\r\n      if (this.position.y + this.height / 2 > worldHeight) {\r\n        this.position.y = worldHeight - this.height / 2\r\n      }\r\n    } else {\r\n      this.goBack()\r\n    }\r\n  }\r\n\r\n  draw (xView: number, yView: number, prevXView: number, prevYView: number): void {\r\n    this.context.clearRect(\r\n      (Math.floor(this.previousPosition.x) - this.width / 2) - prevXView,\r\n      (Math.floor(this.previousPosition.y) - this.height / 2) - prevYView,\r\n      this.width,\r\n      this.height\r\n    )\r\n    this.context.drawImage(\r\n      this.sprite,\r\n      (Math.floor(this.position.x) - this.width / 2) - xView,\r\n      (Math.floor(this.position.y) - this.height / 2) - yView,\r\n      this.width,\r\n      this.height\r\n    )\r\n  }\r\n\r\n  goBack (): void {\r\n    let temp = this.position.clone()\r\n    this.position.setVector(this.previousPosition)\r\n    this.previousPosition.setVector(temp)\r\n    this.colliding = false\r\n  }\r\n\r\n  update (state: any): void {\r\n    this.state = state\r\n  }\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/entity/Entity.ts","import TileSetMap from '../../lib/tileset/TileSetMap'\r\n\r\nexport default class Area {\r\n  map: TileSetMap\r\n\r\n  constructor (map: TileSetMap) {\r\n    this.map = map\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Area.ts","import Vector2 from '../../lib/math/Vector2'\r\nimport Rectangle from '../../lib/geometry/Rectangle'\r\nimport Drawable from '../../game/interfaces/Drawable'\r\n\r\nexport enum AXIS {\r\n  NONE = 'none',\r\n  HORIZONTAL = 'horizontal',\r\n  VERTICAL = 'vertical',\r\n  BOTH = 'both'\r\n}\r\n\r\n/**\r\n * Camera class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Camera {\r\n  position: Vector2\r\n  previousPosition: Vector2\r\n  viewWidth: number\r\n  viewHeight: number\r\n  axis: AXIS\r\n  following: Drawable\r\n  deadZone: Vector2\r\n  viewportRect: Rectangle\r\n  worldRect: Rectangle\r\n\r\n  constructor (x, y, viewWidth, viewHeight, worldWidth, worldHeight) {\r\n    // position of camera (left-top coordinate)\r\n    this.position = new Vector2(x, y)\r\n    this.previousPosition = new Vector2(x, y)\r\n    this.deadZone = new Vector2(0, 0)\r\n\r\n    // viewport dimensions\r\n    this.viewWidth = viewWidth\r\n    this.viewHeight = viewHeight\r\n\r\n    // allow camera to move in vertical and horizontal axis\r\n    this.axis = AXIS.BOTH\r\n\r\n    // object that should be followed\r\n    this.following = null\r\n\r\n    // rectangle that represents the viewport\r\n    this.viewportRect = new Rectangle(this.position.x, this.position.y, this.viewWidth, this.viewHeight)\r\n\r\n    // rectangle that represents the world's boundary (room's boundary)\r\n    this.worldRect = new Rectangle(0, 0, worldWidth, worldHeight)\r\n\r\n  }\r\n\r\n  /**\r\n   * Object needs to have \"x\" and \"y\" properties (as world(or room) position)\r\n   *\r\n   * @param {Drawable} following\r\n   * @param xDeadZone\r\n   * @param yDeadZone\r\n   */\r\n  follow (following: Drawable, xDeadZone, yDeadZone): void {\r\n    this.following = following\r\n    this.deadZone.set(xDeadZone, yDeadZone)\r\n  }\r\n\r\n  update (): void {\r\n    this.previousPosition.setVector(this.position)\r\n    // keep following the player (or other desired object)\r\n    if (this.following != null) {\r\n      if (this.axis === AXIS.HORIZONTAL || this.axis === AXIS.BOTH) {\r\n        // moves camera on horizontal axis based on followed object position\r\n        if (this.following.position.x - this.position.x + this.deadZone.x > this.viewWidth) {\r\n          this.position.x = this.following.position.x - (this.viewWidth - this.deadZone.x)\r\n        } else if (this.following.position.x - this.deadZone.x < this.position.x) {\r\n          this.position.x = this.following.position.x - this.deadZone.x\r\n        }\r\n      }\r\n      if (this.axis === AXIS.VERTICAL || this.axis === AXIS.BOTH) {\r\n        // moves camera on vertical axis based on followed object position\r\n        if (this.following.position.y - this.position.y + this.deadZone.y > this.viewHeight) {\r\n          this.position.y = this.following.position.y - (this.viewHeight - this.deadZone.y)\r\n        } else if (this.following.position.y - this.deadZone.y < this.position.y) {\r\n          this.position.y = this.following.position.y - this.deadZone.y\r\n        }\r\n      }\r\n    }\r\n\r\n    // update viewportRect\r\n    this.viewportRect.set(this.position.x, this.position.y)\r\n\r\n    // don't let camera leaves the world's boundary\r\n    if (!this.viewportRect.within(this.worldRect)) {\r\n      if (this.viewportRect.left < this.worldRect.left) {\r\n        this.position.x = this.worldRect.left\r\n      }\r\n      if (this.viewportRect.top < this.worldRect.top) {\r\n        this.position.y = this.worldRect.top\r\n      }\r\n      if (this.viewportRect.right > this.worldRect.right) {\r\n        this.position.x = this.worldRect.right - this.viewWidth\r\n      }\r\n      if (this.viewportRect.bottom > this.worldRect.bottom) {\r\n        this.position.y = this.worldRect.bottom - this.viewHeight\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/2D/Camera.ts","/**\r\n * Rectangle class for camera.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Rectangle {\r\n  left: number\r\n  right: number\r\n  top: number\r\n  bottom: number\r\n  width: number\r\n  height: number\r\n\r\n  constructor (left: number, top: number, width: number, height: number) {\r\n    this.left = left\r\n    this.top = top\r\n    this.width = width\r\n    this.height = height\r\n    this.right = this.left + this.width\r\n    this.bottom = this.top + this.height\r\n  }\r\n\r\n  set (left: number, top: number, width?: number, height?: number): void {\r\n    this.left = left\r\n    this.top = top\r\n    this.width = width || this.width\r\n    this.height = height || this.height\r\n    this.right = (this.left + this.width)\r\n    this.bottom = (this.top + this.height)\r\n  }\r\n\r\n  within (other): boolean {\r\n    return (other.left <= this.left &&\r\n      other.right >= this.right &&\r\n      other.top <= this.top &&\r\n      other.bottom >= this.bottom)\r\n  }\r\n\r\n  overlaps (other): boolean {\r\n    return (this.left < other.right &&\r\n      other.left < this.right &&\r\n      this.top < other.bottom &&\r\n      other.top < this.bottom)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/geometry/Rectangle.ts","import HitBox from '../collision/HitBox'\r\n\r\nexport default class TileSetMap {\r\n  tileSetImage: HTMLImageElement\r\n  image: HTMLImageElement\r\n  width: number\r\n  height: number\r\n  context\r\n  mapLayers\r\n  tileSize: number\r\n  tilesPerRow: number\r\n  tilesPerColumn: number\r\n  imageTilesPerRow: number\r\n  hitBoxes: Array<HitBox>\r\n\r\n  constructor (image, mapLayers, context, tileSize: number, tilesPerRow: number, tilesPerColumn: number, imageTilesPerRow: number) {\r\n    this.tileSetImage = image\r\n    this.width = tilesPerRow * tileSize\r\n    this.height = tilesPerColumn * tileSize\r\n    this.mapLayers = mapLayers\r\n    this.context = context\r\n    this.tileSize = tileSize\r\n    this.tilesPerRow = tilesPerRow\r\n    this.tilesPerColumn = tilesPerColumn\r\n    this.imageTilesPerRow = imageTilesPerRow\r\n    this.hitBoxes = []\r\n    console.log(this.width)\r\n    console.log(this.height)\r\n  }\r\n\r\n  generate (): void {\r\n    let ctx = document.createElement('canvas').getContext('2d')\r\n    ctx.canvas.width = this.width\r\n    ctx.canvas.height = this.height\r\n\r\n    this.mapLayers.forEach(layer => this.generateLayer(ctx, layer))\r\n\r\n    // store the generate map as this tileSetImage texture\r\n    this.image = new Image()\r\n    this.image.src = ctx.canvas.toDataURL('image/png')\r\n\r\n    // clear context\r\n    ctx = null\r\n  }\r\n\r\n  generateLayer (ctx, layer): void {\r\n    for (let row = 0; row < this.tilesPerColumn; row++) {\r\n      for (let col = 0; col < this.tilesPerRow; col++) {\r\n        let tile = layer[row][col]\r\n        if (tile !== 0 && this.mapLayers.indexOf(layer) === this.mapLayers.length - 1) {\r\n          this.hitBoxes.push(new HitBox((col * this.tileSize), (row * this.tileSize), this.tileSize, this.tileSize))\r\n        }\r\n        let tileRow = (tile / this.imageTilesPerRow) | 0\r\n        let tileCol = (tile % this.imageTilesPerRow) | 0\r\n        ctx.drawImage(\r\n          this.tileSetImage,\r\n          (tileCol * this.tileSize),\r\n          (tileRow * this.tileSize),\r\n          this.tileSize,\r\n          this.tileSize,\r\n          (col * this.tileSize),\r\n          (row * this.tileSize),\r\n          this.tileSize,\r\n          this.tileSize\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * draw the map adjusted to camera\r\n   * @param xView\r\n   * @param yView\r\n   */\r\n  draw (xView, yView): void {\r\n    this.context.drawImage(this.image, 0, 0, this.image.width, this.image.height, -xView, -yView, this.image.width, this.image.height)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/tileset/TileSetMap.ts"],"sourceRoot":""}