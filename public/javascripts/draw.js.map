{"version":3,"sources":["webpack:///webpack/bootstrap c7514ac0e890018ef171","webpack:///./src/lib/vector/Point.ts","webpack:///./src/draw/factory/ShapeFactory.ts","webpack:///./src/draw/interfaces/Shape.ts","webpack:///./src/draw/draw.ts","webpack:///./src/draw/gui/DrawingApp.ts","webpack:///./src/draw/gui/MenuBar.ts","webpack:///./src/draw/geometry/Rectangle.ts","webpack:///./src/draw/geometry/Triangle.ts","webpack:///./src/draw/geometry/Circle.ts","webpack:///./src/draw/geometry/Smiley.ts","webpack:///./src/draw/geometry/Line.ts","webpack:///./src/draw/config/Settings.ts","webpack:///./src/draw/tools/ShapeTool.ts"],"names":[],"mappings":"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","file":"draw.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c7514ac0e890018ef171","/**\n * Class Representing a Coordinate (x|y) on the canvas.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Point {\n  x: number\n  y: number\n\n  /**\n   * Default constructor.\n   *\n   * @param {number} x initializes x value of this point\n   * @param {number} y initializes y value of this point\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set both x and y values.\n   *\n   * @param {number} x x-axis value\n   * @param {number} y y-axis value\n   */\n  public set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set the x and y values of this point to the values of another point.\n   *\n   * @param {Point} point Other point\n   */\n  public setPoint (point: Point): void {\n    this.x = point.x\n    this.y = point.y\n  }\n\n  /**\n   * Create a another Point object with the same value as this Point.\n   *\n   * @returns {Point} A clone of this point\n   */\n  public clone (): Point {\n    return new Point(this.x, this.y)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/vector/Point.ts","import Shape, { Color } from '../interfaces/Shape'\nimport Point from '../../lib/vector/Point'\nimport Rectangle from '../geometry/Rectangle'\nimport Triangle from '../geometry/Triangle'\nimport Circle from '../geometry/Circle'\nimport Smiley from '../geometry/Smiley'\nimport Line from '../geometry/Line'\n\nexport enum ShapeType {\n  LINE, RECTANGLE, TRIANGLE, CIRCLE, SMILEY\n}\n\n/**\n * Factory class for generating shapes.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class ShapeFactory {\n  /**\n   * Generate a specified shape object.\n   *\n   * @param {ShapeType} shapeType Type of the shape\n   * @param {Point} start Starting location\n   * @param {Point} end End location\n   * @param {Color} color Drawing color\n   * @param {boolean} fill Flag determining whether the shape should be filled\n   * @returns {Shape} The generated shapes\n   */\n  static create (shapeType: ShapeType, start: Point, end: Point, color: Color, fill: boolean): Shape {\n    let shape\n    switch (shapeType) {\n      case ShapeType.LINE:\n        shape = new Line(start, end, color, fill)\n        break\n      case ShapeType.RECTANGLE:\n        shape = new Rectangle(start, end, color, fill)\n        break\n      case ShapeType.TRIANGLE:\n        shape = new Triangle(start, end, color, fill)\n        break\n      case ShapeType.CIRCLE:\n        shape = new Circle(start, end, color, fill)\n        break\n      case ShapeType.SMILEY:\n        shape = new Smiley(start, end, color, fill)\n        break\n      default:\n        throw new Error('Invalid Shape Type!')\n    }\n    return shape\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/factory/ShapeFactory.ts","import Point from '../../lib/vector/Point'\n\n/**\n * Basic hex-color enum.\n */\nexport enum Color {\n  RED = '#FF0000',\n  GREEN = '#00FF00',\n  BLUE = '#0000FF',\n  YELLOW = '#FFFF00',\n  BLACK = '#000000'\n}\n\n/**\n * Regex for verifying hex-color formats.\n * Valid formats are: #000 or #000000.\n *\n * @type {string}\n */\nexport const VALID_COLOR = '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'\n\n/**\n * Interface for drawing shapes.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface Shape {\n  start: Point\n  end: Point\n  color: Color\n  fill: boolean\n\n  /**\n   * Draws the shape onto the canvas.\n   *\n   * @param {CanvasRenderingContext2D} context Canvas rendering context\n   */\n  render (context: CanvasRenderingContext2D): void\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/interfaces/Shape.ts","import DrawingApp from './gui/DrawingApp'\nimport MenuBar from './gui/MenuBar'\nimport Settings from './config/Settings'\nimport ShapeTool from './tools/ShapeTool'\n\n/**\n * Entry script of the web application.\n * Initializes the drawing context and the menu bar.\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n  const canvas = document.getElementById('pane') as HTMLCanvasElement\n  const context = canvas.getContext('2d')\n  const menuBar = document.getElementById('menuBar') as HTMLElement\n  const settings = new Settings(menuBar.offsetHeight)\n  const menu = new MenuBar(menuBar)\n  const tool = new ShapeTool(settings)\n\n  menu.addMenu('File')\n  menu.addMenu('Edit', MenuBar.createEditMenu(settings, tool, context, canvas))\n  menu.addMenu('Color', MenuBar.createColorMenu(settings))\n  menu.addMenu('Shapes', MenuBar.createShapesMenu(settings))\n  menu.addMenu('Options', MenuBar.createOptionsMenu(settings))\n  menu.addMenu('Help')\n  new DrawingApp(canvas, menuBar, context, tool).init()\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/draw.ts","import Tool from '../interfaces/Tool'\n\n/**\n * Main application class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class DrawingApp {\n  private menuBar: HTMLElement\n  private canvas: HTMLCanvasElement\n  private context: CanvasRenderingContext2D\n  private tool: Tool\n\n  /**\n   * Default constructor.\n   *\n   * @param {HTMLCanvasElement} canvas Main drawing canvas\n   * @param {HTMLElement} menuBar menu Bar HTML element that displays options and tools\n   * @param {CanvasRenderingContext2D} context The context of the main canvas\n   * @param {Tool} tool Drawing tool\n   */\n  constructor (canvas: HTMLCanvasElement, menuBar: HTMLElement, context: CanvasRenderingContext2D, tool: Tool) {\n    this.menuBar = menuBar\n    this.canvas = canvas\n    this.canvas.width = window.innerWidth\n    this.canvas.height = window.innerHeight - this.menuBar.offsetHeight\n    this.context = context\n    this.tool = tool\n  }\n\n  /**\n   * Initialize the mouse events.\n   */\n  public init (): void {\n    this.canvas.addEventListener('mousedown', event => this.tool.click(event))\n    this.canvas.addEventListener('mousemove', event => {\n      this.tool.move(event)\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n      this.tool.renderAll(this.context)\n      this.tool.tempShape.render(this.context)\n    })\n    this.canvas.addEventListener('mouseup', event => {\n      this.tool.release(event)\n      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n      this.tool.renderAll(this.context)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/gui/DrawingApp.ts","import { Color, VALID_COLOR } from '../interfaces/Shape'\nimport { ShapeType } from '../factory/ShapeFactory'\nimport Tool from '../interfaces/Tool'\nimport Settings from '../config/Settings'\n\n/**\n * Menu bar at the top of the web app.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class MenuBar {\n  private element: HTMLElement\n  private submenus: HTMLElement[]\n\n  /**\n   *\n   * @param {HTMLElement} element\n   */\n  constructor (element: HTMLElement) {\n    this.element = element\n    this.submenus = []\n  }\n\n  /**\n   *\n   * @param {Settings} settings\n   * @param {Tool} tool\n   * @param {CanvasRenderingContext2D} context\n   * @param {HTMLCanvasElement} canvas\n   * @returns {HTMLElement[]}\n   */\n  static createEditMenu (settings: Settings, tool: Tool, context: CanvasRenderingContext2D, canvas: HTMLCanvasElement): HTMLElement[] {\n    const editEntries = []\n    const entryText = 'Undo'\n    const menuEntry = document.createElement('li') as HTMLElement\n    const menuLink = document.createElement('a')\n    menuLink.setAttribute('href', '#')\n    menuLink.setAttribute('id', entryText.toLowerCase())\n    menuLink.appendChild(document.createTextNode(entryText))\n    menuEntry.appendChild(menuLink)\n    menuEntry.classList.add('menuEntry')\n    menuEntry.addEventListener('click', () => {\n      tool.undo(context, canvas.width, canvas.height)\n    })\n    editEntries.push(menuEntry)\n    return editEntries\n  }\n\n  /**\n   *\n   * @param {Settings} settings\n   * @returns {HTMLElement[]}\n   */\n  static createColorMenu (settings: Settings): HTMLElement[] {\n    const colors = ['Red', 'Black', 'Blue', 'Yellow']\n    const colorEntries = []\n    colors.forEach(color => {\n      const menuEntry = document.createElement('li') as HTMLElement\n      const menuLink = document.createElement('a')\n      menuLink.setAttribute('href', '#')\n      menuLink.setAttribute('id', color.toLowerCase())\n      menuLink.appendChild(document.createTextNode(color))\n      menuEntry.appendChild(menuLink)\n      menuEntry.classList.add('menuEntry')\n      menuEntry.addEventListener('click', () => {\n        settings.activeColor = Color[color.toUpperCase()]\n      })\n      colorEntries.push(menuEntry)\n    })\n\n    const colorForm = document.createElement('form')\n    const colorInput = document.createElement('input') as HTMLInputElement\n    colorInput.setAttribute('type', 'color')\n    colorInput.setAttribute('accept', VALID_COLOR)\n    colorInput.addEventListener('change', () => {\n      settings.activeColor = colorInput.value\n    })\n    colorForm.appendChild(colorInput)\n    colorForm.classList.add('menuEntry')\n    colorEntries.push(colorForm)\n    return colorEntries\n  }\n\n  /**\n   *\n   * @param settings\n   * @returns {HTMLElement[]}\n   */\n  static createShapesMenu (settings): HTMLElement[] {\n    const tools = ['Line', 'Rectangle', 'Triangle', 'Circle', 'Smiley']\n    const toolEntries = []\n    tools.forEach(shape => {\n      const menuEntry = document.createElement('li') as HTMLElement\n      const menuLink = document.createElement('a')\n      menuLink.setAttribute('href', '#')\n      menuLink.setAttribute('id', shape.toLowerCase())\n      menuLink.appendChild(document.createTextNode(shape))\n      menuEntry.appendChild(menuLink)\n      menuEntry.classList.add('menuEntry')\n      menuEntry.addEventListener('click', () => {\n        settings.activeTool = ShapeType[shape.toUpperCase()]\n      })\n      toolEntries.push(menuEntry)\n    })\n    return toolEntries\n  }\n\n  /**\n   *\n   * @param {Settings} settings\n   * @returns {HTMLElement[]}\n   */\n  static createOptionsMenu (settings: Settings): HTMLElement[] {\n    const optionEntries = []\n    const entryText = 'Fill'\n    const menuEntry = document.createElement('li') as HTMLElement\n    const menuInput = document.createElement('input')\n    menuInput.setAttribute('type', 'checkbox')\n    menuInput.setAttribute('id', entryText.toLowerCase())\n    menuEntry.appendChild(document.createTextNode(entryText))\n    menuEntry.appendChild(menuInput)\n    menuEntry.classList.add('menuEntry')\n    menuEntry.addEventListener('click', () => {\n      settings.fill = !settings.fill\n      console.log(settings.fill)\n    })\n    optionEntries.push(menuEntry)\n    return optionEntries\n  }\n\n  /**\n   * Adds a top level menu entry.\n   *\n   * @param {string} title Display text of the menu and id\n   * @param {HTMLElement[]} entries Submenus and submenu entries\n   */\n  addMenu (title: string, entries: HTMLElement[] = []): void {\n    let submenu = document.createElement('li') as HTMLElement\n    let menuLink = document.createElement('a')\n    menuLink.setAttribute('href', '#')\n    menuLink.appendChild(document.createTextNode(title))\n    submenu.appendChild(menuLink)\n    submenu.classList.add('submenu')\n    submenu.setAttribute('id', title.toLowerCase())\n    if (entries.length > 0) {\n      const list = document.createElement('ul')\n      list.classList.add('submenu-content')\n      submenu.appendChild(list)\n      entries.forEach(entry => {\n        list.appendChild(entry)\n      })\n    }\n    this.submenus[title.toLowerCase()] = submenu\n    this.element.appendChild(submenu)\n  }\n\n  /**\n   * Get a menu by the set id.\n   *\n   * @param {string} title ID and title text of menu\n   * @returns {HTMLElement} The menu element\n   */\n  getMenu (title: string): HTMLElement {\n    return this.submenus.hasOwnProperty(title.toLowerCase()) ? this.submenus[title.toLowerCase()] : null\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/gui/MenuBar.ts","import Point from '../../lib/vector/Point'\nimport Shape, { Color } from '../interfaces/Shape'\n\n/**\n * Rectangle shape to be drawn on a canvas.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Rectangle implements Shape {\n  start: Point\n  end: Point\n  color: Color\n  fill: boolean\n\n  /**\n   * Default constructor.\n   *\n   * @param {Point} start Starting point of this shape\n   * @param {Point} end Ending point of this shape\n   * @param {Color} color The color of this shape\n   * @param {boolean} fill Flag determining whether this shape should be filled\n   */\n  constructor (start: Point, end: Point, color: Color, fill: boolean) {\n    this.start = start\n    this.end = end\n    this.color = color\n    this.fill = fill\n  }\n\n  /**\n   * Draw this rectangle on the canvas.\n   *\n   * @param {CanvasRenderingContext2D} context Drawing context\n   */\n  render (context: CanvasRenderingContext2D): void {\n    context.beginPath()\n    context.rect(this.start.x, this.start.y, this.end.x - this.start.x, this.end.y - this.start.y)\n    if (this.fill) {\n      context.fillStyle = this.color\n      context.fill()\n    } else {\n      context.strokeStyle = this.color\n      context.stroke()\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/geometry/Rectangle.ts","import Shape, { Color } from '../interfaces/Shape'\nimport Point from '../../lib/vector/Point'\n\n/**\n * Triangle shape to be drawn on a canvas object.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Triangle implements Shape {\n  start: Point\n  end: Point\n  color: Color\n  fill: boolean\n\n  /**\n   * Default constructor.\n   *\n   * @param {Point} start Starting point of this shape\n   * @param {Point} end Ending point of this shape\n   * @param {Color} color The color of this shape\n   * @param {boolean} fill Flag determining whether this shape should be filled\n   */\n  constructor (start: Point, end: Point, color: Color, fill: boolean) {\n    this.start = start\n    this.end = end\n    this.color = color\n    this.fill = fill\n  }\n\n  /**\n   * Draw the triangle onto the canvas.\n   *\n   * @param {CanvasRenderingContext2D} context Canvas rendering context\n   */\n  render (context: CanvasRenderingContext2D): void {\n    context.beginPath()\n    context.strokeStyle = this.color\n    context.fillStyle = this.color\n    context.moveTo(this.start.x, this.start.y)\n    context.lineTo(this.start.x, this.end.y)\n    context.lineTo(this.end.x, this.start.y)\n    context.closePath()\n    if (this.fill) {\n      context.fill()\n    } else {\n      context.stroke()\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/geometry/Triangle.ts","import Shape, { Color } from '../interfaces/Shape'\nimport Point from '../../lib/vector/Point'\n\n/**\n * Circle shape to be drawn on a canvas.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Circle implements Shape {\n  start: Point\n  end: Point\n  color: Color\n  fill: boolean\n\n  /**\n   * Default constructor.\n   *\n   * @param {Point} start Starting point of this shape\n   * @param {Point} end Ending point of this shape\n   * @param {Color} color The color of this shape\n   * @param {boolean} fill Flag determining whether this shape should be filled\n   */\n  constructor (start: Point, end: Point, color: Color, fill: boolean) {\n    this.start = start\n    this.end = end\n    this.color = color\n    this.fill = fill\n  }\n\n  /**\n   * Draws the circle on a canvas.\n   *\n   * @param {CanvasRenderingContext2D} context Canvas rendering context\n   */\n  render (context: CanvasRenderingContext2D): void {\n    const radius = Math.abs(this.end.x - this.start.x)\n    if (radius !== 0) {\n      context.beginPath()\n      context.strokeStyle = this.color\n      context.arc(this.start.x, this.start.y, radius, 0, Math.PI * 2, true)\n      if (this.fill) {\n        context.fillStyle = this.color\n        context.fill()\n      } else {\n        context.stroke()\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/geometry/Circle.ts","import Shape, { Color } from '../interfaces/Shape'\nimport Point from '../../lib/vector/Point'\n\n/**\n * Smiley Shape to draw on the canvas element.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Smiley implements Shape {\n  start: Point\n  end: Point\n  color: Color\n  fill: boolean\n\n  /**\n   * Default constructor.\n   *\n   * @param {Point} start Starting point of this shape\n   * @param {Point} end Ending point of this shape\n   * @param {Color} color The color of this shape\n   * @param {boolean} fill Flag determining whether this shape should be filled\n   */\n  constructor (start: Point, end: Point, color: Color, fill: boolean) {\n    this.start = start\n    this.end = end\n    this.color = color\n    this.fill = fill\n  }\n\n  /**\n   * Draw the Smiley onto the canvas.\n   *\n   * @param {CanvasRenderingContext2D} context Canvas rendering context\n   */\n  render (context: CanvasRenderingContext2D): void {\n    const radius = Math.abs(this.end.x - this.start.x)\n    context.beginPath()\n    context.strokeStyle = this.color\n    context.arc(this.start.x, this.start.y, radius, 0, Math.PI * 2, true) // Outer circle\n    context.moveTo(this.start.x + (radius * 0.7), this.start.y)\n    context.arc(this.start.x, this.start.y, radius * 0.7, 0, Math.PI, false)  // Mouth (clockwise)\n    context.moveTo(this.start.x - (radius * 0.3) + radius * 0.1, this.start.y - (radius * 0.2))\n    context.arc(this.start.x - (radius * 0.3), this.start.y - (radius * 0.2), radius * 0.1, 0, Math.PI * 2, false)  // Left eye\n    context.moveTo(this.start.x + (radius * 0.3) + radius * 0.1, this.start.y - (radius * 0.2))\n    context.arc(this.start.x + (radius * 0.3), this.start.y - (radius * 0.2), radius * 0.1, 0, Math.PI * 2, true)  // Right eye\n    context.stroke()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/geometry/Smiley.ts","import Point from '../../lib/vector/Point'\nimport Shape, { Color } from '../interfaces/Shape'\n\n/**\n * Line shape to be drawn on a canvas element.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Line implements Shape {\n  start: Point\n  end: Point\n  color: Color\n  fill: boolean\n\n  /**\n   * Default constructor.\n   *\n   * @param {Point} start Tool start location\n   * @param {Point} end Tool release location\n   * @param {Color} color Stroke color\n   * @param {boolean} fill Flag determining whether the shape should be filled\n   */\n  constructor (start: Point, end: Point, color: Color, fill: boolean) {\n    this.start = start\n    this.end = end\n    this.color = color\n    this.fill = fill\n  }\n\n  /**\n   * Draw this line on the canvas.\n   *\n   * @param {CanvasRenderingContext2D} context drawing context\n   */\n  render (context: CanvasRenderingContext2D): void {\n    context.beginPath()\n    context.strokeStyle = this.color\n    context.moveTo(this.start.x, this.start.y)\n    context.lineTo(this.end.x, this.end.y)\n    context.stroke()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/geometry/Line.ts","import { ShapeType } from '../factory/ShapeFactory'\nimport Shape, { Color } from '../interfaces/Shape'\n\n/**\n * Default application settings configuration.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  activeColor\n  activeTool: ShapeType\n  menuHeight: number\n  history: Shape[]\n  fill: boolean\n\n  /**\n   * Default constructor.\n   *\n   * @param {number} menuHeight Height of the top menu to calculate the drawing offset\n   * @param {Color} activeColor Currently used color for drawing\n   * @param {ShapeType} activeTool Currently active shape\n   */\n  constructor (menuHeight: number, activeColor = Color.BLACK, activeTool = ShapeType.LINE) {\n    this.activeColor = activeColor\n    this.menuHeight = menuHeight\n    this.activeTool = activeTool\n    this.history = []\n    this.fill = false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/config/Settings.ts","import Point from '../../lib/vector/Point'\nimport Settings from '../config/Settings'\nimport Tool from '../interfaces/Tool'\nimport Shape from '../interfaces/Shape'\nimport ShapeFactory from '../factory/ShapeFactory'\n\n/**\n * Tool to draw history on the canvas.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class ShapeTool implements Tool {\n  start: Point\n  end: Point\n  history: Shape[]\n  tempShape: Shape\n  settings: Settings\n  down: boolean\n\n  /**\n   * Default constructor.\n   *\n   * @param {Settings} settings Application settings\n   */\n  constructor (settings: Settings) {\n    this.start = new Point(0, 0)\n    this.end = new Point(0, 0)\n    this.history = settings.history\n    this.settings = settings\n    this.tempShape = ShapeFactory.create(this.settings.activeTool, this.start, this.end, this.settings.activeColor, this.settings.fill)\n    this.down = false\n  }\n\n  /**\n   * Mouse down event handler.\n   * Starts the temporary drawing of a shape.\n   *\n   * @param event Mouse click event\n   */\n  click (event): void {\n    this.down = true\n    this.start.set(event.clientX, event.clientY - this.settings.menuHeight)\n  }\n\n  /**\n   * Mouse drag event while holding down the mouse.\n   * Used for drawing the temporary history.\n   *\n   * @param event Mouse move event\n   */\n  move (event): void {\n    if (!this.down) return\n    this.tempShape = ShapeFactory.create(this.settings.activeTool, this.start, this.end, this.settings.activeColor, this.settings.fill)\n    this.tempShape.end.set(event.clientX, event.clientY - this.settings.menuHeight)\n  }\n\n  /**\n   * Event handler for when the mouse is released.\n   * Adds the temporary shape to the list of drawn history.\n   *\n   * @param event Mouse release event\n   */\n  release (event): void {\n    this.end.set(event.clientX, event.clientY - this.settings.menuHeight)\n    this.history.push(ShapeFactory.create(this.settings.activeTool, this.start.clone(), this.end.clone(), this.settings.activeColor, this.settings.fill))\n    this.down = false\n  }\n\n  /**\n   * Draw all shapes on the canvas.\n   * @param context Canvas rendering context\n   */\n  renderAll (context): void {\n    this.history.forEach(line => line.render(context))\n  }\n\n  /**\n   * Undo the drawing of the last shape by removing the last shape from the history and redrawing the canvas.\n   *\n   * @param {CanvasRenderingContext2D} context Canvas rendering context\n   * @param {number} width Canvas width used to clear the whole canvas\n   * @param {number} height Canvas height used to clear the whole canvas\n   */\n  undo (context: CanvasRenderingContext2D, width: number, height: number): void {\n    if (this.history.length > 0) {\n      context.clearRect(0, 0, width, height)\n      this.tempShape.start.set(0, 0)\n      this.tempShape.end.set(0, 0)\n      this.history.pop()\n      this.renderAll(context)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/draw/tools/ShapeTool.ts"],"sourceRoot":""}