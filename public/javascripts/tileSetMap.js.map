{"version":3,"sources":["webpack:///webpack/bootstrap 73076fdd0a47ce4f39d5","webpack:///./src/game/interfaces/CollideAble.ts","webpack:///./src/client/InputManager.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/client/Settings.ts","webpack:///./src/graphics/2D/SpriteSheet.ts","webpack:///./src/audio/Sound.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/lib/tileset/test.ts","webpack:///./src/game/Rpg.ts","webpack:///./src/lib/entity/Entity.ts","webpack:///./src/game/entities/Area.ts","webpack:///./src/graphics/2D/Camera.ts","webpack:///./src/lib/geometry/Rectangle.ts","webpack:///./src/lib/tileset/TileSetMap.ts"],"names":[],"mappings":"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,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBACrgBACvgBACrgBAC1O,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBACxgBACvgBACxgBACxgBACxgBACxgBACxgBACxO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBACxgBACxgBACxO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxaAEzO;YAED,IAAI,QAAQ,GAAG;gBACbgBACjgBACngBACngBAChgBACpgBAC1L,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAChgBACzgBACjggBACngBACxgBACpgBAClgBAClgBACrgBAChgBACrgBACvgBACrgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxgBACxK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EA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","file":"tileSetMap.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73076fdd0a47ce4f39d5","export enum EntityType {\r\n  PLAYER = 'ship',\r\n  ENEMY = 'enemy',\r\n  ENEMY_BULLET = 'bulletEnemy',\r\n  PLAYER_BULLET = 'bullet',\r\n  BACKGROUND = 'background',\r\n  MAP = 'map',\r\n  GAME_OVER = 'gameOver',\r\n  LASER = 'laser',\r\n  MAIN_THEME = 'shockWave',\r\n  EXPLOSION_I = 'explosion1',\r\n  EXPLOSION_II = 'explosion2',\r\n  BOX = 'box',\r\n  ARENA = 'arena'\r\n}\r\n\r\n/**\r\n * Interface for collide able objects.\r\n */\r\nexport default interface CollideAble {\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/interfaces/CollideAble.ts","import Observable from '../lib/observer/Observable'\r\nimport Settings from './Settings'\r\n\r\nexport enum Actions {\r\n  UP = 'UP',\r\n  DOWN = 'DOWN',\r\n  LEFT = 'LEFT',\r\n  RIGHT = 'RIGHT',\r\n  SHOOT = 'SHOOT',\r\n  RESTART = 'RESTART',\r\n  ROTATE_LEFT = 'R-LEFT',\r\n  ROTATE_RIGHT = 'R-RIGHT'\r\n}\r\n\r\n/**\r\n * Input manager class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class InputManager extends Observable {\r\n  inputMap\r\n  touches\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor (settings: Settings) {\r\n    super()\r\n    this.inputMap = settings.keyBoard\r\n    this.init()\r\n    this.initializeTouchHandler()\r\n    this.touches = {\r\n      start: [],\r\n      move: []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register pressed keys and notify observers.\r\n   */\r\n  init (): void {\r\n    window.addEventListener('keydown', event => {\r\n      let key = event.key !== ' ' ? event.key : 'space'\r\n      this.state[this.inputMap[key]] = true\r\n      this.notify()\r\n    })\r\n    window.addEventListener('keyup', event => {\r\n      let key = event.key !== ' ' ? event.key : 'space'\r\n      this.state[this.inputMap[key]] = false\r\n      this.notify()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Maps swipe directions to key press booleans.\r\n   * Allows touch controls on mobile.\r\n   */\r\n  initializeTouchHandler (): void {\r\n    // Register the event listeners\r\n    let button = document.getElementById('move')\r\n    let el = button ? button : window\r\n    el.addEventListener('touchstart', handleTouchStart, false)\r\n    el.addEventListener('touchmove', handleTouchMove, false)\r\n    el.addEventListener('touchend', handleTouchEnd, false)\r\n    el.addEventListener('contextmenu', event => {\r\n      event.preventDefault()\r\n      return false\r\n    })\r\n\r\n    let start = []\r\n    let move = []\r\n    let touchstartX = 0\r\n    let touchstartY = 0\r\n    let toucheMoveX = 0\r\n    let touchMoveY = 0\r\n    let thisInstance = this\r\n\r\n    function handleTouchStart (evt): void {\r\n      evt.preventDefault()\r\n      start = evt.touches\r\n      touchstartX = evt.touches[0].pageX\r\n      touchstartY = evt.touches[0].pageY\r\n    }\r\n\r\n    function handleTouchMove (evt): void {\r\n      thisInstance.reset()\r\n      evt.preventDefault()\r\n      move = evt.changedTouches\r\n      toucheMoveX = evt.touches[0].pageX\r\n      touchMoveY = evt.touches[0].pageY\r\n      for (let i = 0; i < evt.touches.length; i++) {\r\n        // Positive values equals left. Negative values equals right\r\n        if (move[i].pageX < start[i].pageX) {\r\n          thisInstance.state[thisInstance.inputMap['a']] = true\r\n        }\r\n        if (move[i].pageX > start[i].pageX) {\r\n          thisInstance.state[thisInstance.inputMap['d']] = true\r\n        }\r\n        if (move[i].pageY < start[i].pageY) {\r\n          thisInstance.state[thisInstance.inputMap['w']] = true\r\n        }\r\n        if (move[i].pageY > start[i].pageY) {\r\n          thisInstance.state[thisInstance.inputMap['s']] = true\r\n        }\r\n        thisInstance.notify()\r\n      }\r\n    }\r\n\r\n    function handleTouchEnd (evt): void {\r\n      evt.preventDefault()\r\n      thisInstance.reset()\r\n    }\r\n  }\r\n\r\n  shoot (): void {\r\n    this.state[this.inputMap['space']] = true\r\n  }\r\n\r\n  cancelShoot (): void {\r\n    this.state[this.inputMap['space']] = false\r\n  }\r\n\r\n  reset (): void {\r\n    this.state[this.inputMap['w']] = false\r\n    this.state[this.inputMap['a']] = false\r\n    this.state[this.inputMap['s']] = false\r\n    this.state[this.inputMap['d']] = false\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/InputManager.ts","/**\r\n * 2D vector implementation.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Vector2 {\r\n  private _x: number\r\n  private _y: number\r\n\r\n  /**\r\n   * Default constructor. Sets x and y values.\r\n   *\r\n   * @param {number} x initial x value\r\n   * @param {number} y initial y value\r\n   */\r\n  constructor (x: number, y: number) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Static addVector method to combine two vectors into a new one.\r\n   *\r\n   * @param {Vector2} v1 first vector\r\n   * @param {Vector2} v2 second vector\r\n   * @returns {Vector2} combined vector\r\n   */\r\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\r\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\r\n  }\r\n\r\n  /**\r\n   * Subtract two vector from each other and put the result into a new vector.\r\n   *\r\n   * @param {Vector2} v1 first vector\r\n   * @param {Vector2} v2 second vector\r\n   * @returns {Vector2} resulting vector\r\n   */\r\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\r\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\r\n  }\r\n\r\n  /**\r\n   * Multiplies a vector with a scalar and returns the resulting vector.\r\n   *\r\n   * @param {Vector2} vector initial vector\r\n   * @param {number} scalar scalar to scale the vector\r\n   * @returns {Vector2} the resulting vector\r\n   */\r\n  static multiply (vector: Vector2, scalar: number): Vector2 {\r\n    return new Vector2(vector.x * scalar, vector.y * scalar)\r\n  }\r\n\r\n  /**\r\n   * Divides a vector by a scalar and returns the result in a new vector.\r\n   * Throws error if trying to divide by zero.\r\n   *\r\n   * @param {Vector2} vector vector to divide\r\n   * @param {number} scalar scalar used to divide vector\r\n   * @returns {Vector2} resulting vector\r\n   */\r\n  static divide (vector: Vector2, scalar: number): Vector2 {\r\n    if (scalar === 0) {\r\n      throw new Error('cannot divide vector by scalar with value \"0\"')\r\n    }\r\n    return new Vector2(vector.x / scalar, vector.y / scalar)\r\n  }\r\n\r\n  /**\r\n   * Set x value of this vector.\r\n   *\r\n   * @param {number} x new x value\r\n   */\r\n  set x (x: number) {\r\n    this._x = x\r\n  }\r\n\r\n  /**\r\n   * Set y value of this vector.\r\n   *\r\n   * @param {number} y new y value\r\n   */\r\n  set y (y: number) {\r\n    this._y = y\r\n  }\r\n\r\n  /**\r\n   * Getter for x value\r\n   * @returns {number} x value\r\n   */\r\n  get x (): number {\r\n    return this._x\r\n  }\r\n\r\n  /**\r\n   * Getter for y value\r\n   * @returns {number} y value\r\n   */\r\n  get y (): number {\r\n    return this._y\r\n  }\r\n\r\n  /**\r\n   * Set vector with both x and y values.\r\n   *\r\n   * @param {number} x new x value\r\n   * @param {number} y new y value\r\n   */\r\n  set (x: number, y: number): void {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Set vector location to another vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  setVector (vector: Vector2): void {\r\n    this.x = vector.x\r\n    this.y = vector.y\r\n  }\r\n\r\n  /**\r\n   * Add x and y to this vector.\r\n   *\r\n   * @param {number} x x value\r\n   * @param {number} y y value\r\n   */\r\n  add (x: number, y: number): void {\r\n    this.x += x\r\n    this.y += y\r\n  }\r\n\r\n  /**\r\n   * Add vector to this vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  addVector (vector: Vector2): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n  }\r\n\r\n  /**\r\n   * Subtraxt x and y from this vector.\r\n   *\r\n   * @param {number} x x value\r\n   * @param {number} y y value\r\n   */\r\n  subtract (x: number, y: number): void {\r\n    this.x -= x\r\n    this.y -= y\r\n  }\r\n\r\n  /**\r\n   * Subtract a vector from this vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  subtractVector (vector: Vector2): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n  }\r\n\r\n  /**\r\n   * Multiply this vector by scalar.\r\n   *\r\n   * @param scalar scalar to multiply the vector\r\n   */\r\n  multiply (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n  }\r\n\r\n  /**\r\n   * Divides this vector by a scalar.\r\n   * Throws error when trying to divide by zero.\r\n   *\r\n   * @param {number} scalar scalar used to divide this vector\r\n   */\r\n  divide (scalar: number): void {\r\n    if (scalar === 0) {\r\n      throw new Error('cannot divide vector by \"0\"')\r\n    }\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n  }\r\n\r\n  /**\r\n   * Get the magnitude / elementsCount of this vector.\r\n   *\r\n   * @returns {number} magnitude / elementsCount of this vector\r\n   */\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  }\r\n\r\n  /**\r\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\r\n   *\r\n   * @returns {Vector2}\r\n   */\r\n  negative (): Vector2 {\r\n    return new Vector2(-this.x, -this.y)\r\n  }\r\n\r\n  /**\r\n   * Normalize the vector.\r\n   */\r\n  normalize (): void {\r\n    let magnitude = this.mag()\r\n    if (magnitude !== 0) {\r\n      this.divide(magnitude)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Limit the vector to a maximum elementsCount.\r\n   *\r\n   * @param max maximum elementsCount\r\n   */\r\n  limit (max): void {\r\n    if (Math.floor(this.mag()) > max) {\r\n      this.normalize()\r\n      this.multiply(max)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the distance of this vector to another vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   * @returns {number} calculated distance\r\n   */\r\n  distanceTo (vector: Vector2): number {\r\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\r\n  }\r\n\r\n  /**\r\n   * Get the dot product between this vector and another vector.\r\n   *\r\n   * @param {Vector2} vector\r\n   * @returns {number} the dot product of this vector and the one passed as param.\r\n   */\r\n  dot (vector: Vector2): number {\r\n    return this.x * vector.x + this.y * vector.y\r\n  }\r\n\r\n  floor (): void {\r\n    this.x = Math.floor(this.x)\r\n    this.x = Math.floor(this.x)\r\n  }\r\n\r\n  /**\r\n   * Create a clone of this vector.\r\n   *\r\n   * @returns {Vector2} cloned vector\r\n   */\r\n  clone (): Vector2 {\r\n    return new Vector2(this.x, this.y)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Vector2.ts","import { EntityType } from '../game/interfaces/CollideAble'\r\nimport SpriteSheet from '../graphics/2D/SpriteSheet'\r\nimport Sound from '../audio/Sound'\r\nimport Ajax from '../lib/ajax/Ajax'\r\n\r\nexport enum AssetType {\r\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_LOOP = 'LOOP'\r\n}\r\n\r\n/**\r\n * Asset manager Class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class AssetManager {\r\n  audioContext\r\n  cache\r\n  queue\r\n  downloadCount: number\r\n  masterGain: GainNode\r\n  effectsGain: GainNode\r\n  ambientGain: GainNode\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor () {\r\n    this.cache = {\r\n      sprites: {},\r\n      spriteSheets: {},\r\n      audio: {}\r\n    }\r\n    this.downloadCount = 0\r\n    this.queue = []\r\n    this.initAudioContext()\r\n  }\r\n\r\n  initAudioContext (): void {\r\n    try {\r\n      // Fix for browsers using prefixes\r\n      window.AudioContext = window.AudioContext || webkitAudioContext\r\n      this.audioContext = new AudioContext()\r\n      this.masterGain = this.audioContext.createGain()\r\n      this.effectsGain = this.audioContext.createGain()\r\n      this.ambientGain = this.audioContext.createGain()\r\n      this.masterGain.gain.value = 1\r\n      this.masterGain.connect(this.audioContext.destination)\r\n      this.effectsGain.connect(this.masterGain)\r\n      this.ambientGain.connect(this.masterGain)\r\n      this.ambientGain.gain.value = 1\r\n      this.effectsGain.gain.value = 1\r\n    } catch (e) {\r\n      console.log('Web Audio API is not supported in this browser')\r\n    }\r\n  }\r\n\r\n  adjustMasterVolume (value: number): void {\r\n    this.masterGain.gain.value = value\r\n  }\r\n\r\n  adjustAmbientVolume (value: number): void {\r\n    this.ambientGain.gain.value = value\r\n  }\r\n\r\n  adjustEffectsVolume (value: number): void {\r\n    this.effectsGain.gain.value = value\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  done (): boolean {\r\n    return this.downloadCount === this.queue.length\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {EntityType} id\r\n   * @param {string} path\r\n   * @param {AssetType} type\r\n   * @param {{}} opts\r\n   */\r\n  queueDownload (id: EntityType, path: string, type: AssetType, opts = null): void {\r\n    this.queue.push({\r\n      id: id,\r\n      path: path,\r\n      type: type,\r\n      opts: opts\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Build an AJAX Request to loadAudioFromUrl audio file into the buffer cache.\r\n   *\r\n   * @param item object with name of file and path to file\r\n   * @param callback function to execute on done\r\n   */\r\n  loadAudioFromUrl (item, callback): void {\r\n    Ajax.create({\r\n      method: 'GET',\r\n      url: item.path,\r\n      responseType: 'arraybuffer'\r\n    }, response => {\r\n      this.decodeAudio(response, item.id, callback)\r\n    })\r\n  }\r\n\r\n  decodeAudio (data, id, callback): void {\r\n    this.audioContext.decodeAudioData(data).then(\r\n      buffer => {\r\n        this.cache.audio[id] = buffer\r\n        this.downloadCount += 1\r\n        if (this.done()) {\r\n          callback()\r\n        }\r\n      },\r\n      error => { console.log('Error with decoding audio data' + error) }\r\n    )\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param callback\r\n   */\r\n  loadSprite (item, callback): void {\r\n    let sprite = new Image()\r\n    sprite.addEventListener('load', () => {\r\n      this.downloadCount++\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    })\r\n    sprite.src = item.path\r\n    this.cache.sprites[item.id] = sprite\r\n  }\r\n\r\n  /**\r\n   * Load sprites sheet.\r\n   *\r\n   * @param item sprite sheet info\r\n   * @param callback called upon downloading all\r\n   */\r\n  loadSpriteSheet (item, callback): void {\r\n    let spriteSheet = new Image()\r\n    spriteSheet.addEventListener('load', () => {\r\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\r\n      this.downloadCount += 1\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    })\r\n    spriteSheet.src = item.path\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param callback\r\n   */\r\n  downloadAll (callback): void {\r\n    this.queue.forEach(item => {\r\n      if (item.type === AssetType.AUDIO) {\r\n        this.loadAudioFromUrl(item, callback)\r\n      } else if (item.type === AssetType.SPRITE) {\r\n        this.loadSprite(item, callback)\r\n      } else if (item.type === AssetType.SPRITE_SHEET) {\r\n        this.loadSpriteSheet(item, callback)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Create an audio buffer source node from cached buffer.\r\n   * Send it to the destination of the audio context and play it.\r\n   *\r\n   * @param {EntityType} id file id\r\n   * @param {AssetType} type\r\n   */\r\n  getSound (id: EntityType, type: AssetType): Sound {\r\n    let gain\r\n    if (type === AssetType.AUDIO) {\r\n      gain = this.effectsGain\r\n    } else {\r\n      gain = this.ambientGain\r\n    }\r\n    return new Sound(this.audioContext, gain, this.cache.audio[id])\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} id\r\n   * @returns {EntityType}\r\n   */\r\n  getSprite (id: EntityType): any {\r\n    return this.cache.sprites[id]\r\n  }\r\n\r\n  /**\r\n   * Get sprite sheet by name.\r\n   *\r\n   * @param {EntityType} id\r\n   * @returns {SpriteSheet}\r\n   */\r\n  getSpriteSheet (id: EntityType): SpriteSheet {\r\n    return this.cache.spriteSheets[id]\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/AssetManager.ts","import Vector2 from '../math/Vector2'\r\nimport CollideAble, { EntityType } from '../../game/interfaces/CollideAble'\r\n\r\nexport default class HitBox implements CollideAble {\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n  position: Vector2\r\n  width: number\r\n  height: number\r\n\r\n  /**\r\n   * Initializes position and dimension.\r\n   * @param {number} x position x\r\n   * @param {number} y position y\r\n   * @param {number} width dimension width\r\n   * @param {number} height dimension height\r\n   */\r\n  constructor (x, y, width, height) {\r\n    this.position = new Vector2(x, y)\r\n    this.width = width\r\n    this.height = height\r\n    this.colliding = false\r\n    this.collidesWith = []\r\n    this.type = EntityType.BOX\r\n    this.collidesWith.push(EntityType.PLAYER)\r\n  }\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/HitBox.ts","import Observer from './Observer'\r\n\r\n/**\r\n * Observable class to be extended by a class that should be observed.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Observable {\r\n  private _observers: Observer[]\r\n  private _state: any\r\n\r\n  constructor () {\r\n    this._observers = []\r\n    this._state = {}\r\n  }\r\n\r\n  /**\r\n   * Register an observer on this observable.\r\n   *\r\n   * @param {Observer} observer Object implementing the Observer interface\r\n   */\r\n  register (observer: Observer): void {\r\n    this._observers.push(observer)\r\n  }\r\n\r\n  /**\r\n   * Remove an observer from this observables observers list.\r\n   *\r\n   * @param {Observer} observer Object implementing the Observer interface\r\n   */\r\n  unRegister (observer: Observer): void {\r\n    this._observers = this._observers.filter(obs => {\r\n      return obs !== observer\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Notify all observers.\r\n   */\r\n  notify (): void {\r\n    this._observers.forEach(observer => {\r\n      observer.update(this._state)\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Observer[]}\r\n   */\r\n  get observers (): Observer[] {\r\n    return this._observers\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Observer[]} observers\r\n   */\r\n  set observers (observers: Observer[]) {\r\n    this._observers = observers\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {any}\r\n   */\r\n  get state (): any {\r\n    return this._state\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {any} state\r\n   */\r\n  set state (state: any) {\r\n    this._state = state\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import { Actions } from './InputManager'\r\n\r\n/**\r\n * Settings class for game applications.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Settings {\r\n  keyBoard\r\n  player\r\n  audio\r\n\r\n  constructor () {\r\n    this.keyBoard = {\r\n      'w': Actions.UP,\r\n      's': Actions.DOWN,\r\n      'a': Actions.LEFT,\r\n      'd': Actions.RIGHT,\r\n      'space': Actions.SHOOT,\r\n      'r': Actions.RESTART,\r\n      'q': Actions.ROTATE_LEFT,\r\n      'e': Actions.ROTATE_RIGHT\r\n    }\r\n    this.player = {\r\n      maxVelocity: 15,\r\n      fireDelay: 15,\r\n      friction: 0.7,\r\n      acceleration: 3\r\n    }\r\n    this.audio = {\r\n      master: 1,\r\n      ambient: 1,\r\n      effects: 1\r\n    }\r\n  }\r\n\r\n  findKey (value): string {\r\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\r\n  }\r\n\r\n  setKey (newKey, action: Actions): void {\r\n    let oldKey = this.findKey(action)\r\n    if (newKey !== oldKey) {\r\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\r\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\r\n      delete this.keyBoard[oldKey]\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Settings.ts","/**\r\n * Sprite sheet definition.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class SpriteSheet {\r\n  private _image\r\n  private _frameWidth\r\n  private _frameHeight\r\n  private _framesPerRow\r\n\r\n  /**\r\n   * Constructor. Sets frame dimensions and calculates number of frames.\r\n   *\r\n   * @param image\r\n   * @param frameWidth\r\n   * @param frameHeight\r\n   */\r\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\r\n    this._image = image\r\n    this._frameWidth = frameWidth\r\n    this._frameHeight = frameHeight\r\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Image}\r\n   */\r\n  get image (): HTMLImageElement {\r\n    return this._image\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Image} image\r\n   */\r\n  set image (image: HTMLImageElement) {\r\n    if (!(image instanceof Image)) {\r\n      throw new Error('Param tileSetImage must be of type Image!')\r\n    }\r\n    this._image = image\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get frameWidth (): number {\r\n    return this._frameWidth\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} frameWidth\r\n   */\r\n  set frameWidth (frameWidth: number) {\r\n    this._frameWidth = frameWidth\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get frameHeight (): number {\r\n    return this._frameHeight\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} frameHeight\r\n   */\r\n  set frameHeight (frameHeight: number) {\r\n    this._frameHeight = frameHeight\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get framesPerRow (): number {\r\n    return this._framesPerRow\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} framesPerRow\r\n   */\r\n  set framesPerRow (framesPerRow: number) {\r\n    this._framesPerRow = framesPerRow\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/2D/SpriteSheet.ts","/**\r\n * Sound class used to play a sound from a file.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Sound {\r\n  audioContext: AudioContext\r\n  source: AudioBufferSourceNode\r\n  gainNode: GainNode\r\n  masterGain: GainNode\r\n  buffer\r\n  playing: boolean\r\n\r\n  /**\r\n   *\r\n   * @param audioContext\r\n   * @param {GainNode} masterGain\r\n   * @param buffer\r\n   */\r\n  constructor (audioContext, masterGain: GainNode, buffer) {\r\n    this.audioContext = audioContext\r\n    this.masterGain = masterGain\r\n    this.buffer = buffer\r\n    this.gainNode = this.audioContext.createGain()\r\n    this.gainNode.gain.value = 0.2\r\n    this.gainNode.connect(this.masterGain)\r\n    this.playing = false\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {boolean} loop\r\n   */\r\n  play (loop = false): void {\r\n    this.source = this.audioContext.createBufferSource()\r\n    this.source.buffer = this.buffer\r\n    this.source.loop = loop\r\n    this.source.connect(this.gainNode)\r\n    this.source.start(0)\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  stop (): void {\r\n    this.source.stop(0)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio/Sound.ts","export default class Ajax {\r\n  private static defaults = {\r\n    url: '',\r\n    method: 'GET',\r\n    contentType: 'text/html',\r\n    async: true,\r\n    data: null\r\n  }\r\n\r\n  /**\r\n   * Create and send an XML-HTTP request.\r\n   * Requires an options object.\r\n   *\r\n   * @param opts Possible option properties:\r\n   * url = url to send the request to.\r\n   * method = request method. GET, POST, PUT, DELETE.\r\n   * contentType = specify the content type of the request.\r\n   * async = boolean flag for async calls. Defaults to true.\r\n   * data = request body.\r\n   * @param callback success callback function\r\n   */\r\n  public static create (opts, callback): void {\r\n    let xHttp = new XMLHttpRequest()\r\n    xHttp.addEventListener('load', () => {\r\n      callback(xHttp.response)\r\n    })\r\n    xHttp.open(\r\n      opts.method ? opts.method : Ajax.defaults.method,\r\n      opts.url ? opts.url : Ajax.defaults.url,\r\n      opts.async ? opts.async : Ajax.defaults.async\r\n    )\r\n    if (opts.hasOwnProperty('contentType')) {\r\n      xHttp.setRequestHeader(\r\n        'Content-Type',\r\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\r\n      )\r\n    }\r\n    if (opts.hasOwnProperty('responseType')) {\r\n      xHttp.responseType = opts.responseType\r\n    }\r\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\r\n      opts.data = JSON.stringify(opts.data)\r\n    }\r\n    xHttp.send(opts.data ? opts.data : null)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ajax/Ajax.ts","import HitBox from './HitBox'\r\nimport Drawable from '../../game/interfaces/Drawable'\r\n\r\n/**\r\n * QuadTree class used to optimize collision checking.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class QuadTree {\r\n  level: number\r\n  maxObjects: number\r\n  maxLevels: number\r\n  hitBox: HitBox\r\n  objects: Drawable[]\r\n  nodes: QuadTree[]\r\n\r\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param {HitBox} hitBox\r\n   * @param {number} level\r\n   */\r\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\r\n    this.level = level\r\n    this.maxObjects = 10\r\n    this.maxLevels = 5\r\n    this.hitBox = hitBox\r\n    this.objects = []\r\n    this.nodes = []\r\n  }\r\n\r\n  /**\r\n   * Clears the QuadTree and its sub nodes from all game objects.\r\n   */\r\n  clear (): void {\r\n    this.objects = []\r\n    this.nodes.forEach(node => node.clear())\r\n    this.nodes = []\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param returnedObjects\r\n   * @returns {any}\r\n   */\r\n  getAllObjects (returnedObjects) {\r\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\r\n    this.objects.forEach(object => returnedObjects.push(object))\r\n    return returnedObjects\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param returnedObjects\r\n   * @param object\r\n   * @returns {any}\r\n   */\r\n  findObjects (returnedObjects, object) {\r\n    if (typeof object === 'undefined') {\r\n      console.log('UNDEFINED OBJECT')\r\n      return\r\n    }\r\n    let index = this.getIndex(object)\r\n    if (index !== -1 && this.nodes.length) {\r\n      this.nodes[index].findObjects(returnedObjects, object)\r\n    }\r\n    this.objects.forEach(obj => returnedObjects.push(obj))\r\n    return returnedObjects\r\n  }\r\n\r\n  /**\r\n   * Insert an object into the QuadTree.\r\n   *\r\n   * @param object\r\n   */\r\n  insert (object): void {\r\n    if (typeof object === 'undefined') {\r\n      return\r\n    }\r\n    if (object instanceof Array) {\r\n      object.forEach(element => this.insert(element))\r\n      return\r\n    }\r\n    if (this.nodes.length > 0) {\r\n      let index = this.getIndex(object)\r\n      // Only addVector the object to a sub node if it can fit completely within one\r\n      if (index !== -1) {\r\n        this.nodes[index].insert(object)\r\n        return\r\n      }\r\n    }\r\n    this.objects.push(object)\r\n\r\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\r\n      if (typeof this.nodes[0] === 'undefined') {\r\n        this.split()\r\n      }\r\n      let i = 0\r\n      while (i < this.objects.length) {\r\n        let index = this.getIndex(this.objects[i])\r\n        if (index !== -1) {\r\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\r\n        } else {\r\n          i++\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the index of an object from the QuadTree.\r\n   *\r\n   * @param object\r\n   * @returns {number}\r\n   */\r\n  getIndex (object): number {\r\n    let index = -1\r\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\r\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\r\n    // Object can fit completely within the top quadrant\r\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\r\n    // Object can fit completely within the bottom quadrant\r\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\r\n    // Object can fit completely within the left quadrants\r\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\r\n      if (topQuadrant) {\r\n        index = 1\r\n      } else if (bottomQuadrant) {\r\n        index = 2\r\n      }\r\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\r\n      if (topQuadrant) {\r\n        index = 0\r\n      } else if (bottomQuadrant) {\r\n        index = 3\r\n      }\r\n    }\r\n    return index\r\n  }\r\n\r\n  /**\r\n   * Split the tree on demand.\r\n   */\r\n  split (): void {\r\n    let subWidth = (this.hitBox.width / 2) | 0\r\n    let subHeight = (this.hitBox.height / 2) | 0\r\n    this.nodes[0] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\r\n    this.nodes[1] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\r\n    this.nodes[2] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\r\n    this.nodes[3] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/QuadTree.ts","import QuadTree from './QuadTree'\r\n\r\nexport default class CollisionManager {\r\n  quadTree: QuadTree\r\n\r\n  constructor (quadTree) {\r\n    this.quadTree = quadTree\r\n  }\r\n\r\n  detectCollision (): void {\r\n    let objects = []\r\n    this.quadTree.getAllObjects(objects)\r\n\r\n    for (let i = 0; i < objects.length; i++) {\r\n      let obj = []\r\n      this.quadTree.findObjects(obj, objects[i])\r\n\r\n      for (let j = 0; j < obj.length; j++) {\r\n        // DETECT COLLISION ALGORITHM\r\n        if (objects[i].isCollideAbleWith(obj[j]) &&\r\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\r\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\r\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\r\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\r\n          objects[i].colliding = true\r\n          obj[j].colliding = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/CollisionManager.ts","import Rpg from '../../game/Rpg'\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => new Rpg())\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/tileset/test.ts","import QuadTree from '../lib/collision/QuadTree'\r\nimport Entity from '../lib/entity/Entity'\r\nimport CollisionManager from '../lib/collision/CollisionManager'\r\nimport Area from './entities/Area'\r\nimport Camera from '../graphics/2D/Camera'\r\nimport InputManager from '../client/InputManager'\r\nimport Settings from '../client/Settings'\r\nimport AssetManager, { AssetType } from '../client/AssetManager'\r\nimport TileSetMap from '../lib/tileset/TileSetMap'\r\nimport { EntityType } from './interfaces/CollideAble'\r\nimport HitBox from '../lib/collision/HitBox'\r\nimport IGame from '../lib/interfaces/IGame'\r\n\r\nexport default class Rpg implements IGame {\r\n  playing: boolean\r\n  canvas: HTMLCanvasElement\r\n  context: CanvasRenderingContext2D\r\n  canvasPlayer: HTMLCanvasElement\r\n  assetManager: AssetManager\r\n  inputManager: InputManager\r\n  settings: Settings\r\n  area: Area\r\n  camera: Camera\r\n  player: Entity\r\n  quadTree: QuadTree\r\n  collisionManager: CollisionManager\r\n\r\n  constructor () {\r\n    this.canvas = document.getElementById('background') as HTMLCanvasElement\r\n    this.canvasPlayer = document.getElementById('player') as HTMLCanvasElement\r\n    this.assetManager = new AssetManager()\r\n    this.settings = new Settings()\r\n    this.inputManager = new InputManager(this.settings)\r\n    this.init()\r\n  }\r\n\r\n  init (): void {\r\n    this.assetManager.queueDownload(EntityType.MAP, 'assets/tilesets/tileset.png', AssetType.SPRITE)\r\n    this.assetManager.queueDownload(EntityType.PLAYER, 'assets/sprites/player.png', AssetType.SPRITE)\r\n    this.assetManager.queueDownload(EntityType.BACKGROUND, 'assets/audio/amb_wilderness.mp3', AssetType.AUDIO)\r\n    this.assetManager.downloadAll(() => {\r\n      let ground = [\r\n        [172, 172, 172, 79, 34, 34, 34, 34, 34, 34, 34, 34, 56, 57, 54, 55, 56, 147, 67, 67, 68, 79, 79, 171, 172, 172, 173, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [172, 172, 172, 79, 34, 34, 34, 34, 34, 34, 146, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 159, 189, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [172, 172, 172, 79, 79, 34, 34, 34, 34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 159, 189, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [188, 188, 188, 79, 79, 79, 79, 34, 34, 34, 36, 172, 172, 143, 142, 157, 79, 79, 79, 79, 79, 79, 187, 159, 189, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 34, 34, 36, 172, 159, 158, 172, 143, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 39, 51, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 36, 172, 143, 142, 172, 172, 143, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 52, 172, 172, 172, 172, 172, 172, 143, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 34, 52, 172, 172, 172, 172, 172, 172, 159, 188, 189, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 188, 158, 172, 172, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 187, 158, 159, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 159, 188, 189, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [155, 142, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 187, 188, 188, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [171, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [171, 172, 143, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 187, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [187, 188, 158, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [79, 79, 79, 188, 189, 79, 79, 79, 79, 79, 79, 155, 156, 156, 157, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 156, 156, 156, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 79, 79, 79, 79, 79, 79, 155, 172, 172, 159, 189, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 171, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 79, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79],\r\n        [34, 34, 34, 34, 34, 34, 34, 79, 79, 79, 171, 172, 172, 173, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 155, 142, 172, 172, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79]\r\n\r\n      ]\r\n\r\n      let topLayer = [\r\n        [0, 0, 32, 33, 0, 220, 0, 0, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 48, 49, 0, 236, 220, 220, 236, 0, 0, 147, 72, 73, 70, 71, 72, 73, 83, 83, 84, 85, 0, 0, 0, 0, 0, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 64, 65, 54, 0, 236, 236, 0, 0, 162, 163, 84, 89, 86, 87, 88, 89, 99, 99, 100, 101, 0, 0, 0, 0, 7, 112, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 80, 81, 70, 54, 55, 50, 0, 0, 0, 179, 100, 105, 102, 103, 104, 105, 0, 0, 0, 0, 0, 0, 16, 22, 23, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 96, 97, 86, 70, 65, 144, 193, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 102, 86, 81, 160, 161, 0, 0, 37, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 65, 174, 175, 67, 66, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 102, 97, 176, 177, 0, 0, 37, 0, 252, 0, 0, 0, 201, 202, 0, 0, 0, 0, 0, 80, 81, 190, 191, 83, 82, 70, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 48, 49, 0, 0, 53, 0, 0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 96, 97, 222, 223, 99, 98, 86, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [201, 202, 0, 0, 0, 0, 0, 64, 65, 66, 68, 69, 0, 0, 0, 0, 0, 233, 234, 0, 0, 0, 0, 0, 238, 239, 0, 0, 238, 239, 102, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [217, 218, 0, 0, 0, 0, 0, 80, 81, 82, 84, 85, 0, 0, 0, 0, 0, 249, 250, 0, 0, 0, 0, 0, 254, 255, 0, 0, 254, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [233, 234, 0, 0, 0, 0, 0, 96, 97, 98, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [249, 250, 0, 0, 201, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 239, 0, 0, 238, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 255, 0, 0, 254, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 233, 234, 196, 197, 198, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [2, 3, 4, 0, 249, 250, 228, 229, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [18, 19, 20, 8, 0, 0, 244, 245, 246, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 201, 202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 35, 40, 24, 25, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 217, 218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 40, 41, 20, 8, 9, 0, 0, 0, 0, 0, 0, 0, 16, 17, 18, 19, 20, 21, 0, 0, 0, 0, 0, 0, 0, 233, 234, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 40, 19, 24, 25, 8, 9, 0, 0, 0, 0, 0, 48, 49, 50, 51, 52, 115, 3, 4, 0, 0, 0, 0, 0, 249, 250, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 40, 41, 20, 21, 0, 0, 0, 0, 0, 64, 65, 66, 67, 52, 19, 19, 20, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n      ]\r\n      this.player = new Entity(350, 370, this.assetManager.getSprite(EntityType.PLAYER), this.canvasPlayer.getContext('2d'))\r\n      this.area = new Area(\r\n        new TileSetMap(\r\n          this.assetManager.getSprite(EntityType.MAP),\r\n          [ground, topLayer],\r\n          this.canvas.getContext('2d'),\r\n          32, ground[0].length,\r\n          ground.length,\r\n          16\r\n        )\r\n      )\r\n      this.canvas.width = window.innerWidth > this.area.map.width ? this.area.map.width : window.innerWidth\r\n      this.canvas.height = window.innerHeight > this.area.map.height ? this.area.map.height : window.innerHeight\r\n      this.canvasPlayer.width = window.innerWidth > this.area.map.width ? this.area.map.width : window.innerWidth\r\n      this.canvasPlayer.height = window.innerHeight > this.area.map.height ? this.area.map.height : window.innerHeight\r\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvas.width, this.canvas.height))\r\n      this.collisionManager = new CollisionManager(this.quadTree)\r\n      this.camera = new Camera(0, 0, this.canvasPlayer.width, this.canvasPlayer.height, this.area.map.width, this.area.map.height)\r\n\r\n      // generate a large tileSetImage texture for the room\r\n      this.area.map.generate()\r\n      this.inputManager.register(this.player)\r\n      this.camera.follow(this.player, this.canvas.width / 2, this.canvas.height / 2)\r\n      let ambient = this.assetManager.getSound(EntityType.BACKGROUND, AssetType.AUDIO_LOOP)\r\n      ambient.play(true)\r\n      this.run()\r\n    })\r\n  }\r\n\r\n  start (): void {\r\n\r\n  }\r\n\r\n  animationCallback (timeStamp: number): void {\r\n  }\r\n\r\n  stop (): void {\r\n\r\n  }\r\n\r\n  update (): void {\r\n    this.quadTree.clear()\r\n    this.quadTree.insert(this.player)\r\n    this.quadTree.insert(this.area.map.hitBoxes)\r\n    this.collisionManager.detectCollision()\r\n    this.camera.update()\r\n    this.player.move(this.area.map.width, this.area.map.height)\r\n  }\r\n\r\n  render (): void {\r\n    this.player.draw(\r\n      Math.floor(this.camera.position.x),\r\n      Math.floor(this.camera.position.y),\r\n      Math.floor(this.camera.previousPosition.x),\r\n      Math.floor(this.camera.previousPosition.y)\r\n    )\r\n    this.area.map.draw(Math.floor(this.camera.position.x), Math.floor(this.camera.position.y))\r\n  }\r\n\r\n  run (): void {\r\n    this.update()\r\n    this.render()\r\n    window.requestAnimationFrame(() => this.run())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/Rpg.ts","import Vector2 from '../math/Vector2'\r\nimport { Actions } from '../../client/InputManager'\r\nimport Observer from '../observer/Observer'\r\nimport CollideAble, { EntityType } from '../../game/interfaces/CollideAble'\r\nimport Drawable from '../../game/interfaces/Drawable'\r\n\r\nexport default class Entity implements Observer, CollideAble, Drawable {\r\n  speed: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n  position: Vector2\r\n  velocity: Vector2\r\n  sprite\r\n  context\r\n  acceleration: Vector2\r\n  state\r\n  width\r\n  height\r\n  previousPosition: Vector2\r\n\r\n  constructor (x: number, y: number, sprite, context) {\r\n    this.position = new Vector2(x, y)\r\n    this.velocity = new Vector2(1, 1)\r\n    this.sprite = sprite\r\n    this.context = context\r\n    this.acceleration = new Vector2(0, 0)\r\n    this.state = {}\r\n    this.colliding = false\r\n    this.type = EntityType.PLAYER\r\n    this.collidesWith = []\r\n    this.collidesWith.push(EntityType.BOX)\r\n    this.width = sprite.width\r\n    this.height = sprite.height\r\n    this.previousPosition = new Vector2(x, y)\r\n  }\r\n\r\n  move (worldWidth, worldHeight): void {\r\n    if (!this.colliding) {\r\n      this.previousPosition.setVector(this.position)\r\n      this.acceleration.set(0, 0)\r\n      if (this.state[Actions.LEFT]) {\r\n        this.acceleration.add(-3, 0)\r\n      }\r\n      if (this.state[Actions.RIGHT]) {\r\n        this.acceleration.add(3, 0)\r\n      }\r\n      if (this.state[Actions.UP]) {\r\n        this.acceleration.add(0, -3)\r\n      }\r\n      if (this.state[Actions.DOWN]) {\r\n        this.acceleration.add(0, 3)\r\n      }\r\n      this.velocity.multiply(0.6)\r\n      this.velocity.addVector(this.acceleration)\r\n      this.velocity.limit(15)\r\n      this.position.addVector(this.velocity)\r\n\r\n      if (this.position.x - this.width / 2 < 0) {\r\n        this.position.x = this.width / 2\r\n      }\r\n      if (this.position.y - this.height / 2 < 0) {\r\n        this.position.y = this.height / 2\r\n      }\r\n      if (this.position.x + this.width / 2 > worldWidth) {\r\n        this.position.x = worldWidth - this.width / 2\r\n      }\r\n      if (this.position.y + this.height / 2 > worldHeight) {\r\n        this.position.y = worldHeight - this.height / 2\r\n      }\r\n    } else {\r\n      this.goBack()\r\n    }\r\n  }\r\n\r\n  draw (xView: number, yView: number, prevXView: number, prevYView: number): void {\r\n    this.context.clearRect(\r\n      (Math.floor(this.previousPosition.x) - this.width / 2) - prevXView,\r\n      (Math.floor(this.previousPosition.y) - this.height / 2) - prevYView,\r\n      this.width,\r\n      this.height\r\n    )\r\n    this.context.drawImage(\r\n      this.sprite,\r\n      (Math.floor(this.position.x) - this.width / 2) - xView,\r\n      (Math.floor(this.position.y) - this.height / 2) - yView,\r\n      this.width,\r\n      this.height\r\n    )\r\n  }\r\n\r\n  goBack (): void {\r\n    let temp = this.position.clone()\r\n    this.position.setVector(this.previousPosition)\r\n    this.previousPosition.setVector(temp)\r\n    this.colliding = false\r\n  }\r\n\r\n  update (state: any): void {\r\n    this.state = state\r\n  }\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/entity/Entity.ts","import TileSetMap from '../../lib/tileset/TileSetMap'\r\n\r\nexport default class Area {\r\n  map: TileSetMap\r\n\r\n  constructor (map: TileSetMap) {\r\n    this.map = map\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Area.ts","import Vector2 from '../../lib/math/Vector2'\r\nimport Rectangle from '../../lib/geometry/Rectangle'\r\nimport Drawable from '../../game/interfaces/Drawable'\r\n\r\nexport enum AXIS {\r\n  NONE = 'none',\r\n  HORIZONTAL = 'horizontal',\r\n  VERTICAL = 'vertical',\r\n  BOTH = 'both'\r\n}\r\n\r\n/**\r\n * Camera class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Camera {\r\n  position: Vector2\r\n  previousPosition: Vector2\r\n  viewWidth: number\r\n  viewHeight: number\r\n  axis: AXIS\r\n  following: Drawable\r\n  deadZone: Vector2\r\n  viewportRect: Rectangle\r\n  worldRect: Rectangle\r\n\r\n  constructor (x, y, viewWidth, viewHeight, worldWidth, worldHeight) {\r\n    // position of camera (left-top coordinate)\r\n    this.position = new Vector2(x, y)\r\n    this.previousPosition = new Vector2(x, y)\r\n    this.deadZone = new Vector2(0, 0)\r\n\r\n    // viewport dimensions\r\n    this.viewWidth = viewWidth\r\n    this.viewHeight = viewHeight\r\n\r\n    // allow camera to move in vertical and horizontal axis\r\n    this.axis = AXIS.BOTH\r\n\r\n    // object that should be followed\r\n    this.following = null\r\n\r\n    // rectangle that represents the viewport\r\n    this.viewportRect = new Rectangle(this.position.x, this.position.y, this.viewWidth, this.viewHeight)\r\n\r\n    // rectangle that represents the world's boundary (room's boundary)\r\n    this.worldRect = new Rectangle(0, 0, worldWidth, worldHeight)\r\n\r\n  }\r\n\r\n  /**\r\n   * Object needs to have \"x\" and \"y\" properties (as world(or room) position)\r\n   *\r\n   * @param {Drawable} following\r\n   * @param xDeadZone\r\n   * @param yDeadZone\r\n   */\r\n  follow (following: Drawable, xDeadZone, yDeadZone): void {\r\n    this.following = following\r\n    this.deadZone.set(xDeadZone, yDeadZone)\r\n  }\r\n\r\n  update (): void {\r\n    this.previousPosition.setVector(this.position)\r\n    // keep following the player (or other desired object)\r\n    if (this.following != null) {\r\n      if (this.axis === AXIS.HORIZONTAL || this.axis === AXIS.BOTH) {\r\n        // moves camera on horizontal axis based on followed object position\r\n        if (this.following.position.x - this.position.x + this.deadZone.x > this.viewWidth) {\r\n          this.position.x = this.following.position.x - (this.viewWidth - this.deadZone.x)\r\n        } else if (this.following.position.x - this.deadZone.x < this.position.x) {\r\n          this.position.x = this.following.position.x - this.deadZone.x\r\n        }\r\n      }\r\n      if (this.axis === AXIS.VERTICAL || this.axis === AXIS.BOTH) {\r\n        // moves camera on vertical axis based on followed object position\r\n        if (this.following.position.y - this.position.y + this.deadZone.y > this.viewHeight) {\r\n          this.position.y = this.following.position.y - (this.viewHeight - this.deadZone.y)\r\n        } else if (this.following.position.y - this.deadZone.y < this.position.y) {\r\n          this.position.y = this.following.position.y - this.deadZone.y\r\n        }\r\n      }\r\n    }\r\n\r\n    // update viewportRect\r\n    this.viewportRect.set(this.position.x, this.position.y)\r\n\r\n    // don't let camera leaves the world's boundary\r\n    if (!this.viewportRect.within(this.worldRect)) {\r\n      if (this.viewportRect.left < this.worldRect.left) {\r\n        this.position.x = this.worldRect.left\r\n      }\r\n      if (this.viewportRect.top < this.worldRect.top) {\r\n        this.position.y = this.worldRect.top\r\n      }\r\n      if (this.viewportRect.right > this.worldRect.right) {\r\n        this.position.x = this.worldRect.right - this.viewWidth\r\n      }\r\n      if (this.viewportRect.bottom > this.worldRect.bottom) {\r\n        this.position.y = this.worldRect.bottom - this.viewHeight\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/2D/Camera.ts","/**\r\n * Rectangle class for camera.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Rectangle {\r\n  left: number\r\n  right: number\r\n  top: number\r\n  bottom: number\r\n  width: number\r\n  height: number\r\n\r\n  constructor (left: number, top: number, width: number, height: number) {\r\n    this.left = left\r\n    this.top = top\r\n    this.width = width\r\n    this.height = height\r\n    this.right = this.left + this.width\r\n    this.bottom = this.top + this.height\r\n  }\r\n\r\n  set (left: number, top: number, width?: number, height?: number): void {\r\n    this.left = left\r\n    this.top = top\r\n    this.width = width || this.width\r\n    this.height = height || this.height\r\n    this.right = (this.left + this.width)\r\n    this.bottom = (this.top + this.height)\r\n  }\r\n\r\n  within (other): boolean {\r\n    return (other.left <= this.left &&\r\n      other.right >= this.right &&\r\n      other.top <= this.top &&\r\n      other.bottom >= this.bottom)\r\n  }\r\n\r\n  overlaps (other): boolean {\r\n    return (this.left < other.right &&\r\n      other.left < this.right &&\r\n      this.top < other.bottom &&\r\n      other.top < this.bottom)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/geometry/Rectangle.ts","import HitBox from '../collision/HitBox'\r\n\r\nexport default class TileSetMap {\r\n  tileSetImage: HTMLImageElement\r\n  image: HTMLImageElement\r\n  width: number\r\n  height: number\r\n  context\r\n  mapLayers\r\n  tileSize: number\r\n  tilesPerRow: number\r\n  tilesPerColumn: number\r\n  imageTilesPerRow: number\r\n  hitBoxes: Array<HitBox>\r\n\r\n  constructor (image, mapLayers, context, tileSize: number, tilesPerRow: number, tilesPerColumn: number, imageTilesPerRow: number) {\r\n    this.tileSetImage = image\r\n    this.width = tilesPerRow * tileSize\r\n    this.height = tilesPerColumn * tileSize\r\n    this.mapLayers = mapLayers\r\n    this.context = context\r\n    this.tileSize = tileSize\r\n    this.tilesPerRow = tilesPerRow\r\n    this.tilesPerColumn = tilesPerColumn\r\n    this.imageTilesPerRow = imageTilesPerRow\r\n    this.hitBoxes = []\r\n    console.log(this.width)\r\n    console.log(this.height)\r\n  }\r\n\r\n  generate (): void {\r\n    let ctx = document.createElement('canvas').getContext('2d')\r\n    ctx.canvas.width = this.width\r\n    ctx.canvas.height = this.height\r\n\r\n    this.mapLayers.forEach(layer => this.generateLayer(ctx, layer))\r\n\r\n    // store the generate map as this tileSetImage texture\r\n    this.image = new Image()\r\n    this.image.src = ctx.canvas.toDataURL('image/png')\r\n\r\n    // clear context\r\n    ctx = null\r\n  }\r\n\r\n  generateLayer (ctx, layer): void {\r\n    for (let row = 0; row < this.tilesPerColumn; row++) {\r\n      for (let col = 0; col < this.tilesPerRow; col++) {\r\n        let tile = layer[row][col]\r\n        if (tile !== 0 && this.mapLayers.indexOf(layer) === this.mapLayers.length - 1) {\r\n          this.hitBoxes.push(new HitBox((col * this.tileSize), (row * this.tileSize), this.tileSize, this.tileSize))\r\n        }\r\n        let tileRow = (tile / this.imageTilesPerRow) | 0\r\n        let tileCol = (tile % this.imageTilesPerRow) | 0\r\n        ctx.drawImage(\r\n          this.tileSetImage,\r\n          (tileCol * this.tileSize),\r\n          (tileRow * this.tileSize),\r\n          this.tileSize,\r\n          this.tileSize,\r\n          (col * this.tileSize),\r\n          (row * this.tileSize),\r\n          this.tileSize,\r\n          this.tileSize\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * draw the map adjusted to camera\r\n   * @param xView\r\n   * @param yView\r\n   */\r\n  draw (xView, yView): void {\r\n    this.context.drawImage(this.image, 0, 0, this.image.width, this.image.height, -xView, -yView, this.image.width, this.image.height)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/tileset/TileSetMap.ts"],"sourceRoot":""}