{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/math/Point.ts","webpack:///./src/algorithm/pathfinding/Location.ts","webpack:///./src/algorithm/pathfinding/gui/Visualization.ts","webpack:///./src/algorithm/pathfinding/PathFinding.ts","webpack:///./src/algorithm/pathfinding/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Point","[object Object]","x","y","this","point","default","Status","Direction","position","path","status","UNKNOWN","grid","element","forEach","row","rowDiv","document","createElement","classList","add","appendChild","column","cell","firstChild","removeChild","Location_1","Point_1","height","width","j","EMPTY","startPoint","queue","START","found","length","currentLocation","shift","keys","filter","key","isNaN","Number","console","log","newLocation","exploreDirection","GOAL","VALID","push","location","gridSize","top","left","INVALID","BLOCKED","direction","newPath","slice","NORTH","EAST","SOUTH","WEST","Error","getLocationStatus","VISITED","PathFinding_1","Visualization_1","algorithm","init","OBSTACLE","findShortestPath","getElementById"],"mappings":"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","file":"pathfinding.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/**\n * Class Representing a Coordinate (x|y) on the canvas.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Point {\n  x: number\n  y: number\n\n  /**\n   * Default constructor.\n   *\n   * @param {number} x initializes x value of this point\n   * @param {number} y initializes y value of this point\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set both x and y values.\n   *\n   * @param {number} x x-axis value\n   * @param {number} y y-axis value\n   */\n  public set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set the x and y values of this point to the values of another point.\n   *\n   * @param {Point} point Other point\n   */\n  public setPoint (point: Point): void {\n    this.x = point.x\n    this.y = point.y\n  }\n\n  /**\n   * Create a another Point object with the same value as this Point.\n   *\n   * @returns {Point} A clone of this point\n   */\n  public clone (): Point {\n    return new Point(this.x, this.y)\n  }\n}\n","import Point from '../../lib/math/Point'\n\n/**\n * Direction enum.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport enum Direction {\n  NORTH = 'North', EAST = 'East', SOUTH = 'South', WEST = 'West'\n}\n\n/**\n * Location status enum.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport enum Status {\n  START = 'start',\n  VALID = 'valid',\n  INVALID = 'invalid',\n  BLOCKED = 'blocked',\n  UNKNOWN = 'unknown',\n  OBSTACLE = 'obstacle',\n  EMPTY = 'empty',\n  VISITED = 'visited',\n  GOAL = 'goal'\n}\n\n/**\n * Location on the grid.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Location {\n  position: Point\n  path\n  status: Status\n\n  constructor (position: Point, path = [], status = Status.UNKNOWN) {\n    this.position = position\n    this.path = path\n    this.status = status\n  }\n}\n","/**\n * Visualisation class\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Visualisation {\n  grid\n  element: HTMLElement\n\n  /**\n   *\n   * @param grid\n   * @param {HTMLElement} element\n   */\n  constructor (grid, element: HTMLElement) {\n    this.grid = grid\n    this.element = element\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.grid.forEach((row) => {\n      const rowDiv = document.createElement('div')\n      rowDiv.classList.add('row')\n      this.element.appendChild(rowDiv)\n      row.forEach((column) => {\n        const cell = document.createElement('div')\n        cell.classList.add('cell')\n        cell.classList.add(column)\n        rowDiv.appendChild(cell)\n      })\n    })\n  }\n\n  /**\n   *\n   */\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n  }\n}\n","import Location, { Direction, Status } from './Location'\nimport Point from '../../lib/math/Point'\n\n/**\n * Path finding algorithm class.\n *\n * @version 1.0\n */\nexport default class PathFinding {\n  grid\n\n  constructor () {\n    this.grid = []\n  }\n\n  /**\n   *\n   * @param {number} height\n   * @param {number} width\n   */\n  public init (height: number, width: number): void {\n    for (let i = 0; i < height; i++) {\n      this.grid[i] = []\n      for (let j = 0; j < width; j++) {\n        this.grid[i][j] = Status.EMPTY\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {Point} startPoint\n   * @returns {Location | boolean}\n   */\n  public findShortestPath (startPoint: Point): Location | boolean {\n    let startLocation = new Location(startPoint, [], Status.START)\n    let queue = [startLocation]\n    let found = false\n\n    while (queue.length > 0 && !found) {\n      let currentLocation = queue.shift()\n\n      Object.keys(Direction).filter(key => isNaN(Number(Direction[key]))).forEach(key => {\n        if (!found) {\n          const newLocation = this.exploreDirection(currentLocation, Direction[key], this.grid)\n          if (newLocation.status === Status.GOAL) {\n            found = newLocation.path\n          } else if (newLocation.status === Status.VALID) {\n            queue.push(newLocation)\n          }\n        } else {\n          console.log(found)\n        }\n      })\n    }\n\n    return found\n  }\n\n  /**\n   *\n   * @param {Location} location\n   * @param grid\n   * @returns {Status}\n   */\n  private getLocationStatus (location: Location, grid): Status {\n    let gridSize = grid.length\n    let top = location.position.y\n    let left = location.position.x\n\n    if (left < 0 || left >= gridSize || top < 0 || top >= gridSize) {\n      // location is not on the grid--return false\n      return Status.INVALID\n    } else if (grid[top][left] === Status.GOAL) {\n      return Status.GOAL\n    } else if (grid[top][left] !== Status.EMPTY) {\n      // location is either an obstacle or has been visited\n      return Status.BLOCKED\n    } else {\n      return Status.VALID\n    }\n  }\n\n  /**\n   *\n   * @param {Location} currentLocation\n   * @param {Direction} direction\n   * @param grid\n   * @returns {Location}\n   */\n  private exploreDirection (currentLocation: Location, direction: Direction, grid): Location {\n    let newPath = currentLocation.path.slice()\n    let x = currentLocation.position.x\n    let y = currentLocation.position.y\n\n    newPath.push(direction)\n\n    switch (direction) {\n      case Direction.NORTH:\n        y -= 1\n        break\n      case Direction.EAST:\n        x += 1\n        break\n      case Direction.SOUTH:\n        y += 1\n        break\n      case Direction.WEST:\n        x -= 1\n        break\n      default:\n        throw new Error('Internal Application error.')\n    }\n\n    let newLocation = new Location(new Point(x, y), newPath)\n    newLocation.status = this.getLocationStatus(newLocation, grid)\n\n    // If this new location is valid, mark it as 'Visited'\n    if (newLocation.status === Status.VALID) {\n      grid[newLocation.position.y][newLocation.position.x] = Status.VISITED\n    }\n\n    return newLocation\n  }\n}\n","import { Status } from './Location'\nimport Point from '../../lib/math/Point'\nimport PathFinding from './PathFinding'\nimport Visualisation from './gui/Visualization'\n\nconst algorithm = new PathFinding()\nalgorithm.init(8, 4)\nalgorithm.grid[0][0] = Status.START\nalgorithm.grid[2][2] = Status.GOAL\n\nalgorithm.grid[1][1] = Status.OBSTACLE\nalgorithm.grid[1][2] = Status.OBSTACLE\n\nalgorithm.grid[2][1] = Status.OBSTACLE\nalgorithm.grid[3][1] = Status.OBSTACLE\nalgorithm.grid[4][1] = Status.OBSTACLE\n\nconsole.log(algorithm.findShortestPath(new Point(0, 0)))\n\nconst gui = new Visualisation(algorithm.grid, document.getElementById('grid'))\n\ngui.init()\n"],"sourceRoot":""}