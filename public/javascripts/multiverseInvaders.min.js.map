{"version":3,"sources":["webpack:///webpack/bootstrap 9c0a0383854fb4f9637e","webpack:///./src/game/interfaces/CollideAble.ts","webpack:///./src/lib/vector/Vector2.ts","webpack:///./src/client/InputManager.ts","webpack:///./src/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/client/graphics/2D/SpriteSheet.ts","webpack:///./src/client/audio/Sound.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/client/Settings.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/game/app.ts","webpack:///./src/game/SpaceGame.ts","webpack:///./src/game/entities/Background.ts","webpack:///./src/game/entities/Ship.ts","webpack:///./src/game/structures/Pool.ts","webpack:///./src/game/entities/Bullet.ts","webpack:///./src/game/entities/Enemy.ts","webpack:///./src/client/SettingsMenu.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EntityType","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","default","Observable_1","Actions","settings","super","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","handleTouchStart","handleTouchMove","handleTouchEnd","preventDefault","touchstartX","touchstartY","toucheMoveX","touchMoveY","thisInstance","evt","pageX","pageY","reset","changedTouches","length","SpriteSheet_1","Sound_1","Ajax_1","AssetType","cache","sprites","spriteSheets","audio","downloadCount","queue","initAudioContext","AudioContext","webkitAudioContext","audioContext","masterGain","createGain","effectsGain","ambientGain","gain","value","connect","destination","e","console","log","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","data","decodeAudioData","then","buffer","done","error","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudioFromUrl","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","Vector2_1","CollideAble_1","width","height","position","colliding","collidesWith","BOX","PLAYER","other","includes","toString","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","gainNode","playing","loop","source","createBufferSource","stop","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","_observers","_state","observer","filter","obs","update","observers","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","objects","nodes","node","clear","returnedObjects","getAllObjects","index","getIndex","findObjects","obj","Array","element","insert","split","splice","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","quadTree","j","isCollideAbleWith","InputManager_1","w","UP","DOWN","a","LEFT","RIGHT","space","SHOOT","r","RESTART","player","maxVelocity","fireDelay","friction","acceleration","master","ambient","effects","keys","newKey","action","oldKey","findKey","events","listener","AssetManager_1","SpaceGame_1","Settings_1","SettingsMenu_1","EventHandler_1","assetManager","canvases","background","ship","main","inputManager","settingsMenu","queueDownload","BACKGROUND","PLAYER_BULLET","ENEMY","ENEMY_BULLET","MAIN_THEME","LASER","EXPLOSION_I","GAME_OVER","downloadAll","game","gameOver","set","shoot","cancelShoot","registerOnElement","restart","toggleShow","togglePause","Background_1","Ship_1","Pool_1","QuadTree_1","CollisionManager_1","paused","getContext","backgroundContext","shipContext","mainContext","playerScore","getSprite","shipStartX","shipStartY","enemyBulletPool","enemyPool","spawnWave","register","collisionManager","backgroundAudio","getSound","AUDIO_LOOP","play","spacer","innerHTML","pool","getPool","detectCollision","alive","draw","render","animReqID","requestAnimationFrame","style","display","gameOverAudio","cancelAnimationFrame","clearRect","clearAll","context","speed","canvasWidth","canvasHeight","drawImage","startPosition","velocity","counter","maxTop","laserSound","setVector","add","addVector","limit","fire","getTwo","Bullet_1","Enemy_1","maxSize","subPool","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","bulletPool","percentFire","chance","explosionSound","speedX","speedY","leftEdge","rightEdge","bottomEdge","scorePoints","random","showing","mainMenu","createElement","classList","appendChild","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","keyboardMenuId","keyboardLink","keyboardDiv","title","form","submit","openTab","createTextNode","setAttribute","setting","addEntry","setKey","playerMenuId","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","addPlayerSettingEntry","Number","audioMenuId","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row"],"mappings":"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","file":"multiverseInvaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9c0a0383854fb4f9637e","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enmey',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'BOX'\n}\n\n/**\n * Interface for collide able objects.\n */\nexport default interface CollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n\n  isCollideAbleWith (other: CollideAble): boolean\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/interfaces/CollideAble.ts","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/vector/Vector2.ts","import Observable from '../lib/observer/Observable'\nimport Settings from './Settings'\n\nexport enum Actions {\n  UP = 'UP', DOWN = 'DOWN', LEFT = 'LEFT', RIGHT = 'RIGHT', SHOOT = 'SHOOT', RESTART = 'RESTART'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/InputManager.ts","import { EntityType } from '../game/interfaces/CollideAble'\nimport SpriteSheet from './graphics/2D/SpriteSheet'\nimport Sound from './audio/Sound'\nimport Ajax from '../lib/ajax/Ajax'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_LOOP = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  audioContext\n  cache\n  queue\n  downloadCount: number\n  masterGain: GainNode\n  effectsGain: GainNode\n  ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.initAudioContext()\n  }\n\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {EntityType} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: EntityType, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudioFromUrl audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudioFromUrl (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.decodeAudio(response, item.id, callback)\n    })\n  }\n\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => {\n        this.cache.audio[id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      },\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudioFromUrl(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {EntityType} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: EntityType, type: AssetType): Sound {\n    let gain\n    if (type === AssetType.AUDIO) {\n      gain = this.effectsGain\n    } else {\n      gain = this.ambientGain\n    }\n    return new Sound(this.audioContext, gain, this.cache.audio[id])\n  }\n\n  /**\n   *\n   * @param {string} id\n   * @returns {EntityType}\n   */\n  getSprite (id: EntityType): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {EntityType} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: EntityType): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/AssetManager.ts","import Vector2 from '../vector/Vector2'\nimport CollideAble, { EntityType } from '../../game/interfaces/CollideAble'\n\nexport default class HitBox implements CollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/HitBox.ts","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/SpriteSheet.ts","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    this.source.stop(0)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/audio/Sound.ts","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ajax/Ajax.ts","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   *\n   * @param {Observer} observer\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   *\n   * @param {Observer} observer\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   *\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import HitBox from './HitBox'\nimport Drawable from '../../game/interfaces/Drawable'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: Drawable[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all game objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/QuadTree.ts","import QuadTree from './QuadTree'\n\nexport default class CollisionManager {\n  quadTree: QuadTree\n\n  constructor (quadTree) {\n    this.quadTree = quadTree\n  }\n\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        // DETECT COLLISION ALGORITHM\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/CollisionManager.ts","import { Actions } from './InputManager'\n\n/**\n * Settings class for game applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n\n  constructor () {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART\n    }\n    this.player = {\n      maxVelocity: 15,\n      fireDelay: 15,\n      friction: 0.7,\n      acceleration: 3\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Settings.ts","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/event/EventHandler.ts","import AssetManager, { AssetType } from '../client/AssetManager'\nimport SpaceGame from './SpaceGame'\nimport InputManager from '../client/InputManager'\nimport Settings from '../client/Settings'\nimport SettingsMenu from '../client/SettingsMenu'\nimport { EntityType } from './interfaces/CollideAble'\nimport EventHandler from '../lib/event/EventHandler'\n\nconst assetManager = new AssetManager()\nconst canvases = {\n  background: document.getElementById('background') as HTMLCanvasElement,\n  ship: document.getElementById('ship') as HTMLCanvasElement,\n  main: document.getElementById('main') as HTMLCanvasElement\n}\nconst settings = new Settings()\nconst inputManager = new InputManager(settings)\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager)\nassetManager.queueDownload(EntityType.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\nassetManager.queueDownload(EntityType.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\nassetManager.queueDownload(EntityType.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\nassetManager.queueDownload(EntityType.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(EntityType.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(EntityType.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\nassetManager.queueDownload(EntityType.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\nassetManager.queueDownload(EntityType.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\nassetManager.queueDownload(EntityType.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\nassetManager.downloadAll(() => {\n  const game = new SpaceGame(assetManager, inputManager, settings, canvases)\n  settingsMenu.init()\n  let gameOver = document.getElementById('game-over')\n  let set = document.getElementById('settings')\n  let shoot = document.getElementById('shoot')\n  let events = ['click', 'touchstart']\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\n  shoot.addEventListener('contextmenu', event => {\n    event.preventDefault()\n    return false\n  })\n  EventHandler.registerOnElement(gameOver, events, () => game.restart())\n  EventHandler.registerOnElement(set, events, () => {\n    settingsMenu.toggleShow()\n    game.togglePause()\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/app.ts","import Background from './entities/Background'\nimport AssetManager, { AssetType } from '../client/AssetManager'\nimport InputManager, { Actions } from '../client/InputManager'\nimport Ship from './entities/Ship'\nimport Pool from './structures/Pool'\nimport QuadTree from '../lib/collision/QuadTree'\nimport HitBox from '../lib/collision/HitBox'\nimport Settings from '../client/Settings'\nimport { EntityType } from './interfaces/CollideAble'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Sound from '../client/audio/Sound'\nimport Observer from '../lib/observer/Observer'\n\n/**\n * Space game main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpaceGame implements Observer {\n  background: Background\n  ship: Ship\n  enemyPool: Pool\n  enemyBulletPool: Pool\n  backgroundContext\n  shipContext\n  mainContext\n  playing: boolean\n  window\n  assetManager: AssetManager\n  inputManager: InputManager\n  collisionManager: CollisionManager\n  settings: Settings\n  quadTree: QuadTree\n  playerScore: number\n  shipStartX: number\n  shipStartY: number\n  paused: boolean\n  canvases\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  animReqID\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param canvases\n   */\n  constructor (assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\n    this.playing = false\n    this.paused = false\n    this.window = window\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.canvases = canvases\n\n    if (this.canvases.background.getContext) {\n      this.backgroundContext = this.canvases.background.getContext('2d')\n      this.shipContext = this.canvases.ship.getContext('2d')\n      this.mainContext = this.canvases.main.getContext('2d')\n      this.playerScore = 0\n      this.background = new Background(\n        0,\n        0,\n        this.canvases.background.width,\n        this.canvases.background.height,\n        this.backgroundContext,\n        this.assetManager.getSprite(EntityType.BACKGROUND)\n      )\n      this.shipStartX = this.canvases.ship.width / 2 - assetManager.getSprite(EntityType.PLAYER).width\n      this.shipStartY = this.canvases.ship.height / 4 * 3 + assetManager.getSprite(EntityType.PLAYER).height * 2\n      this.ship = new Ship(\n        this.shipStartX,\n        this.shipStartY,\n        assetManager.getSprite(EntityType.PLAYER).width,\n        assetManager.getSprite(EntityType.PLAYER).height,\n        this.canvases.ship.width,\n        this.canvases.ship.height,\n        this.shipContext,\n        assetManager,\n        new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 80, EntityType.PLAYER_BULLET),\n        settings.player\n      )\n      this.enemyBulletPool = new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 50, EntityType.ENEMY_BULLET)\n      this.enemyPool = new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 30, EntityType.ENEMY, this.enemyBulletPool, this)\n      this.spawnWave()\n      inputManager.register(this.ship)\n      inputManager.register(this)\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvases.main.width, this.canvases.main.height))\n      this.collisionManager = new CollisionManager(this.quadTree)\n      this.backgroundAudio = this.assetManager.getSound(EntityType.MAIN_THEME, AssetType.AUDIO_LOOP)\n      this.backgroundAudio.play(true)\n      this.start()\n    }\n  }\n\n  togglePause (): void {\n    this.paused = !this.paused\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    const height = this.assetManager.getSprite(EntityType.ENEMY).height\n    const width = this.assetManager.getSprite(EntityType.ENEMY).width\n    let x = 200\n    let y = -height\n    const spacer = y * 1.5\n    for (let i = 1; i <= 21; i++) {\n      this.enemyPool.get(x, y, 4)\n      x += width + 25\n      if (i % 7 === 0) {\n        x = 200\n        y += spacer\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    if (this.playing) {\n      if (!this.paused) {\n        document.getElementById('score').innerHTML = this.playerScore.toString()\n        this.quadTree.clear()\n        this.quadTree.insert(this.ship)\n        this.quadTree.insert(this.ship.pool.getPool())\n        this.quadTree.insert(this.enemyPool.getPool())\n        this.quadTree.insert(this.enemyBulletPool.getPool())\n        this.collisionManager.detectCollision()\n\n        // Spawn new wave if all enemies are destroyed.\n        if (this.enemyPool.getPool().length === 0) {\n          this.spawnWave()\n        }\n\n        if (this.ship.alive()) {\n          this.background.draw()\n          this.ship.move()\n          this.ship.pool.render()\n          this.enemyPool.render()\n          this.enemyBulletPool.render()\n        } else {\n          this.playing = false\n          this.gameOver()\n        }\n      }\n      this.animReqID = window.requestAnimationFrame(() => this.render())\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n  }\n\n  update (state: any): void {\n    if (state[Actions.RESTART]) {\n      this.restart()\n    }\n  }\n\n  /**\n   *\n   */\n  start (): void {\n    this.playing = true\n    this.render()\n    this.ship.draw()\n  }\n\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(EntityType.GAME_OVER, AssetType.AUDIO_LOOP)\n    this.gameOverAudio.play(true)\n  }\n\n  restart (): void {\n    if (!this.playing) {\n      this.gameOverAudio.stop()\n      this.backgroundAudio.play(true)\n      document.getElementById('game-over').style.display = 'none'\n    } else {\n      window.cancelAnimationFrame(this.animReqID)\n      this.playing = false\n      this.backgroundAudio.stop()\n      this.backgroundAudio.play(true)\n    }\n    this.backgroundContext.clearRect(0, 0, this.canvases.background.width, this.canvases.background.height)\n    this.shipContext.clearRect(0, 0, this.canvases.ship.width, this.canvases.ship.height)\n    this.mainContext.clearRect(0, 0, this.canvases.main.width, this.canvases.main.height)\n    this.quadTree.clear()\n    this.background.reset()\n    this.playerScore = 0\n    this.ship.reset()\n    this.enemyBulletPool.clearAll()\n    this.enemyPool.clearAll()\n    this.ship.pool.clearAll()\n    this.start()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/SpaceGame.ts","import Drawable from '../interfaces/Drawable'\nimport Vector2 from '../../lib/vector/Vector2'\nimport { EntityType } from '../interfaces/CollideAble'\n\nexport default class Background implements Drawable {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  type: EntityType\n  sprite: any\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {any} context\n   * @param {any} sprite\n   */\n  constructor (x: number, y: number, width: number, height: number, context: any, sprite: any) {\n    this.position = new Vector2(x, y)\n    this.speed = 1\n    this.width = width\n    this.height = height\n    this.canvasWidth = width\n    this.canvasHeight = height\n    this.context = context\n    this.sprite = sprite\n    this.type = EntityType.BACKGROUND\n  }\n\n  reset (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   */\n  draw (): void {\n    this.position.y += this.speed\n    this.context.drawImage(this.sprite, this.position.x, this.position.y)\n    this.context.drawImage(this.sprite, this.position.x, this.position.y - this.height)\n\n    if (this.position.y >= this.height) {\n      this.position.y = 0\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Background.ts","import Drawable from '../interfaces/Drawable'\nimport Vector2 from '../../lib/vector/Vector2'\nimport Pool from '../structures/Pool'\nimport Observer from '../../lib/observer/Observer'\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\nimport { Actions } from '../../client/InputManager'\nimport AssetManager, { AssetType } from '../../client/AssetManager'\nimport Sound from '../../client/audio/Sound'\n\n/**\n *\n */\nexport default class Ship implements Drawable, Observer, CollideAble {\n  position: Vector2\n  speed: number\n  acceleration: Vector2\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  pool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings\n  laserSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param context\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param settings\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, context: any, assetManager: AssetManager, pool: Pool, settings) {\n    this.position = new Vector2(x, y)\n    this.startPosition = new Vector2(x, y)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = assetManager.getSprite(EntityType.PLAYER)\n    this.type = EntityType.PLAYER\n    this.pool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.maxTop = Math.floor(this.canvasHeight / 4 * 3)\n    this.laserSound = assetManager.getSound(EntityType.LASER, AssetType.AUDIO)\n  }\n\n  reset (): void {\n    this.position.setVector(this.startPosition)\n    this.velocity.set(0, 0)\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  move (): void {\n    if (!this.colliding) {\n      this.counter++\n      this.context.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.width, this.height)\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.acceleration)\n      }\n      this.velocity.multiply(this.settings.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.maxVelocity)\n      this.position.addVector(this.velocity)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.canvasWidth - this.width) {\n        this.position.x = this.canvasWidth - this.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.canvasHeight - this.height) {\n        this.position.y = this.canvasHeight - this.height\n      }\n\n      // Finish by redrawing the ship\n      this.draw()\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.fireDelay && !this.colliding) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  alive (): boolean {\n    return !this.colliding\n  }\n\n  draw (): void {\n    this.context.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n\n  fire (): void {\n    this.pool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 6,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 6\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Ship.ts","import AssetManager from '../../client/AssetManager'\nimport Bullet from '../entities/Bullet'\nimport Enemy from '../entities/Enemy'\nimport SpaceGame from '../SpaceGame'\nimport { EntityType } from '../interfaces/CollideAble'\nimport Drawable from '../interfaces/Drawable'\n\n/**\n *\n */\nexport default class Pool {\n  assetManager: AssetManager\n  context: any\n  canvasWidth: number\n  canvasHeight: number\n  maxSize: number\n  type: EntityType\n  pool: any[]\n  subPool: Pool\n  game: SpaceGame\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {a} context\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} maxSize\n   * @param {string} type\n   * @param {Pool} pool\n   * @param {SpaceGame} game\n   */\n  constructor (assetManager: AssetManager, context: any, canvasWidth: number, canvasHeight: number, maxSize: number, type: EntityType, pool: Pool = null, game: SpaceGame = null) {\n    this.assetManager = assetManager\n    this.context = context\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.maxSize = maxSize\n    this.type = type\n    this.pool = []\n    this.subPool = pool\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    if (this.type === EntityType.ENEMY) {\n      let sprite = this.assetManager.getSprite(this.type)\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type,\n          this.subPool,\n          this.game\n        )\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        let sprite = this.assetManager.getSprite(this.type)\n        this.pool[i] = new Bullet(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type\n        )\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  get (x: number, y: number, speed: number): void {\n    let lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        if (this.pool[i].draw()) {\n          this.pool[i].clear()\n          this.pool.push((this.pool.splice(i, 1))[0])\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  clearAll (): void {\n    this.pool.forEach(object => object.clear())\n  }\n\n  getPool (): Drawable[] {\n    let objects = []\n    this.pool.forEach(object => {\n      if (object.alive) {\n        objects.push(object)\n      }\n    })\n    return objects\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/structures/Pool.ts","import Drawable from '../interfaces/Drawable'\nimport Vector2 from '../../lib/vector/Vector2'\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\n\n/**\n *\n */\nexport default class Bullet implements Drawable, CollideAble {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context: any, sprite: any, type: EntityType) {\n    this.position = new Vector2(x, y)\n    this.speed = speed\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y - 1, this.width + 1, this.height + 1)\n    this.position.y -= this.speed\n    if (this.colliding) {\n      return true\n    } else if (this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.height) {\n      return true\n    } else if (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.canvasHeight) {\n      return true\n    } else {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      return false\n    }\n  }\n\n  clear (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Bullet.ts","import Drawable from '../interfaces/Drawable'\nimport Vector2 from '../../lib/vector/Vector2'\nimport Pool from '../structures/Pool'\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\nimport SpaceGame from '../SpaceGame'\nimport { AssetType } from '../../client/AssetManager'\nimport Sound from '../../client/audio/Sound'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy implements Drawable, CollideAble {\n  position: Vector2\n  speed: number\n  speedX: number\n  speedY: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  game: SpaceGame\n  explosionSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   * @param {Pool} bulletPool\n   * @param {SpaceGame} game\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context, sprite, type: EntityType, bulletPool: Pool, game: SpaceGame) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.speed = speed\n    this.context = context\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.game = game\n    this.explosionSound = this.game.assetManager.getSound(EntityType.EXPLOSION_I, AssetType.AUDIO)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.x = x\n    this.position.y = y\n    this.speed = speed\n    this.speedX = 0\n    this.speedY = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y, this.width + 1, this.height)\n    this.position.x += this.speedX\n    this.position.y += this.speedY\n    if (this.position.x <= this.leftEdge) {\n      this.speedX = this.speed\n    } else if (this.position.x >= this.rightEdge + this.width) {\n      this.speedX = -this.speed\n    } else if (this.position.y >= this.bottomEdge) {\n      this.speed = 1.5\n      this.speedY = 0\n      this.position.y -= 5\n      this.speedX = -this.speed\n    }\n    if (!this.colliding) {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      // Enemy has a chance to shoot every movement\n      this.chance = Math.floor(Math.random() * 101)\n      if (this.chance / 100 < this.percentFire) {\n        this.fire()\n      }\n      return false\n    } else {\n      this.game.scorePoints()\n      this.explosionSound.play()\n      return true\n    }\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.width / 2), Math.floor(this.position.y + this.height), -5)\n  }\n\n  /**\n   *\n   */\n  clear (): void {\n    this.position.x = 0\n    this.position.y = 0\n    this.speed = 0\n    this.speedX = 0\n    this.speedY = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   */\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Enemy.ts","import Settings from './Settings'\nimport { Actions } from './InputManager'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../lib/event/EventHandler'\n\nexport default class SettingsMenu {\n  element: HTMLDivElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  showing: boolean\n\n  constructor (element, settings: Settings, assetManager: AssetManager) {\n    this.element = element\n    this.settings = settings\n    this.assetManager = assetManager\n    this.showing = false\n  }\n\n  createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add('tab')\n    this.element.appendChild(this.mainMenu)\n  }\n\n  openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName('tabContent')\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName('tabLink')\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' active'\n  }\n\n  createKeyboardMenu (): void {\n    let keyboardMenuId = 'keyboardMenu'\n    let keyboardLink = document.createElement('button')\n    let keyboardDiv = document.createElement('div')\n    let title = document.createElement('h4')\n    let form = document.createElement('form')\n    let submit = document.createElement('input')\n    EventHandler.registerOnElement(\n      keyboardLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, keyboardMenuId)\n    )\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\n    keyboardLink.classList.add('tabLink')\n    this.mainMenu.appendChild(keyboardLink)\n    keyboardDiv.setAttribute('id', keyboardMenuId)\n    keyboardDiv.classList.add('tabContent')\n    title.appendChild(document.createTextNode('Keyboard'))\n    form.setAttribute('id', 'keyboardSettings')\n    form.setAttribute('method', 'post')\n    submit.setAttribute('type', 'submit')\n    submit.setAttribute('value', 'Save')\n    keyboardDiv.appendChild(title)\n    keyboardDiv.appendChild(form)\n    this.element.appendChild(keyboardDiv)\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\n    form.appendChild(submit)\n    form.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\n      this.clear()\n    })\n  }\n\n  createPlayerMenu (): void {\n    let playerMenuId = 'playerMenu'\n    let playerLink = document.createElement('button')\n    let playerDiv = document.createElement('div')\n    let playerTitle = document.createElement('h4')\n    let playerForm = document.createElement('form')\n    let playerSubmit = document.createElement('input')\n    EventHandler.registerOnElement(\n      playerLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, playerMenuId)\n    )\n    playerLink.appendChild(document.createTextNode('Player'))\n    playerLink.classList.add('tabLink')\n    this.mainMenu.appendChild(playerLink)\n    playerDiv.setAttribute('id', playerMenuId)\n    playerDiv.classList.add('tabContent')\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\n    playerForm.setAttribute('id', 'playerSettings')\n    playerForm.setAttribute('method', 'post')\n    playerSubmit.setAttribute('type', 'submit')\n    playerSubmit.setAttribute('value', 'Save')\n    playerDiv.appendChild(playerTitle)\n    playerDiv.appendChild(playerForm)\n    this.element.appendChild(playerDiv)\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\n    playerForm.appendChild(playerSubmit)\n    playerForm.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\n      this.clear()\n    })\n  }\n\n  createAudioMenu (): void {\n    let audioMenuId = 'audioMenu'\n    let audioLink = document.createElement('button')\n    let audioDiv = document.createElement('div')\n    let div = document.createElement('div')\n    let audioTitle = document.createElement('h4')\n    let audioLabel = document.createElement('label')\n    let audioSlide = document.createElement('input')\n    EventHandler.registerOnElement(\n      audioLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, audioMenuId)\n    )\n    audioLink.classList.add('tabLink')\n    audioLink.appendChild(document.createTextNode('Audio'))\n    this.mainMenu.appendChild(audioLink)\n    audioDiv.setAttribute('id', audioMenuId)\n    audioDiv.classList.add('tabContent')\n    div.classList.add('row')\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\n    audioLabel.setAttribute('for', 'masterVolume')\n    audioSlide.setAttribute('id', 'masterVolume')\n    audioSlide.setAttribute('type', 'range')\n    audioSlide.setAttribute('min', '0')\n    audioSlide.setAttribute('max', '1')\n    audioSlide.setAttribute('step', '0.1')\n    audioSlide.addEventListener('change', event => this.assetManager.adjustMasterVolume(Number(audioSlide.value)))\n    div.appendChild(audioTitle)\n    div.appendChild(audioLabel)\n    div.appendChild(audioSlide)\n    audioDiv.appendChild(div)\n\n    let ambientDiv = document.createElement('div')\n    let ambientLabel = document.createElement('label')\n    let ambientSlide = document.createElement('input')\n    ambientDiv.classList.add('row')\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\n    ambientLabel.setAttribute('for', 'ambientVolume')\n    ambientSlide.setAttribute('id', 'ambientVolume')\n    ambientSlide.setAttribute('type', 'range')\n    ambientSlide.setAttribute('min', '0')\n    ambientSlide.setAttribute('max', '1')\n    ambientSlide.setAttribute('step', '0.1')\n    ambientSlide.addEventListener('change', event => this.assetManager.adjustAmbientVolume(Number(ambientSlide.value)))\n    ambientDiv.appendChild(ambientLabel)\n    ambientDiv.appendChild(ambientSlide)\n    audioDiv.appendChild(ambientDiv)\n\n    let effectsDiv = document.createElement('div')\n    let effectsLabel = document.createElement('label')\n    let effectsSlide = document.createElement('input')\n    effectsDiv.classList.add('row')\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\n    effectsLabel.setAttribute('for', 'effectsVolume')\n    effectsSlide.setAttribute('id', 'effectsVolume')\n    effectsSlide.setAttribute('type', 'range')\n    effectsSlide.setAttribute('min', '0')\n    effectsSlide.setAttribute('max', '1')\n    effectsSlide.setAttribute('step', '0.1')\n    effectsSlide.addEventListener('change', event => this.assetManager.adjustEffectsVolume(Number(effectsSlide.value)))\n    effectsDiv.appendChild(effectsLabel)\n    effectsDiv.appendChild(effectsSlide)\n    audioDiv.appendChild(effectsDiv)\n    this.element.appendChild(audioDiv)\n  }\n\n  init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu()\n    this.createPlayerMenu()\n    this.createAudioMenu()\n  }\n\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  addPlayerSettingEntry (setting, element): void {\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    let row = document.createElement('div')\n    label.setAttribute('for', setting)\n    label.appendChild(document.createTextNode(setting + ':'))\n    input.setAttribute('id', setting)\n    input.setAttribute('type', 'number')\n    input.setAttribute('name', setting)\n    input.setAttribute('value', this.settings.player[setting])\n    row.classList.add('row')\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  addEntry (setting, element): void {\n    let row = document.createElement('div')\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', this.settings.keyBoard[setting])\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\n    input.setAttribute('id', this.settings.keyBoard[setting])\n    input.setAttribute('type', 'text')\n    input.setAttribute('name', this.settings.keyBoard[setting])\n    input.setAttribute('value', setting)\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  toggleShow (): void {\n    if (this.showing) {\n      this.element.style.display = 'none'\n      this.showing = false\n    } else {\n      this.element.style.display = 'block'\n      this.showing = true\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/SettingsMenu.ts"],"sourceRoot":""}