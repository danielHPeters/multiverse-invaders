{"version":3,"sources":["webpack:///webpack/bootstrap 5df7be6cc0031ddd3db2","webpack:///./src/lib/interfaces/ICollideAble.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/lib/client/InputManager.ts","webpack:///./src/lib/client/AssetManager.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/app.ts","webpack:///./src/lib/graphics/2D/SpriteSheet.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/application/SpaceGame.ts","webpack:///./src/models/Background.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/models/Ship.ts","webpack:///./src/models/Pool.ts","webpack:///./src/models/Bullet.ts","webpack:///./src/models/Enemy.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/lib/client/Settings.ts","webpack:///./src/lib/client/SettingsMenu.ts","webpack:///./src/lib/client/AudioManager.ts","webpack:///./src/lib/audio/Sound.ts","webpack:///./src/application/GameLoop.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EntityType","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","default","Observable_1","Actions","settings","super","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","handleTouchStart","handleTouchMove","handleTouchEnd","preventDefault","touchstartX","touchstartY","toucheMoveX","touchMoveY","thisInstance","evt","pageX","pageY","reset","changedTouches","length","SpriteSheet_1","Ajax_1","AssetType","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudio","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","ambient","AUDIO_AMB","createSound","AssetId","Vector2_1","ICollideAble_1","width","height","position","colliding","collidesWith","BOX","PLAYER","other","includes","toString","element","events","listener","AssetManager_1","SpaceGame_1","InputManager_1","Settings_1","SettingsMenu_1","EventHandler_1","AssetId_1","AudioManager_1","GameLoop_1","assetManager","canvases","background","ship","main","inputManager","settingsMenu","queueDownload","BACKGROUND","PLAYER_BULLET","ENEMY","ENEMY_BULLET","MAIN_THEME","LASER","EXPLOSION_I","GAME_OVER","downloadAll","game","gameOver","set","shoot","cancelShoot","registerOnElement","restart","toggleShow","togglePause","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","data","JSON","stringify","send","Background_1","Ship_1","Pool_1","QuadTree_1","HitBox_1","CollisionManager_1","playing","paused","getContext","backgroundContext","shipContext","mainContext","playerScore","getSprite","shipStartX","shipStartY","player","enemyBulletPool","enemyPool","spawnWave","register","quadTree","collisionManager","backgroundAudio","getSound","play","spacer","innerHTML","clear","insert","pool","getPool","detectCollision","alive","draw","render","animReqID","requestAnimationFrame","RESTART","stop","style","display","gameOverAudio","cancelAnimationFrame","clearRect","clearAll","context","speed","canvasWidth","canvasHeight","drawImage","_observers","_state","observer","filter","obs","update","observers","startPosition","acceleration","velocity","counter","maxTop","laserSound","setVector","LEFT","add","RIGHT","UP","DOWN","friction","addVector","limit","maxVelocity","SHOOT","fireDelay","fire","getTwo","Bullet_1","Enemy_1","maxSize","asId","assetId","subPool","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","splice","objects","bulletPool","percentFire","chance","explosionSound","speedX","speedY","leftEdge","rightEdge","bottomEdge","scorePoints","random","QuadTree","hitBox","level","maxObjects","maxLevels","nodes","node","returnedObjects","getAllObjects","console","log","index","getIndex","findObjects","obj","Array","split","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","j","isCollideAbleWith","w","a","space","r","q","ROTATE_LEFT","e","ROTATE_RIGHT","master","effects","value","keys","newKey","action","oldKey","findKey","showing","mainMenu","createElement","classList","appendChild","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","keyboardMenuId","keyboardLink","keyboardDiv","title","form","submit","openTab","createTextNode","setAttribute","setting","addEntry","setKey","playerMenuId","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","addPlayerSettingEntry","Number","audioMenuId","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row","Sound_1","initAudioContext","AudioContext","webkitAudioContext","audioContext","masterGain","createGain","effectsGain","ambientGain","gain","connect","destination","decodeAudioData","then","error","gainNode","loop","source","createBufferSource","lastTime","running","frameId","time","diff"],"mappings":"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","file":"multiverseInvaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5df7be6cc0031ddd3db2","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collideable entities.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface ICollideAble {\n  collidesWith: EntityType[]\n  colliding: boolean\n  type: EntityType\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/interfaces/ICollideAble.ts","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Vector2.ts","import Observable from '../observer/Observable'\nimport Settings from './Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/client/InputManager.ts","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../ajax/Ajax'\nimport { AssetId } from '../../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/client/AssetManager.ts","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/enum/AssetId.ts","import Vector2 from '../math/Vector2'\nimport ICollideAble, { EntityType } from '../interfaces/ICollideAble'\n\n/**\n * Hitbox used for defining collision boundaries.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class HitBox implements ICollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/HitBox.ts","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/event/EventHandler.ts","import AssetManager, { AssetType } from './lib/client/AssetManager'\nimport SpaceGame from './application/SpaceGame'\nimport InputManager from './lib/client/InputManager'\nimport Settings from './lib/client/Settings'\nimport SettingsMenu from './lib/client/SettingsMenu'\nimport EventHandler from './lib/event/EventHandler'\nimport { AssetId } from './enum/AssetId'\nimport AudioManager from './lib/client/AudioManager'\nimport GameLoop from './application/GameLoop'\n\nconst audioManager = new AudioManager()\nconst assetManager = new AssetManager(audioManager)\nconst canvases = {\n  background: document.getElementById('background') as HTMLCanvasElement,\n  ship: document.getElementById('ship') as HTMLCanvasElement,\n  main: document.getElementById('main') as HTMLCanvasElement\n}\nconst settings = new Settings()\nconst inputManager = new InputManager(settings)\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager, audioManager)\nassetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\nassetManager.downloadAll(() => {\n  const game = new SpaceGame(assetManager, inputManager, settings, canvases)\n  const loop = new GameLoop(game)\n  settingsMenu.init()\n  let gameOver = document.getElementById('game-over')\n  let set = document.getElementById('settings')\n  let shoot = document.getElementById('shoot')\n  let events = ['click', 'touchstart']\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\n  shoot.addEventListener('contextmenu', event => {\n    event.preventDefault()\n    return false\n  })\n  EventHandler.registerOnElement(gameOver, events, () => game.restart())\n  EventHandler.registerOnElement(set, events, () => {\n    settingsMenu.toggleShow()\n    game.togglePause()\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/graphics/2D/SpriteSheet.ts","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ajax/Ajax.ts","import Background from '../models/Background'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport InputManager, { Actions } from '../lib/client/InputManager'\nimport Ship from '../models/Ship'\nimport Pool from '../models/Pool'\nimport QuadTree from '../lib/collision/QuadTree'\nimport HitBox from '../lib/collision/HitBox'\nimport Settings from '../lib/client/Settings'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Sound from '../lib/audio/Sound'\nimport Observer from '../lib/observer/Observer'\nimport { AssetId } from '../enum/AssetId'\nimport IGame from '../lib/interfaces/IGame'\nimport IGameState from '../lib/interfaces/IGameState'\nimport ICollisionManager from '../lib/interfaces/ICollisionManager'\n\n/**\n * Space models main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpaceGame implements Observer, IGame {\n  state: IGameState\n  background: Background\n  ship: Ship\n  enemyPool: Pool\n  enemyBulletPool: Pool\n  backgroundContext\n  shipContext\n  mainContext\n  playing: boolean\n  window\n  assetManager: AssetManager\n  inputManager: InputManager\n  collisionManager: ICollisionManager\n  settings: Settings\n  quadTree: QuadTree\n  playerScore: number\n  shipStartX: number\n  shipStartY: number\n  paused: boolean\n  canvases\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  animReqID\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param canvases\n   */\n  constructor (assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\n    this.playing = false\n    this.paused = false\n    this.window = window\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.canvases = canvases\n    this.init()\n  }\n\n  init (): void {\n    if (this.canvases.background.getContext) {\n      this.backgroundContext = this.canvases.background.getContext('2d')\n      this.shipContext = this.canvases.ship.getContext('2d')\n      this.mainContext = this.canvases.main.getContext('2d')\n      this.playerScore = 0\n      this.background = new Background(\n        0,\n        0,\n        this.canvases.background.width,\n        this.canvases.background.height,\n        this.backgroundContext,\n        this.assetManager.getSprite(AssetId.BACKGROUND)\n      )\n      this.shipStartX = this.canvases.ship.width / 2 - this.assetManager.getSprite(AssetId.PLAYER).width\n      this.shipStartY = this.canvases.ship.height / 4 * 3 + this.assetManager.getSprite(AssetId.PLAYER).height * 2\n      this.ship = new Ship(\n        this.shipStartX,\n        this.shipStartY,\n        this.assetManager.getSprite(AssetId.PLAYER).width,\n        this.assetManager.getSprite(AssetId.PLAYER).height,\n        this.canvases.ship.width,\n        this.canvases.ship.height,\n        this.shipContext,\n        this.assetManager,\n        new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET),\n        this.settings.player\n      )\n      this.enemyBulletPool = new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET)\n      this.enemyPool = new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 30, EntityType.ENEMY, AssetId.ENEMY, this.enemyBulletPool, this)\n      this.spawnWave()\n      this.inputManager.register(this.ship)\n      this.inputManager.register(this)\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvases.main.width, this.canvases.main.height))\n      this.collisionManager = new CollisionManager(this.quadTree)\n      this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n      this.backgroundAudio.play(true)\n      this.start()\n    }\n  }\n\n  togglePause (): void {\n    this.paused = !this.paused\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    const height = this.assetManager.getSprite(AssetId.ENEMY).height\n    const width = this.assetManager.getSprite(AssetId.ENEMY).width\n    let x = 200\n    let y = -height\n    const spacer = y * 1.5\n    for (let i = 1; i <= 21; i++) {\n      this.enemyPool.get(x, y, 4)\n      x += width + 25\n      if (i % 7 === 0) {\n        x = 200\n        y += spacer\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    if (this.playing) {\n      if (!this.paused) {\n        document.getElementById('score').innerHTML = this.playerScore.toString()\n        this.quadTree.clear()\n        this.quadTree.insert(this.ship)\n        this.quadTree.insert(this.ship.pool.getPool())\n        this.quadTree.insert(this.enemyPool.getPool())\n        this.quadTree.insert(this.enemyBulletPool.getPool())\n        this.collisionManager.detectCollision()\n\n        // Spawn new wave if all enemies are destroyed.\n        if (this.enemyPool.getPool().length === 0) {\n          this.spawnWave()\n        }\n\n        if (this.ship.alive()) {\n          this.background.draw()\n          this.ship.move()\n          this.ship.pool.render()\n          this.enemyPool.render()\n          this.enemyBulletPool.render()\n        } else {\n          this.playing = false\n          this.gameOver()\n        }\n      }\n      this.animReqID = window.requestAnimationFrame(() => this.render())\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n  }\n\n  update (state: any): void {\n    if (state[Actions.RESTART]) {\n      this.restart()\n    }\n  }\n\n  /**\n   *\n   */\n  start (): void {\n    this.playing = true\n    this.render()\n    this.ship.draw()\n  }\n\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  restart (): void {\n    if (!this.playing) {\n      this.gameOverAudio.stop()\n      this.backgroundAudio.play(true)\n      document.getElementById('game-over').style.display = 'none'\n    } else {\n      window.cancelAnimationFrame(this.animReqID)\n      this.playing = false\n      this.backgroundAudio.stop()\n      this.backgroundAudio.play(true)\n    }\n    this.backgroundContext.clearRect(0, 0, this.canvases.background.width, this.canvases.background.height)\n    this.shipContext.clearRect(0, 0, this.canvases.ship.width, this.canvases.ship.height)\n    this.mainContext.clearRect(0, 0, this.canvases.main.width, this.canvases.main.height)\n    this.quadTree.clear()\n    this.background.reset()\n    this.playerScore = 0\n    this.ship.reset()\n    this.enemyBulletPool.clearAll()\n    this.enemyPool.clearAll()\n    this.ship.pool.clearAll()\n    this.start()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/application/SpaceGame.ts","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\n\nexport default class Background implements IDrawable {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  type: EntityType\n  sprite: any\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {any} context\n   * @param {any} sprite\n   */\n  constructor (x: number, y: number, width: number, height: number, context: any, sprite: any) {\n    this.position = new Vector2(x, y)\n    this.speed = 1\n    this.width = width\n    this.height = height\n    this.canvasWidth = width\n    this.canvasHeight = height\n    this.context = context\n    this.sprite = sprite\n    this.type = EntityType.BACKGROUND\n  }\n\n  reset (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   */\n  draw (): void {\n    this.position.y += this.speed\n    this.context.drawImage(this.sprite, this.position.x, this.position.y)\n    this.context.drawImage(this.sprite, this.position.x, this.position.y - this.height)\n\n    if (this.position.y >= this.height) {\n      this.position.y = 0\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Background.ts","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport Observer from '../lib/observer/Observer'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport { Actions } from '../lib/client/InputManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n *\n */\nexport default class Ship implements IDrawable, Observer, ICollideAble {\n  position: Vector2\n  speed: number\n  acceleration: Vector2\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  pool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings\n  laserSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param context\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param settings\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, context: any, assetManager: AssetManager, pool: Pool, settings) {\n    this.position = new Vector2(x, y)\n    this.startPosition = new Vector2(x, y)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.pool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.maxTop = Math.floor(this.canvasHeight / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n  }\n\n  reset (): void {\n    this.position.setVector(this.startPosition)\n    this.velocity.set(0, 0)\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  move (): void {\n    if (!this.colliding) {\n      this.counter++\n      this.context.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.width, this.height)\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.acceleration)\n      }\n      this.velocity.multiply(this.settings.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.maxVelocity)\n      this.position.addVector(this.velocity)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.canvasWidth - this.width) {\n        this.position.x = this.canvasWidth - this.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.canvasHeight - this.height) {\n        this.position.y = this.canvasHeight - this.height\n      }\n\n      // Finish by redrawing the ship\n      this.draw()\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.fireDelay && !this.colliding) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  alive (): boolean {\n    return !this.colliding\n  }\n\n  draw (): void {\n    this.context.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n\n  fire (): void {\n    this.pool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 6,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 6\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Ship.ts","import AssetManager from '../lib/client/AssetManager'\nimport Bullet from './Bullet'\nimport Enemy from './Enemy'\nimport SpaceGame from '../application/SpaceGame'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport IDrawable from '../lib/interfaces/IDrawable'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n *\n */\nexport default class Pool {\n  assetManager: AssetManager\n  context: any\n  canvasWidth: number\n  canvasHeight: number\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  game: SpaceGame\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {a} context\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} maxSize\n   * @param {string} type\n   * @param {AssetId} asId\n   * @param {Pool} pool\n   * @param {SpaceGame} game\n   */\n  constructor (assetManager: AssetManager, context: any, canvasWidth: number, canvasHeight: number, maxSize: number, type: EntityType, asId: AssetId, pool: Pool = null, game: SpaceGame = null) {\n    this.assetManager = assetManager\n    this.context = context\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    if (this.type === EntityType.ENEMY) {\n      let sprite = this.assetManager.getSprite(this.assetId)\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type,\n          this.subPool,\n          this.game\n        )\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        let sprite = this.assetManager.getSprite(this.assetId)\n        this.pool[i] = new Bullet(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type\n        )\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  get (x: number, y: number, speed: number): void {\n    let lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        if (this.pool[i].draw()) {\n          this.pool[i].clear()\n          this.pool.push((this.pool.splice(i, 1))[0])\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  clearAll (): void {\n    this.pool.forEach(object => object.clear())\n  }\n\n  getPool (): IDrawable[] {\n    let objects = []\n    this.pool.forEach(object => {\n      if (object.alive) {\n        objects.push(object)\n      }\n    })\n    return objects\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Pool.ts","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\n\n/**\n *\n */\nexport default class Bullet implements IDrawable, ICollideAble {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context: any, sprite: any, type: EntityType) {\n    this.position = new Vector2(x, y)\n    this.speed = speed\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y - 1, this.width + 1, this.height + 1)\n    this.position.y -= this.speed\n    if (this.colliding) {\n      return true\n    } else if (this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.height) {\n      return true\n    } else if (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.canvasHeight) {\n      return true\n    } else {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      return false\n    }\n  }\n\n  clear (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Bullet.ts","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport SpaceGame from '../application/SpaceGame'\nimport { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy implements IDrawable, ICollideAble {\n  position: Vector2\n  speed: number\n  speedX: number\n  speedY: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  game: SpaceGame\n  explosionSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   * @param {Pool} bulletPool\n   * @param {SpaceGame} game\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context, sprite, type: EntityType, bulletPool: Pool, game: SpaceGame) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.speed = speed\n    this.context = context\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.game = game\n    this.explosionSound = this.game.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.x = x\n    this.position.y = y\n    this.speed = speed\n    this.speedX = 0\n    this.speedY = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y, this.width + 1, this.height)\n    this.position.x += this.speedX\n    this.position.y += this.speedY\n    if (this.position.x <= this.leftEdge) {\n      this.speedX = this.speed\n    } else if (this.position.x >= this.rightEdge + this.width) {\n      this.speedX = -this.speed\n    } else if (this.position.y >= this.bottomEdge) {\n      this.speed = 1.5\n      this.speedY = 0\n      this.position.y -= 5\n      this.speedX = -this.speed\n    }\n    if (!this.colliding) {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      // Enemy has a chance to shoot every movement\n      this.chance = Math.floor(Math.random() * 101)\n      if (this.chance / 100 < this.percentFire) {\n        this.fire()\n      }\n      return false\n    } else {\n      this.game.scorePoints()\n      this.explosionSound.play()\n      return true\n    }\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.width / 2), Math.floor(this.position.y + this.height), -5)\n  }\n\n  /**\n   *\n   */\n  clear (): void {\n    this.position.x = 0\n    this.position.y = 0\n    this.speed = 0\n    this.speedX = 0\n    this.speedY = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Enemy.ts","import HitBox from './HitBox'\nimport ICollideAble from '../interfaces/ICollideAble'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: ICollideAble[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all models objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/QuadTree.ts","import QuadTree from './QuadTree'\n\nexport default class CollisionManager {\n  quadTree: QuadTree\n\n  constructor (quadTree) {\n    this.quadTree = quadTree\n  }\n\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        // DETECT COLLISION ALGORITHM\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/CollisionManager.ts","import { Actions } from './InputManager'\n\n/**\n * Settings class for models applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n\n  constructor () {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART,\n      'q': Actions.ROTATE_LEFT,\n      'e': Actions.ROTATE_RIGHT\n    }\n    this.player = {\n      maxVelocity: 15,\n      fireDelay: 15,\n      friction: 0.7,\n      acceleration: 3\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/client/Settings.ts","import Settings from './Settings'\nimport { Actions } from './InputManager'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../event/EventHandler'\nimport AudioManager from './AudioManager'\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLDivElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  showing: boolean\n\n  constructor (element, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = element\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.showing = false\n  }\n\n  createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add('tab')\n    this.element.appendChild(this.mainMenu)\n  }\n\n  openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName('tabContent')\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName('tabLink')\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' active'\n  }\n\n  createKeyboardMenu (): void {\n    let keyboardMenuId = 'keyboardMenu'\n    let keyboardLink = document.createElement('button')\n    let keyboardDiv = document.createElement('div')\n    let title = document.createElement('h4')\n    let form = document.createElement('form')\n    let submit = document.createElement('input')\n    EventHandler.registerOnElement(\n      keyboardLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, keyboardMenuId)\n    )\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\n    keyboardLink.classList.add('tabLink')\n    this.mainMenu.appendChild(keyboardLink)\n    keyboardDiv.setAttribute('id', keyboardMenuId)\n    keyboardDiv.classList.add('tabContent')\n    title.appendChild(document.createTextNode('Keyboard'))\n    form.setAttribute('id', 'keyboardSettings')\n    form.setAttribute('method', 'post')\n    submit.setAttribute('type', 'submit')\n    submit.setAttribute('value', 'Save')\n    keyboardDiv.appendChild(title)\n    keyboardDiv.appendChild(form)\n    this.element.appendChild(keyboardDiv)\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\n    form.appendChild(submit)\n    form.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\n      this.clear()\n    })\n  }\n\n  createPlayerMenu (): void {\n    let playerMenuId = 'playerMenu'\n    let playerLink = document.createElement('button')\n    let playerDiv = document.createElement('div')\n    let playerTitle = document.createElement('h4')\n    let playerForm = document.createElement('form')\n    let playerSubmit = document.createElement('input')\n    EventHandler.registerOnElement(\n      playerLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, playerMenuId)\n    )\n    playerLink.appendChild(document.createTextNode('Player'))\n    playerLink.classList.add('tabLink')\n    this.mainMenu.appendChild(playerLink)\n    playerDiv.setAttribute('id', playerMenuId)\n    playerDiv.classList.add('tabContent')\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\n    playerForm.setAttribute('id', 'playerSettings')\n    playerForm.setAttribute('method', 'post')\n    playerSubmit.setAttribute('type', 'submit')\n    playerSubmit.setAttribute('value', 'Save')\n    playerDiv.appendChild(playerTitle)\n    playerDiv.appendChild(playerForm)\n    this.element.appendChild(playerDiv)\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\n    playerForm.appendChild(playerSubmit)\n    playerForm.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\n      this.clear()\n    })\n  }\n\n  createAudioMenu (): void {\n    let audioMenuId = 'audioMenu'\n    let audioLink = document.createElement('button')\n    let audioDiv = document.createElement('div')\n    let div = document.createElement('div')\n    let audioTitle = document.createElement('h4')\n    let audioLabel = document.createElement('label')\n    let audioSlide = document.createElement('input')\n    EventHandler.registerOnElement(\n      audioLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, audioMenuId)\n    )\n    audioLink.classList.add('tabLink')\n    audioLink.appendChild(document.createTextNode('Audio'))\n    this.mainMenu.appendChild(audioLink)\n    audioDiv.setAttribute('id', audioMenuId)\n    audioDiv.classList.add('tabContent')\n    div.classList.add('row')\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\n    audioLabel.setAttribute('for', 'masterVolume')\n    audioSlide.setAttribute('id', 'masterVolume')\n    audioSlide.setAttribute('type', 'range')\n    audioSlide.setAttribute('min', '0')\n    audioSlide.setAttribute('max', '1')\n    audioSlide.setAttribute('step', '0.1')\n    audioSlide.addEventListener('change', event => this.audioManager.adjustMasterVolume(Number(audioSlide.value)))\n    div.appendChild(audioTitle)\n    div.appendChild(audioLabel)\n    div.appendChild(audioSlide)\n    audioDiv.appendChild(div)\n\n    let ambientDiv = document.createElement('div')\n    let ambientLabel = document.createElement('label')\n    let ambientSlide = document.createElement('input')\n    ambientDiv.classList.add('row')\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\n    ambientLabel.setAttribute('for', 'ambientVolume')\n    ambientSlide.setAttribute('id', 'ambientVolume')\n    ambientSlide.setAttribute('type', 'range')\n    ambientSlide.setAttribute('min', '0')\n    ambientSlide.setAttribute('max', '1')\n    ambientSlide.setAttribute('step', '0.1')\n    ambientSlide.addEventListener('change', event => this.audioManager.adjustAmbientVolume(Number(ambientSlide.value)))\n    ambientDiv.appendChild(ambientLabel)\n    ambientDiv.appendChild(ambientSlide)\n    audioDiv.appendChild(ambientDiv)\n\n    let effectsDiv = document.createElement('div')\n    let effectsLabel = document.createElement('label')\n    let effectsSlide = document.createElement('input')\n    effectsDiv.classList.add('row')\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\n    effectsLabel.setAttribute('for', 'effectsVolume')\n    effectsSlide.setAttribute('id', 'effectsVolume')\n    effectsSlide.setAttribute('type', 'range')\n    effectsSlide.setAttribute('min', '0')\n    effectsSlide.setAttribute('max', '1')\n    effectsSlide.setAttribute('step', '0.1')\n    effectsSlide.addEventListener('change', event => this.audioManager.adjustEffectsVolume(Number(effectsSlide.value)))\n    effectsDiv.appendChild(effectsLabel)\n    effectsDiv.appendChild(effectsSlide)\n    audioDiv.appendChild(effectsDiv)\n    this.element.appendChild(audioDiv)\n  }\n\n  init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu()\n    this.createPlayerMenu()\n    this.createAudioMenu()\n  }\n\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  addPlayerSettingEntry (setting, element): void {\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    let row = document.createElement('div')\n    label.setAttribute('for', setting)\n    label.appendChild(document.createTextNode(setting + ':'))\n    input.setAttribute('id', setting)\n    input.setAttribute('type', 'number')\n    input.setAttribute('name', setting)\n    input.setAttribute('value', this.settings.player[setting])\n    row.classList.add('row')\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  addEntry (setting, element): void {\n    let row = document.createElement('div')\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', this.settings.keyBoard[setting])\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\n    input.setAttribute('id', this.settings.keyBoard[setting])\n    input.setAttribute('type', 'text')\n    input.setAttribute('name', this.settings.keyBoard[setting])\n    input.setAttribute('value', setting)\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  toggleShow (): void {\n    if (this.showing) {\n      this.element.style.display = 'none'\n      this.showing = false\n    } else {\n      this.element.style.display = 'block'\n      this.showing = true\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/client/SettingsMenu.ts","import Sound from '../audio/Sound'\n\n/**\n * Audiomanager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/client/AudioManager.ts","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    this.source.stop(0)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/audio/Sound.ts","import IGameLoop from '../lib/interfaces/IGameLoop'\nimport IGame from '../lib/interfaces/IGame'\n\n/**\n * Game loop.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class GameLoop implements IGameLoop {\n  public game: IGame\n  public lastTime: number\n  public frameId: number\n\n  /**\n   * Constructor.\n   *\n   * @param {IGame} game Game instance\n   */\n  constructor (game: IGame) {\n    this.game = game\n    this.lastTime = null\n  }\n\n  /**\n   *\n   */\n  public start (): void {\n    this.game.init()\n    this.game.state.running = true\n    this.frameId = requestAnimationFrame(time => this.loop(time))\n  }\n\n  /**\n   *\n   */\n  public stop (): void {\n    this.game.state.running = false\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId)\n    }\n  }\n\n  public restart (): void {\n    this.stop()\n    this.start()\n  }\n\n  /**\n   *\n   */\n  public togglePause (): void {\n    this.game.state.paused = !this.game.state.paused\n  }\n\n  /**\n   *\n   */\n  public loop (time: number): void {\n    if (this.game.state.running) {\n      if (!this.game.state.paused) {\n        if (this.lastTime !== null) {\n          const diff = time - this.lastTime\n          this.game.update(diff / 1000)\n        }\n        this.lastTime = time\n        this.game.render()\n        this.frameId = requestAnimationFrame(time => this.loop(time))\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/application/GameLoop.ts"],"sourceRoot":""}