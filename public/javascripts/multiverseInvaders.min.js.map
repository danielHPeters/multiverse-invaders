{"version":3,"sources":["webpack:///webpack/bootstrap d5fa7cdd55850c5c3c7c","webpack:///./src/client/InputManager.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/game/interfaces/CollideAble.ts","webpack:///./src/client/AssetManager.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/client/Settings.ts","webpack:///./src/graphics/2D/SpriteSheet.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/client/AudioManager.ts","webpack:///./src/audio/Sound.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/game/app.ts","webpack:///./src/game/SpaceGame.ts","webpack:///./src/game/entities/Background.ts","webpack:///./src/game/entities/Ship.ts","webpack:///./src/game/structures/Pool.ts","webpack:///./src/game/entities/Bullet.ts","webpack:///./src/game/entities/Enemy.ts","webpack:///./src/client/SettingsMenu.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Observable_1","Actions","default","[object Object]","settings","super","this","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","handleTouchStart","handleTouchMove","handleTouchEnd","preventDefault","touchstartX","touchstartY","toucheMoveX","touchMoveY","thisInstance","evt","pageX","pageY","reset","changedTouches","length","Vector2","x","y","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","EntityType","SpriteSheet_1","Ajax_1","AssetType","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudio","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","ambient","AUDIO_AMB","createSound","AssetId","Vector2_1","CollideAble_1","width","height","position","colliding","collidesWith","BOX","PLAYER","other","includes","toString","_observers","_state","observer","filter","obs","update","observers","InputManager_1","w","UP","DOWN","a","LEFT","RIGHT","space","SHOOT","r","RESTART","q","ROTATE_LEFT","e","ROTATE_RIGHT","player","maxVelocity","fireDelay","friction","acceleration","master","effects","value","keys","newKey","action","oldKey","findKey","console","log","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","data","JSON","stringify","send","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","objects","nodes","node","clear","returnedObjects","getAllObjects","index","getIndex","findObjects","obj","Array","element","insert","split","splice","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","quadTree","j","isCollideAbleWith","Sound_1","initAudioContext","AudioContext","webkitAudioContext","audioContext","masterGain","createGain","effectsGain","ambientGain","gain","connect","destination","decodeAudioData","then","error","gainNode","playing","loop","source","createBufferSource","stop","events","listener","AssetManager_1","SpaceGame_1","Settings_1","SettingsMenu_1","EventHandler_1","AssetId_1","assetManager","canvases","background","ship","main","inputManager","settingsMenu","queueDownload","BACKGROUND","PLAYER_BULLET","ENEMY","ENEMY_BULLET","MAIN_THEME","LASER","EXPLOSION_I","GAME_OVER","downloadAll","game","gameOver","set","shoot","cancelShoot","registerOnElement","restart","toggleShow","togglePause","Background_1","Ship_1","Pool_1","QuadTree_1","CollisionManager_1","paused","getContext","backgroundContext","shipContext","mainContext","playerScore","getSprite","shipStartX","shipStartY","enemyBulletPool","enemyPool","spawnWave","register","collisionManager","backgroundAudio","getSound","play","spacer","innerHTML","pool","getPool","detectCollision","alive","draw","render","animReqID","requestAnimationFrame","style","display","gameOverAudio","cancelAnimationFrame","clearRect","clearAll","context","speed","canvasWidth","canvasHeight","drawImage","startPosition","velocity","counter","maxTop","laserSound","setVector","add","addVector","limit","fire","getTwo","Bullet_1","Enemy_1","maxSize","asId","assetId","subPool","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","bulletPool","percentFire","chance","explosionSound","speedX","speedY","leftEdge","rightEdge","bottomEdge","scorePoints","random","showing","mainMenu","createElement","classList","appendChild","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","keyboardMenuId","keyboardLink","keyboardDiv","title","form","submit","openTab","createTextNode","setAttribute","setting","addEntry","setKey","playerMenuId","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","addPlayerSettingEntry","Number","audioMenuId","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row"],"mappings":"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","file":"multiverseInvaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d5fa7cdd55850c5c3c7c","import Observable from '../lib/observer/Observable'\nimport Settings from './Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/InputManager.ts","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Vector2.ts","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collide able objects.\n */\nexport default interface CollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n\n  isCollideAbleWith (other: CollideAble): boolean\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/interfaces/CollideAble.ts","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../lib/ajax/Ajax'\nimport { AssetId } from '../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/AssetManager.ts","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/enum/AssetId.ts","import Vector2 from '../math/Vector2'\nimport CollideAble, { EntityType } from '../../game/interfaces/CollideAble'\n\nexport default class HitBox implements CollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/HitBox.ts","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import { Actions } from './InputManager'\n\n/**\n * Settings class for game applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n\n  constructor () {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART,\n      'q': Actions.ROTATE_LEFT,\n      'e': Actions.ROTATE_RIGHT\n    }\n    this.player = {\n      maxVelocity: 15,\n      fireDelay: 15,\n      friction: 0.7,\n      acceleration: 3\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Settings.ts","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/2D/SpriteSheet.ts","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ajax/Ajax.ts","import HitBox from './HitBox'\nimport Drawable from '../../game/interfaces/Drawable'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: Drawable[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all game objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/QuadTree.ts","import QuadTree from './QuadTree'\n\nexport default class CollisionManager {\n  quadTree: QuadTree\n\n  constructor (quadTree) {\n    this.quadTree = quadTree\n  }\n\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        // DETECT COLLISION ALGORITHM\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/CollisionManager.ts","import Sound from '../audio/Sound'\n\n/**\n * Audiomanager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/AudioManager.ts","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    this.source.stop(0)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio/Sound.ts","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/event/EventHandler.ts","import AssetManager, { AssetType } from '../client/AssetManager'\nimport SpaceGame from './SpaceGame'\nimport InputManager from '../client/InputManager'\nimport Settings from '../client/Settings'\nimport SettingsMenu from '../client/SettingsMenu'\nimport EventHandler from '../lib/event/EventHandler'\nimport { AssetId } from '../enum/AssetId'\nimport AudioManager from '../client/AudioManager'\n\nconst audioManager = new AudioManager()\nconst assetManager = new AssetManager(audioManager)\nconst canvases = {\n  background: document.getElementById('background') as HTMLCanvasElement,\n  ship: document.getElementById('ship') as HTMLCanvasElement,\n  main: document.getElementById('main') as HTMLCanvasElement\n}\nconst settings = new Settings()\nconst inputManager = new InputManager(settings)\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager, audioManager)\nassetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\nassetManager.downloadAll(() => {\n  const game = new SpaceGame(assetManager, inputManager, settings, canvases)\n  settingsMenu.init()\n  let gameOver = document.getElementById('game-over')\n  let set = document.getElementById('settings')\n  let shoot = document.getElementById('shoot')\n  let events = ['click', 'touchstart']\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\n  shoot.addEventListener('contextmenu', event => {\n    event.preventDefault()\n    return false\n  })\n  EventHandler.registerOnElement(gameOver, events, () => game.restart())\n  EventHandler.registerOnElement(set, events, () => {\n    settingsMenu.toggleShow()\n    game.togglePause()\n  })\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/app.ts","import Background from './entities/Background'\nimport AssetManager, { AssetType } from '../client/AssetManager'\nimport InputManager, { Actions } from '../client/InputManager'\nimport Ship from './entities/Ship'\nimport Pool from './structures/Pool'\nimport QuadTree from '../lib/collision/QuadTree'\nimport HitBox from '../lib/collision/HitBox'\nimport Settings from '../client/Settings'\nimport { EntityType } from './interfaces/CollideAble'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Sound from '../audio/Sound'\nimport Observer from '../lib/observer/Observer'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n * Space game main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpaceGame implements Observer {\n  background: Background\n  ship: Ship\n  enemyPool: Pool\n  enemyBulletPool: Pool\n  backgroundContext\n  shipContext\n  mainContext\n  playing: boolean\n  window\n  assetManager: AssetManager\n  inputManager: InputManager\n  collisionManager: CollisionManager\n  settings: Settings\n  quadTree: QuadTree\n  playerScore: number\n  shipStartX: number\n  shipStartY: number\n  paused: boolean\n  canvases\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  animReqID\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param canvases\n   */\n  constructor (assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\n    this.playing = false\n    this.paused = false\n    this.window = window\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.canvases = canvases\n\n    if (this.canvases.background.getContext) {\n      this.backgroundContext = this.canvases.background.getContext('2d')\n      this.shipContext = this.canvases.ship.getContext('2d')\n      this.mainContext = this.canvases.main.getContext('2d')\n      this.playerScore = 0\n      this.background = new Background(\n        0,\n        0,\n        this.canvases.background.width,\n        this.canvases.background.height,\n        this.backgroundContext,\n        this.assetManager.getSprite(AssetId.BACKGROUND)\n      )\n      this.shipStartX = this.canvases.ship.width / 2 - assetManager.getSprite(AssetId.PLAYER).width\n      this.shipStartY = this.canvases.ship.height / 4 * 3 + assetManager.getSprite(AssetId.PLAYER).height * 2\n      this.ship = new Ship(\n        this.shipStartX,\n        this.shipStartY,\n        assetManager.getSprite(AssetId.PLAYER).width,\n        assetManager.getSprite(AssetId.PLAYER).height,\n        this.canvases.ship.width,\n        this.canvases.ship.height,\n        this.shipContext,\n        assetManager,\n        new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET),\n        settings.player\n      )\n      this.enemyBulletPool = new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET)\n      this.enemyPool = new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 30, EntityType.ENEMY, AssetId.ENEMY, this.enemyBulletPool, this)\n      this.spawnWave()\n      inputManager.register(this.ship)\n      inputManager.register(this)\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvases.main.width, this.canvases.main.height))\n      this.collisionManager = new CollisionManager(this.quadTree)\n      this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n      this.backgroundAudio.play(true)\n      this.start()\n    }\n  }\n\n  togglePause (): void {\n    this.paused = !this.paused\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    const height = this.assetManager.getSprite(AssetId.ENEMY).height\n    const width = this.assetManager.getSprite(AssetId.ENEMY).width\n    let x = 200\n    let y = -height\n    const spacer = y * 1.5\n    for (let i = 1; i <= 21; i++) {\n      this.enemyPool.get(x, y, 4)\n      x += width + 25\n      if (i % 7 === 0) {\n        x = 200\n        y += spacer\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    if (this.playing) {\n      if (!this.paused) {\n        document.getElementById('score').innerHTML = this.playerScore.toString()\n        this.quadTree.clear()\n        this.quadTree.insert(this.ship)\n        this.quadTree.insert(this.ship.pool.getPool())\n        this.quadTree.insert(this.enemyPool.getPool())\n        this.quadTree.insert(this.enemyBulletPool.getPool())\n        this.collisionManager.detectCollision()\n\n        // Spawn new wave if all enemies are destroyed.\n        if (this.enemyPool.getPool().length === 0) {\n          this.spawnWave()\n        }\n\n        if (this.ship.alive()) {\n          this.background.draw()\n          this.ship.move()\n          this.ship.pool.render()\n          this.enemyPool.render()\n          this.enemyBulletPool.render()\n        } else {\n          this.playing = false\n          this.gameOver()\n        }\n      }\n      this.animReqID = window.requestAnimationFrame(() => this.render())\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n  }\n\n  update (state: any): void {\n    if (state[Actions.RESTART]) {\n      this.restart()\n    }\n  }\n\n  /**\n   *\n   */\n  start (): void {\n    this.playing = true\n    this.render()\n    this.ship.draw()\n  }\n\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  restart (): void {\n    if (!this.playing) {\n      this.gameOverAudio.stop()\n      this.backgroundAudio.play(true)\n      document.getElementById('game-over').style.display = 'none'\n    } else {\n      window.cancelAnimationFrame(this.animReqID)\n      this.playing = false\n      this.backgroundAudio.stop()\n      this.backgroundAudio.play(true)\n    }\n    this.backgroundContext.clearRect(0, 0, this.canvases.background.width, this.canvases.background.height)\n    this.shipContext.clearRect(0, 0, this.canvases.ship.width, this.canvases.ship.height)\n    this.mainContext.clearRect(0, 0, this.canvases.main.width, this.canvases.main.height)\n    this.quadTree.clear()\n    this.background.reset()\n    this.playerScore = 0\n    this.ship.reset()\n    this.enemyBulletPool.clearAll()\n    this.enemyPool.clearAll()\n    this.ship.pool.clearAll()\n    this.start()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/SpaceGame.ts","import Drawable from '../interfaces/Drawable'\nimport Vector2 from '../../lib/math/Vector2'\nimport { EntityType } from '../interfaces/CollideAble'\n\nexport default class Background implements Drawable {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  type: EntityType\n  sprite: any\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {any} context\n   * @param {any} sprite\n   */\n  constructor (x: number, y: number, width: number, height: number, context: any, sprite: any) {\n    this.position = new Vector2(x, y)\n    this.speed = 1\n    this.width = width\n    this.height = height\n    this.canvasWidth = width\n    this.canvasHeight = height\n    this.context = context\n    this.sprite = sprite\n    this.type = EntityType.BACKGROUND\n  }\n\n  reset (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   */\n  draw (): void {\n    this.position.y += this.speed\n    this.context.drawImage(this.sprite, this.position.x, this.position.y)\n    this.context.drawImage(this.sprite, this.position.x, this.position.y - this.height)\n\n    if (this.position.y >= this.height) {\n      this.position.y = 0\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Background.ts","import Drawable from '../interfaces/Drawable'\nimport Vector2 from '../../lib/math/Vector2'\nimport Pool from '../structures/Pool'\nimport Observer from '../../lib/observer/Observer'\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\nimport { Actions } from '../../client/InputManager'\nimport AssetManager, { AssetType } from '../../client/AssetManager'\nimport Sound from '../../audio/Sound'\nimport { AssetId } from '../../enum/AssetId'\n\n/**\n *\n */\nexport default class Ship implements Drawable, Observer, CollideAble {\n  position: Vector2\n  speed: number\n  acceleration: Vector2\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  pool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings\n  laserSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param context\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param settings\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, context: any, assetManager: AssetManager, pool: Pool, settings) {\n    this.position = new Vector2(x, y)\n    this.startPosition = new Vector2(x, y)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.pool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.maxTop = Math.floor(this.canvasHeight / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n  }\n\n  reset (): void {\n    this.position.setVector(this.startPosition)\n    this.velocity.set(0, 0)\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  move (): void {\n    if (!this.colliding) {\n      this.counter++\n      this.context.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.width, this.height)\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.acceleration)\n      }\n      this.velocity.multiply(this.settings.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.maxVelocity)\n      this.position.addVector(this.velocity)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.canvasWidth - this.width) {\n        this.position.x = this.canvasWidth - this.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.canvasHeight - this.height) {\n        this.position.y = this.canvasHeight - this.height\n      }\n\n      // Finish by redrawing the ship\n      this.draw()\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.fireDelay && !this.colliding) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  alive (): boolean {\n    return !this.colliding\n  }\n\n  draw (): void {\n    this.context.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n\n  fire (): void {\n    this.pool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 6,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 6\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Ship.ts","import AssetManager  from '../../client/AssetManager'\nimport Bullet from '../entities/Bullet'\nimport Enemy from '../entities/Enemy'\nimport SpaceGame from '../SpaceGame'\nimport { EntityType } from '../interfaces/CollideAble'\nimport Drawable from '../interfaces/Drawable'\nimport { AssetId } from '../../enum/AssetId'\n\n/**\n *\n */\nexport default class Pool {\n  assetManager: AssetManager\n  context: any\n  canvasWidth: number\n  canvasHeight: number\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  game: SpaceGame\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {a} context\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} maxSize\n   * @param {string} type\n   * @param {AssetId} asId\n   * @param {Pool} pool\n   * @param {SpaceGame} game\n   */\n  constructor (assetManager: AssetManager, context: any, canvasWidth: number, canvasHeight: number, maxSize: number, type: EntityType, asId: AssetId, pool: Pool = null, game: SpaceGame = null) {\n    this.assetManager = assetManager\n    this.context = context\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    if (this.type === EntityType.ENEMY) {\n      let sprite = this.assetManager.getSprite(this.assetId)\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type,\n          this.subPool,\n          this.game\n        )\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        let sprite = this.assetManager.getSprite(this.assetId)\n        this.pool[i] = new Bullet(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type\n        )\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  get (x: number, y: number, speed: number): void {\n    let lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        if (this.pool[i].draw()) {\n          this.pool[i].clear()\n          this.pool.push((this.pool.splice(i, 1))[0])\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  clearAll (): void {\n    this.pool.forEach(object => object.clear())\n  }\n\n  getPool (): Drawable[] {\n    let objects = []\n    this.pool.forEach(object => {\n      if (object.alive) {\n        objects.push(object)\n      }\n    })\n    return objects\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/structures/Pool.ts","import Drawable from '../interfaces/Drawable'\nimport Vector2 from '../../lib/math/Vector2'\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\n\n/**\n *\n */\nexport default class Bullet implements Drawable, CollideAble {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context: any, sprite: any, type: EntityType) {\n    this.position = new Vector2(x, y)\n    this.speed = speed\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y - 1, this.width + 1, this.height + 1)\n    this.position.y -= this.speed\n    if (this.colliding) {\n      return true\n    } else if (this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.height) {\n      return true\n    } else if (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.canvasHeight) {\n      return true\n    } else {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      return false\n    }\n  }\n\n  clear (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Bullet.ts","import Drawable from '../interfaces/Drawable'\nimport Vector2 from '../../lib/math/Vector2'\nimport Pool from '../structures/Pool'\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\nimport SpaceGame from '../SpaceGame'\nimport { AssetType } from '../../client/AssetManager'\nimport Sound from '../../audio/Sound'\nimport { AssetId } from '../../enum/AssetId'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy implements Drawable, CollideAble {\n  position: Vector2\n  speed: number\n  speedX: number\n  speedY: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  game: SpaceGame\n  explosionSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   * @param {Pool} bulletPool\n   * @param {SpaceGame} game\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context, sprite, type: EntityType, bulletPool: Pool, game: SpaceGame) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.speed = speed\n    this.context = context\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.game = game\n    this.explosionSound = this.game.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.x = x\n    this.position.y = y\n    this.speed = speed\n    this.speedX = 0\n    this.speedY = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y, this.width + 1, this.height)\n    this.position.x += this.speedX\n    this.position.y += this.speedY\n    if (this.position.x <= this.leftEdge) {\n      this.speedX = this.speed\n    } else if (this.position.x >= this.rightEdge + this.width) {\n      this.speedX = -this.speed\n    } else if (this.position.y >= this.bottomEdge) {\n      this.speed = 1.5\n      this.speedY = 0\n      this.position.y -= 5\n      this.speedX = -this.speed\n    }\n    if (!this.colliding) {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      // Enemy has a chance to shoot every movement\n      this.chance = Math.floor(Math.random() * 101)\n      if (this.chance / 100 < this.percentFire) {\n        this.fire()\n      }\n      return false\n    } else {\n      this.game.scorePoints()\n      this.explosionSound.play()\n      return true\n    }\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.width / 2), Math.floor(this.position.y + this.height), -5)\n  }\n\n  /**\n   *\n   */\n  clear (): void {\n    this.position.x = 0\n    this.position.y = 0\n    this.speed = 0\n    this.speedX = 0\n    this.speedY = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   */\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Enemy.ts","import Settings from './Settings'\nimport { Actions } from './InputManager'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../lib/event/EventHandler'\nimport AudioManager from './AudioManager'\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLDivElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  showing: boolean\n\n  constructor (element, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = element\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.showing = false\n  }\n\n  createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add('tab')\n    this.element.appendChild(this.mainMenu)\n  }\n\n  openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName('tabContent')\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName('tabLink')\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' active'\n  }\n\n  createKeyboardMenu (): void {\n    let keyboardMenuId = 'keyboardMenu'\n    let keyboardLink = document.createElement('button')\n    let keyboardDiv = document.createElement('div')\n    let title = document.createElement('h4')\n    let form = document.createElement('form')\n    let submit = document.createElement('input')\n    EventHandler.registerOnElement(\n      keyboardLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, keyboardMenuId)\n    )\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\n    keyboardLink.classList.add('tabLink')\n    this.mainMenu.appendChild(keyboardLink)\n    keyboardDiv.setAttribute('id', keyboardMenuId)\n    keyboardDiv.classList.add('tabContent')\n    title.appendChild(document.createTextNode('Keyboard'))\n    form.setAttribute('id', 'keyboardSettings')\n    form.setAttribute('method', 'post')\n    submit.setAttribute('type', 'submit')\n    submit.setAttribute('value', 'Save')\n    keyboardDiv.appendChild(title)\n    keyboardDiv.appendChild(form)\n    this.element.appendChild(keyboardDiv)\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\n    form.appendChild(submit)\n    form.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\n      this.clear()\n    })\n  }\n\n  createPlayerMenu (): void {\n    let playerMenuId = 'playerMenu'\n    let playerLink = document.createElement('button')\n    let playerDiv = document.createElement('div')\n    let playerTitle = document.createElement('h4')\n    let playerForm = document.createElement('form')\n    let playerSubmit = document.createElement('input')\n    EventHandler.registerOnElement(\n      playerLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, playerMenuId)\n    )\n    playerLink.appendChild(document.createTextNode('Player'))\n    playerLink.classList.add('tabLink')\n    this.mainMenu.appendChild(playerLink)\n    playerDiv.setAttribute('id', playerMenuId)\n    playerDiv.classList.add('tabContent')\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\n    playerForm.setAttribute('id', 'playerSettings')\n    playerForm.setAttribute('method', 'post')\n    playerSubmit.setAttribute('type', 'submit')\n    playerSubmit.setAttribute('value', 'Save')\n    playerDiv.appendChild(playerTitle)\n    playerDiv.appendChild(playerForm)\n    this.element.appendChild(playerDiv)\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\n    playerForm.appendChild(playerSubmit)\n    playerForm.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\n      this.clear()\n    })\n  }\n\n  createAudioMenu (): void {\n    let audioMenuId = 'audioMenu'\n    let audioLink = document.createElement('button')\n    let audioDiv = document.createElement('div')\n    let div = document.createElement('div')\n    let audioTitle = document.createElement('h4')\n    let audioLabel = document.createElement('label')\n    let audioSlide = document.createElement('input')\n    EventHandler.registerOnElement(\n      audioLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, audioMenuId)\n    )\n    audioLink.classList.add('tabLink')\n    audioLink.appendChild(document.createTextNode('Audio'))\n    this.mainMenu.appendChild(audioLink)\n    audioDiv.setAttribute('id', audioMenuId)\n    audioDiv.classList.add('tabContent')\n    div.classList.add('row')\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\n    audioLabel.setAttribute('for', 'masterVolume')\n    audioSlide.setAttribute('id', 'masterVolume')\n    audioSlide.setAttribute('type', 'range')\n    audioSlide.setAttribute('min', '0')\n    audioSlide.setAttribute('max', '1')\n    audioSlide.setAttribute('step', '0.1')\n    audioSlide.addEventListener('change', event => this.audioManager.adjustMasterVolume(Number(audioSlide.value)))\n    div.appendChild(audioTitle)\n    div.appendChild(audioLabel)\n    div.appendChild(audioSlide)\n    audioDiv.appendChild(div)\n\n    let ambientDiv = document.createElement('div')\n    let ambientLabel = document.createElement('label')\n    let ambientSlide = document.createElement('input')\n    ambientDiv.classList.add('row')\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\n    ambientLabel.setAttribute('for', 'ambientVolume')\n    ambientSlide.setAttribute('id', 'ambientVolume')\n    ambientSlide.setAttribute('type', 'range')\n    ambientSlide.setAttribute('min', '0')\n    ambientSlide.setAttribute('max', '1')\n    ambientSlide.setAttribute('step', '0.1')\n    ambientSlide.addEventListener('change', event => this.audioManager.adjustAmbientVolume(Number(ambientSlide.value)))\n    ambientDiv.appendChild(ambientLabel)\n    ambientDiv.appendChild(ambientSlide)\n    audioDiv.appendChild(ambientDiv)\n\n    let effectsDiv = document.createElement('div')\n    let effectsLabel = document.createElement('label')\n    let effectsSlide = document.createElement('input')\n    effectsDiv.classList.add('row')\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\n    effectsLabel.setAttribute('for', 'effectsVolume')\n    effectsSlide.setAttribute('id', 'effectsVolume')\n    effectsSlide.setAttribute('type', 'range')\n    effectsSlide.setAttribute('min', '0')\n    effectsSlide.setAttribute('max', '1')\n    effectsSlide.setAttribute('step', '0.1')\n    effectsSlide.addEventListener('change', event => this.audioManager.adjustEffectsVolume(Number(effectsSlide.value)))\n    effectsDiv.appendChild(effectsLabel)\n    effectsDiv.appendChild(effectsSlide)\n    audioDiv.appendChild(effectsDiv)\n    this.element.appendChild(audioDiv)\n  }\n\n  init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu()\n    this.createPlayerMenu()\n    this.createAudioMenu()\n  }\n\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  addPlayerSettingEntry (setting, element): void {\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    let row = document.createElement('div')\n    label.setAttribute('for', setting)\n    label.appendChild(document.createTextNode(setting + ':'))\n    input.setAttribute('id', setting)\n    input.setAttribute('type', 'number')\n    input.setAttribute('name', setting)\n    input.setAttribute('value', this.settings.player[setting])\n    row.classList.add('row')\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  addEntry (setting, element): void {\n    let row = document.createElement('div')\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', this.settings.keyBoard[setting])\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\n    input.setAttribute('id', this.settings.keyBoard[setting])\n    input.setAttribute('type', 'text')\n    input.setAttribute('name', this.settings.keyBoard[setting])\n    input.setAttribute('value', setting)\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  toggleShow (): void {\n    if (this.showing) {\n      this.element.style.display = 'none'\n      this.showing = false\n    } else {\n      this.element.style.display = 'block'\n      this.showing = true\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/SettingsMenu.ts"],"sourceRoot":""}