{"version":3,"sources":["webpack:///webpack/bootstrap d03cb31a25917ac2053d","webpack:///./src/lib/vector/Vector2.ts","webpack:///./src/game/interfaces/CollideAble.ts","webpack:///./src/client/InputManager.ts","webpack:///./src/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/client/graphics/2D/SpriteSheet.ts","webpack:///./src/client/audio/Sound.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/client/Settings.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/game/app.ts","webpack:///./src/game/SpaceGame.ts","webpack:///./src/game/entities/Background.ts","webpack:///./src/game/entities/Ship.ts","webpack:///./src/game/structures/Pool.ts","webpack:///./src/game/entities/Bullet.ts","webpack:///./src/game/entities/Enemy.ts","webpack:///./src/client/SettingsMenu.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","EntityType","Observable_1","Actions","InputManager","Observable","settings","super","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","handleTouchStart","handleTouchMove","handleTouchEnd","preventDefault","touchstartX","touchstartY","toucheMoveX","touchMoveY","thisInstance","evt","pageX","pageY","reset","changedTouches","length","SpriteSheet_1","Sound_1","Ajax_1","AssetType","AssetManager","cache","sprites","spriteSheets","audio","downloadCount","queue","initAudioContext","AudioContext","webkitAudioContext","audioContext","masterGain","createGain","effectsGain","ambientGain","gain","value","connect","destination","e","console","log","id","path","type","opts","push","item","callback","Ajax","create","method","url","responseType","response","decodeAudio","data","decodeAudioData","then","buffer","done","error","sprite","Image","src","spriteSheet","SpriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudioFromUrl","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","Sound","Vector2_1","CollideAble_1","HitBox","width","height","position","colliding","collidesWith","BOX","PLAYER","other","includes","toString","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","gainNode","playing","loop","source","createBufferSource","stop","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","_observers","_state","observer","filter","obs","update","observers","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","objects","nodes","node","clear","returnedObjects","getAllObjects","index","getIndex","findObjects","obj","Array","element","insert","split","splice","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","CollisionManager","quadTree","j","isCollideAbleWith","InputManager_1","Settings","w","UP","DOWN","a","LEFT","RIGHT","space","SHOOT","r","RESTART","player","maxVelocity","fireDelay","friction","acceleration","master","ambient","effects","keys","newKey","action","oldKey","findKey","EventHandler","events","listener","AssetManager_1","SpaceGame_1","Settings_1","SettingsMenu_1","EventHandler_1","assetManager","canvases","background","ship","main","inputManager","settingsMenu","SettingsMenu","queueDownload","BACKGROUND","PLAYER_BULLET","ENEMY","ENEMY_BULLET","MAIN_THEME","LASER","EXPLOSION_I","GAME_OVER","downloadAll","game","SpaceGame","gameOver","set","shoot","cancelShoot","registerOnElement","restart","toggleShow","togglePause","Background_1","Ship_1","Pool_1","QuadTree_1","CollisionManager_1","paused","getContext","backgroundContext","shipContext","mainContext","playerScore","Background","getSprite","shipStartX","shipStartY","Ship","Pool","enemyBulletPool","enemyPool","spawnWave","register","collisionManager","backgroundAudio","getSound","AUDIO_LOOP","play","spacer","innerHTML","pool","getPool","detectCollision","alive","draw","render","animReqID","requestAnimationFrame","style","display","gameOverAudio","cancelAnimationFrame","clearRect","clearAll","context","speed","canvasWidth","canvasHeight","drawImage","startPosition","velocity","counter","maxTop","laserSound","setVector","add","addVector","limit","fire","getTwo","Bullet_1","Enemy_1","maxSize","subPool","Enemy","Bullet","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","bulletPool","percentFire","chance","explosionSound","speedX","speedY","leftEdge","rightEdge","bottomEdge","scorePoints","random","showing","mainMenu","createElement","classList","appendChild","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","keyboardMenuId","keyboardLink","keyboardDiv","title","form","submit","openTab","createTextNode","setAttribute","setting","addEntry","setKey","playerMenuId","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","addPlayerSettingEntry","Number","audioMenuId","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row"],"mappings":"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","file":"multiverseInvaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d03cb31a25917ac2053d","export class Vector2 {\r\n  private _x: number\r\n  private _y: number\r\n\r\n  /**\r\n   * Default constructor. Sets x and y values.\r\n   *\r\n   * @param {number} x initial x value\r\n   * @param {number} y initial y value\r\n   */\r\n  constructor (x: number, y: number) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Static addVector method to combine two vectors into a new one.\r\n   *\r\n   * @param {Vector2} v1 first vector\r\n   * @param {Vector2} v2 second vector\r\n   * @returns {Vector2} combined vector\r\n   */\r\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\r\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\r\n  }\r\n\r\n  /**\r\n   * Subtract two vector from each other and put the result into a new vector.\r\n   *\r\n   * @param {Vector2} v1 first vector\r\n   * @param {Vector2} v2 second vector\r\n   * @returns {Vector2} resulting vector\r\n   */\r\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\r\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\r\n  }\r\n\r\n  /**\r\n   * Multiplies a vector with a scalar and returns the resulting vector.\r\n   *\r\n   * @param {Vector2} vector initial vector\r\n   * @param {number} scalar scalar to scale the vector\r\n   * @returns {Vector2} the resulting vector\r\n   */\r\n  static multiply (vector: Vector2, scalar: number): Vector2 {\r\n    return new Vector2(vector.x * scalar, vector.y * scalar)\r\n  }\r\n\r\n  /**\r\n   * Divides a vector by a scalar and returns the result in a new vector.\r\n   * Throws error if trying to divide by zero.\r\n   *\r\n   * @param {Vector2} vector vector to divide\r\n   * @param {number} scalar scalar used to divide vector\r\n   * @returns {Vector2} resulting vector\r\n   */\r\n  static divide (vector: Vector2, scalar: number): Vector2 {\r\n    if (scalar === 0) {\r\n      throw new Error('cannot divide vector by scalar with value \"0\"')\r\n    }\r\n    return new Vector2(vector.x / scalar, vector.y / scalar)\r\n  }\r\n\r\n  /**\r\n   * Set x value of this vector.\r\n   *\r\n   * @param {number} x new x value\r\n   */\r\n  set x (x: number) {\r\n    this._x = x\r\n  }\r\n\r\n  /**\r\n   * Set y value of this vector.\r\n   *\r\n   * @param {number} y new y value\r\n   */\r\n  set y (y: number) {\r\n    this._y = y\r\n  }\r\n\r\n  /**\r\n   * Getter for x value\r\n   * @returns {number} x value\r\n   */\r\n  get x (): number {\r\n    return this._x\r\n  }\r\n\r\n  /**\r\n   * Getter for y value\r\n   * @returns {number} y value\r\n   */\r\n  get y (): number {\r\n    return this._y\r\n  }\r\n\r\n  /**\r\n   * Set vector with both x and y values.\r\n   *\r\n   * @param {number} x new x value\r\n   * @param {number} y new y value\r\n   */\r\n  set (x: number, y: number): void {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Set vector location to another vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  setVector (vector: Vector2): void {\r\n    this.x = vector.x\r\n    this.y = vector.y\r\n  }\r\n\r\n  /**\r\n   * Add x and y to this vector.\r\n   *\r\n   * @param {number} x x value\r\n   * @param {number} y y value\r\n   */\r\n  add (x: number, y: number): void {\r\n    this.x += x\r\n    this.y += y\r\n  }\r\n\r\n  /**\r\n   * Add vector to this vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  addVector (vector: Vector2): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n  }\r\n\r\n  /**\r\n   * Subtraxt x and y from this vector.\r\n   *\r\n   * @param {number} x x value\r\n   * @param {number} y y value\r\n   */\r\n  subtract (x: number, y: number): void {\r\n    this.x -= x\r\n    this.y -= y\r\n  }\r\n\r\n  /**\r\n   * Subtract a vector from this vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  subtractVector (vector: Vector2): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n  }\r\n\r\n  /**\r\n   * Multiply this vector by scalar.\r\n   *\r\n   * @param scalar scalar to multiply the vector\r\n   */\r\n  multiply (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n  }\r\n\r\n  /**\r\n   * Divides this vector by a scalar.\r\n   * Throws error when trying to divide by zero.\r\n   *\r\n   * @param {number} scalar scalar used to divide this vector\r\n   */\r\n  divide (scalar: number): void {\r\n    if (scalar === 0) {\r\n      throw new Error('cannot divide vector by \"0\"')\r\n    }\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n  }\r\n\r\n  /**\r\n   * Get the magnitude / elementsCount of this vector.\r\n   *\r\n   * @returns {number} magnitude / elementsCount of this vector\r\n   */\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  }\r\n\r\n  /**\r\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\r\n   *\r\n   * @returns {Vector2}\r\n   */\r\n  negative (): Vector2 {\r\n    return new Vector2(-this.x, -this.y)\r\n  }\r\n\r\n  /**\r\n   * Normalize the vector.\r\n   */\r\n  normalize (): void {\r\n    let magnitude = this.mag()\r\n    if (magnitude !== 0) {\r\n      this.divide(magnitude)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Limit the vector to a maximum elementsCount.\r\n   *\r\n   * @param max maximum elementsCount\r\n   */\r\n  limit (max): void {\r\n    if (Math.floor(this.mag()) > max) {\r\n      this.normalize()\r\n      this.multiply(max)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the distance of this vector to another vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   * @returns {number} calculated distance\r\n   */\r\n  distanceTo (vector: Vector2): number {\r\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\r\n  }\r\n\r\n  /**\r\n   * Get the dot product between this vector and another vector.\r\n   *\r\n   * @param {Vector2} vector\r\n   * @returns {number} the dot product of this vector and the one passed as param.\r\n   */\r\n  dot (vector: Vector2): number {\r\n    return this.x * vector.x + this.y * vector.y\r\n  }\r\n\r\n  floor (): void {\r\n    this.x = Math.floor(this.x)\r\n    this.x = Math.floor(this.x)\r\n  }\r\n\r\n  /**\r\n   * Create a clone of this vector.\r\n   *\r\n   * @returns {Vector2} cloned vector\r\n   */\r\n  clone (): Vector2 {\r\n    return new Vector2(this.x, this.y)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/vector/Vector2.ts","export enum EntityType {\r\n  PLAYER = 'ship',\r\n  ENEMY = 'enmey',\r\n  ENEMY_BULLET = 'bulletEnemy',\r\n  PLAYER_BULLET = 'bullet',\r\n  BACKGROUND = 'background',\r\n  MAP = 'map',\r\n  GAME_OVER = 'gameOver',\r\n  LASER = 'laser',\r\n  MAIN_THEME = 'shockWave',\r\n  EXPLOSION_I = 'explosion1',\r\n  EXPLOSION_II = 'explosion2',\r\n  BOX = 'BOX'\r\n}\r\n\r\nexport interface CollideAble {\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/interfaces/CollideAble.ts","import { Observable } from '../lib/observer/Observable'\r\nimport { Settings } from './Settings'\r\n\r\nexport enum Actions {\r\n  UP = 'UP', DOWN = 'DOWN', LEFT = 'LEFT', RIGHT = 'RIGHT', SHOOT = 'SHOOT', RESTART = 'RESTART'\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class InputManager extends Observable {\r\n  inputMap\r\n  touches\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor (settings: Settings) {\r\n    super()\r\n    this.inputMap = settings.keyBoard\r\n    this.init()\r\n    this.initializeTouchHandler()\r\n    this.touches = {\r\n      start: [],\r\n      move: []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register pressed keys and notify observers.\r\n   */\r\n  init (): void {\r\n    window.addEventListener('keydown', event => {\r\n      let key = event.key !== ' ' ? event.key : 'space'\r\n      this.state[this.inputMap[key]] = true\r\n      this.notify()\r\n    })\r\n    window.addEventListener('keyup', event => {\r\n      let key = event.key !== ' ' ? event.key : 'space'\r\n      this.state[this.inputMap[key]] = false\r\n      this.notify()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Maps swipe directions to key press booleans.\r\n   * Allows touch controls on mobile.\r\n   */\r\n  initializeTouchHandler (): void {\r\n    // Register the event listeners\r\n    let button = document.getElementById('move')\r\n    let el = button ? button : window\r\n    el.addEventListener('touchstart', handleTouchStart, false)\r\n    el.addEventListener('touchmove', handleTouchMove, false)\r\n    el.addEventListener('touchend', handleTouchEnd, false)\r\n    el.addEventListener('contextmenu', event => {\r\n      event.preventDefault()\r\n      return false\r\n    })\r\n\r\n    let start = []\r\n    let move = []\r\n    let touchstartX = 0\r\n    let touchstartY = 0\r\n    let toucheMoveX = 0\r\n    let touchMoveY = 0\r\n    let thisInstance = this\r\n\r\n    function handleTouchStart (evt): void {\r\n      evt.preventDefault()\r\n      start = evt.touches\r\n      touchstartX = evt.touches[0].pageX\r\n      touchstartY = evt.touches[0].pageY\r\n    }\r\n\r\n    function handleTouchMove (evt): void {\r\n      thisInstance.reset()\r\n      evt.preventDefault()\r\n      move = evt.changedTouches\r\n      toucheMoveX = evt.touches[0].pageX\r\n      touchMoveY = evt.touches[0].pageY\r\n      for (let i = 0; i < evt.touches.length; i++) {\r\n        // Positive values equals left. Negative values equals right\r\n        if (move[i].pageX < start[i].pageX) {\r\n          thisInstance.state[thisInstance.inputMap['a']] = true\r\n        }\r\n        if (move[i].pageX > start[i].pageX) {\r\n          thisInstance.state[thisInstance.inputMap['d']] = true\r\n        }\r\n        if (move[i].pageY < start[i].pageY) {\r\n          thisInstance.state[thisInstance.inputMap['w']] = true\r\n        }\r\n        if (move[i].pageY > start[i].pageY) {\r\n          thisInstance.state[thisInstance.inputMap['s']] = true\r\n        }\r\n        thisInstance.notify()\r\n      }\r\n    }\r\n\r\n    function handleTouchEnd (evt): void {\r\n      evt.preventDefault()\r\n      thisInstance.reset()\r\n    }\r\n  }\r\n\r\n  shoot (): void {\r\n    this.state[this.inputMap['space']] = true\r\n  }\r\n\r\n  cancelShoot (): void {\r\n    this.state[this.inputMap['space']] = false\r\n  }\r\n\r\n  reset (): void {\r\n    this.state[this.inputMap['w']] = false\r\n    this.state[this.inputMap['a']] = false\r\n    this.state[this.inputMap['s']] = false\r\n    this.state[this.inputMap['d']] = false\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/InputManager.ts","import { EntityType } from '../game/interfaces/CollideAble'\r\nimport { SpriteSheet } from './graphics/2D/SpriteSheet'\r\nimport { Sound } from './audio/Sound'\r\nimport { Ajax } from '../lib/ajax/Ajax'\r\n\r\nexport enum AssetType {\r\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_LOOP = 'LOOP'\r\n}\r\n\r\nexport class AssetManager {\r\n  audioContext\r\n  cache\r\n  queue\r\n  downloadCount: number\r\n  masterGain: GainNode\r\n  effectsGain: GainNode\r\n  ambientGain: GainNode\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor () {\r\n    this.cache = {\r\n      sprites: {},\r\n      spriteSheets: {},\r\n      audio: {}\r\n    }\r\n    this.downloadCount = 0\r\n    this.queue = []\r\n    this.initAudioContext()\r\n  }\r\n\r\n  initAudioContext (): void {\r\n    try {\r\n      // Fix for browsers using prefixes\r\n      window.AudioContext = window.AudioContext || webkitAudioContext\r\n      this.audioContext = new AudioContext()\r\n      this.masterGain = this.audioContext.createGain()\r\n      this.effectsGain = this.audioContext.createGain()\r\n      this.ambientGain = this.audioContext.createGain()\r\n      this.masterGain.gain.value = 1\r\n      this.masterGain.connect(this.audioContext.destination)\r\n      this.effectsGain.connect(this.masterGain)\r\n      this.ambientGain.connect(this.masterGain)\r\n      this.ambientGain.gain.value = 1\r\n      this.effectsGain.gain.value = 1\r\n    } catch (e) {\r\n      console.log('Web Audio API is not supported in this browser')\r\n    }\r\n  }\r\n\r\n  adjustMasterVolume (value: number): void {\r\n    this.masterGain.gain.value = value\r\n  }\r\n\r\n  adjustAmbientVolume (value: number): void {\r\n    this.ambientGain.gain.value = value\r\n  }\r\n\r\n  adjustEffectsVolume (value: number): void {\r\n    this.effectsGain.gain.value = value\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  done (): boolean {\r\n    return this.downloadCount === this.queue.length\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {EntityType} id\r\n   * @param {string} path\r\n   * @param {AssetType} type\r\n   * @param {{}} opts\r\n   */\r\n  queueDownload (id: EntityType, path: string, type: AssetType, opts = null): void {\r\n    this.queue.push({\r\n      id: id,\r\n      path: path,\r\n      type: type,\r\n      opts: opts\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Build an AJAX Request to loadAudioFromUrl audio file into the buffer cache.\r\n   *\r\n   * @param item object with name of file and path to file\r\n   * @param callback function to execute on done\r\n   */\r\n  loadAudioFromUrl (item, callback): void {\r\n    Ajax.create({\r\n      method: 'GET',\r\n      url: item.path,\r\n      responseType: 'arraybuffer'\r\n    }, response => {\r\n      this.decodeAudio(response, item.id, callback)\r\n    })\r\n  }\r\n\r\n  decodeAudio (data, id, callback): void {\r\n    this.audioContext.decodeAudioData(data).then(\r\n      buffer => {\r\n        this.cache.audio[id] = buffer\r\n        this.downloadCount += 1\r\n        if (this.done()) {\r\n          callback()\r\n        }\r\n      },\r\n      error => { console.log('Error with decoding audio data' + error) }\r\n    )\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param callback\r\n   */\r\n  loadSprite (item, callback): void {\r\n    let sprite = new Image()\r\n    sprite.addEventListener('load', () => {\r\n      this.downloadCount++\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    })\r\n    sprite.src = item.path\r\n    this.cache.sprites[item.id] = sprite\r\n  }\r\n\r\n  /**\r\n   * Load sprites sheet.\r\n   *\r\n   * @param item sprite sheet info\r\n   * @param callback called upon downloading all\r\n   */\r\n  loadSpriteSheet (item, callback): void {\r\n    let spriteSheet = new Image()\r\n    spriteSheet.addEventListener('load', () => {\r\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\r\n      this.downloadCount += 1\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    })\r\n    spriteSheet.src = item.path\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param callback\r\n   */\r\n  downloadAll (callback): void {\r\n    this.queue.forEach(item => {\r\n      if (item.type === AssetType.AUDIO) {\r\n        this.loadAudioFromUrl(item, callback)\r\n      } else if (item.type === AssetType.SPRITE) {\r\n        this.loadSprite(item, callback)\r\n      } else if (item.type === AssetType.SPRITE_SHEET) {\r\n        this.loadSpriteSheet(item, callback)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Create an audio buffer source node from cached buffer.\r\n   * Send it to the destination of the audio context and play it.\r\n   *\r\n   * @param {EntityType} id file id\r\n   * @param {AssetType} type\r\n   */\r\n  getSound (id: EntityType, type: AssetType): Sound {\r\n    let gain\r\n    if (type === AssetType.AUDIO) {\r\n      gain = this.effectsGain\r\n    } else {\r\n      gain = this.ambientGain\r\n    }\r\n    return new Sound(this.audioContext, gain, this.cache.audio[id])\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} id\r\n   * @returns {EntityType}\r\n   */\r\n  getSprite (id: EntityType): any {\r\n    return this.cache.sprites[id]\r\n  }\r\n\r\n  /**\r\n   * Get sprite sheet by name.\r\n   *\r\n   * @param {EntityType} id\r\n   * @returns {SpriteSheet}\r\n   */\r\n  getSpriteSheet (id: EntityType): SpriteSheet {\r\n    return this.cache.spriteSheets[id]\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/AssetManager.ts","import { Vector2 } from '../vector/Vector2'\r\nimport { CollideAble, EntityType } from '../../game/interfaces/CollideAble'\r\n\r\nexport class HitBox implements CollideAble{\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n  position: Vector2\r\n  width: number\r\n  height: number\r\n\r\n  /**\r\n   * Initializes position and dimension.\r\n   * @param {number} x position x\r\n   * @param {number} y position y\r\n   * @param {number} width dimension width\r\n   * @param {number} height dimension height\r\n   */\r\n  constructor (x, y, width, height) {\r\n    this.position = new Vector2(x, y)\r\n    this.width = width\r\n    this.height = height\r\n    this.colliding = false\r\n    this.collidesWith = []\r\n    this.type = EntityType.BOX\r\n    this.collidesWith.push(EntityType.PLAYER)\r\n  }\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/HitBox.ts","/**\r\n * Sprite sheet definition.\r\n */\r\nexport class SpriteSheet {\r\n  private _image\r\n  private _frameWidth\r\n  private _frameHeight\r\n  private _framesPerRow\r\n\r\n  /**\r\n   * Constructor. Sets frame dimensions and calculates number of frames.\r\n   *\r\n   * @param image\r\n   * @param frameWidth\r\n   * @param frameHeight\r\n   */\r\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\r\n    this._image = image\r\n    this._frameWidth = frameWidth\r\n    this._frameHeight = frameHeight\r\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Image}\r\n   */\r\n  get image (): HTMLImageElement {\r\n    return this._image\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Image} image\r\n   */\r\n  set image (image: HTMLImageElement) {\r\n    if (!(image instanceof Image)) {\r\n      throw new Error('Param tileSetImage must be of type Image!')\r\n    }\r\n    this._image = image\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get frameWidth (): number {\r\n    return this._frameWidth\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} frameWidth\r\n   */\r\n  set frameWidth (frameWidth: number) {\r\n    this._frameWidth = frameWidth\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get frameHeight (): number {\r\n    return this._frameHeight\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} frameHeight\r\n   */\r\n  set frameHeight (frameHeight: number) {\r\n    this._frameHeight = frameHeight\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get framesPerRow (): number {\r\n    return this._framesPerRow\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} framesPerRow\r\n   */\r\n  set framesPerRow (framesPerRow: number) {\r\n    this._framesPerRow = framesPerRow\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/graphics/2D/SpriteSheet.ts","export class Sound {\r\n  audioContext: AudioContext\r\n  source: AudioBufferSourceNode\r\n  gainNode: GainNode\r\n  masterGain: GainNode\r\n  buffer\r\n  playing: boolean\r\n\r\n  constructor (audioContext, masterGain: GainNode, buffer) {\r\n    this.audioContext = audioContext\r\n    this.masterGain = masterGain\r\n    this.buffer = buffer\r\n    this.gainNode = this.audioContext.createGain()\r\n    this.gainNode.gain.value = 0.2\r\n    this.gainNode.connect(this.masterGain)\r\n    this.playing = false\r\n  }\r\n\r\n  play (loop = false): void {\r\n    this.source = this.audioContext.createBufferSource()\r\n    this.source.buffer = this.buffer\r\n    this.source.loop = loop\r\n    this.source.connect(this.gainNode)\r\n    this.source.start(0)\r\n  }\r\n\r\n  stop (): void {\r\n    this.source.stop(0)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/audio/Sound.ts","export class Ajax {\r\n  private static defaults = {\r\n    url: '',\r\n    method: 'GET',\r\n    contentType: 'text/html',\r\n    async: true,\r\n    data: null\r\n  }\r\n\r\n  /**\r\n   * Create and send an XML-HTTP request.\r\n   * Requires an options object.\r\n   *\r\n   * @param opts Possible option properties:\r\n   * url = url to send the request to.\r\n   * method = request method. GET, POST, PUT, DELETE.\r\n   * contentType = specify the content type of the request.\r\n   * async = boolean flag for async calls. Defaults to true.\r\n   * data = request body.\r\n   * @param callback success callback function\r\n   */\r\n  public static create (opts, callback): void {\r\n    let xHttp = new XMLHttpRequest()\r\n    xHttp.addEventListener('load', () => {\r\n      callback(xHttp.response)\r\n    })\r\n    xHttp.open(\r\n      opts.method ? opts.method : Ajax.defaults.method,\r\n      opts.url ? opts.url : Ajax.defaults.url,\r\n      opts.async ? opts.async : Ajax.defaults.async\r\n    )\r\n    if (opts.hasOwnProperty('contentType')) {\r\n      xHttp.setRequestHeader(\r\n        'Content-Type',\r\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\r\n      )\r\n    }\r\n    if (opts.hasOwnProperty('responseType')) {\r\n      xHttp.responseType = opts.responseType\r\n    }\r\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\r\n      opts.data = JSON.stringify(opts.data)\r\n    }\r\n    xHttp.send(opts.data ? opts.data : null)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ajax/Ajax.ts","import { Observer } from './Observer'\r\n\r\n/**\r\n *\r\n */\r\nexport class Observable {\r\n  private _observers: Observer[]\r\n  private _state: any\r\n\r\n  constructor () {\r\n    this._observers = []\r\n    this._state = {}\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Observer} observer\r\n   */\r\n  register (observer: Observer): void {\r\n    this._observers.push(observer)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Observer} observer\r\n   */\r\n  unRegister (observer: Observer): void {\r\n    this._observers = this._observers.filter(obs => {\r\n      return obs !== observer\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  notify (): void {\r\n    this._observers.forEach(observer => {\r\n      observer.update(this._state)\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Observer[]}\r\n   */\r\n  get observers (): Observer[] {\r\n    return this._observers\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Observer[]} observers\r\n   */\r\n  set observers (observers: Observer[]) {\r\n    this._observers = observers\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {any}\r\n   */\r\n  get state (): any {\r\n    return this._state\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {any} state\r\n   */\r\n  set state (state: any) {\r\n    this._state = state\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import { HitBox } from './HitBox'\r\nimport { Drawable } from '../../game/interfaces/Drawable'\r\n\r\n/**\r\n *\r\n */\r\nexport class QuadTree {\r\n  level: number\r\n  maxObjects: number\r\n  maxLevels: number\r\n  hitBox: HitBox\r\n  objects: Drawable[]\r\n  nodes: QuadTree[]\r\n\r\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param {HitBox} hitBox\r\n   * @param {number} level\r\n   */\r\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\r\n    this.level = level\r\n    this.maxObjects = 10\r\n    this.maxLevels = 5\r\n    this.hitBox = hitBox\r\n    this.objects = []\r\n    this.nodes = []\r\n  }\r\n\r\n  /**\r\n   * Clears the QuadTree and its sub nodes from all game objects.\r\n   */\r\n  clear (): void {\r\n    this.objects = []\r\n    this.nodes.forEach(node => node.clear())\r\n    this.nodes = []\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param returnedObjects\r\n   * @returns {any}\r\n   */\r\n  getAllObjects (returnedObjects) {\r\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\r\n    this.objects.forEach(object => returnedObjects.push(object))\r\n    return returnedObjects\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param returnedObjects\r\n   * @param object\r\n   * @returns {any}\r\n   */\r\n  findObjects (returnedObjects, object) {\r\n    if (typeof object === 'undefined') {\r\n      console.log('UNDEFINED OBJECT')\r\n      return\r\n    }\r\n    let index = this.getIndex(object)\r\n    if (index !== -1 && this.nodes.length) {\r\n      this.nodes[index].findObjects(returnedObjects, object)\r\n    }\r\n    this.objects.forEach(obj => returnedObjects.push(obj))\r\n    return returnedObjects\r\n  }\r\n\r\n  /**\r\n   * Insert an object into the QuadTree.\r\n   *\r\n   * @param object\r\n   */\r\n  insert (object): void {\r\n    if (typeof object === 'undefined') {\r\n      return\r\n    }\r\n    if (object instanceof Array) {\r\n      object.forEach(element => this.insert(element))\r\n      return\r\n    }\r\n    if (this.nodes.length > 0) {\r\n      let index = this.getIndex(object)\r\n      // Only addVector the object to a sub node if it can fit completely within one\r\n      if (index !== -1) {\r\n        this.nodes[index].insert(object)\r\n        return\r\n      }\r\n    }\r\n    this.objects.push(object)\r\n\r\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\r\n      if (typeof this.nodes[0] === 'undefined') {\r\n        this.split()\r\n      }\r\n      let i = 0\r\n      while (i < this.objects.length) {\r\n        let index = this.getIndex(this.objects[i])\r\n        if (index !== -1) {\r\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\r\n        } else {\r\n          i++\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the index of an object from the QuadTree.\r\n   *\r\n   * @param object\r\n   * @returns {number}\r\n   */\r\n  getIndex (object): number {\r\n    let index = -1\r\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\r\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\r\n    // Object can fit completely within the top quadrant\r\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\r\n    // Object can fit completely within the bottom quadrant\r\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\r\n    // Object can fit completely within the left quadrants\r\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\r\n      if (topQuadrant) {\r\n        index = 1\r\n      } else if (bottomQuadrant) {\r\n        index = 2\r\n      }\r\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\r\n      if (topQuadrant) {\r\n        index = 0\r\n      } else if (bottomQuadrant) {\r\n        index = 3\r\n      }\r\n    }\r\n    return index\r\n  }\r\n\r\n  /**\r\n   * Split the tree on demand.\r\n   */\r\n  split (): void {\r\n    let subWidth = (this.hitBox.width / 2) | 0\r\n    let subHeight = (this.hitBox.height / 2) | 0\r\n    this.nodes[0] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\r\n    this.nodes[1] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\r\n    this.nodes[2] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\r\n    this.nodes[3] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/QuadTree.ts","export class CollisionManager {\r\n  quadTree\r\n\r\n  constructor (quadTree) {\r\n    this.quadTree = quadTree\r\n  }\r\n\r\n  detectCollision (): void {\r\n    let objects = []\r\n    this.quadTree.getAllObjects(objects)\r\n\r\n    for (let i = 0; i < objects.length; i++) {\r\n      let obj = []\r\n      this.quadTree.findObjects(obj, objects[i])\r\n\r\n      for (let j = 0; j < obj.length; j++) {\r\n        // DETECT COLLISION ALGORITHM\r\n        if (objects[i].isCollideAbleWith(obj[j]) &&\r\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\r\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\r\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\r\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\r\n          objects[i].colliding = true\r\n          obj[j].colliding = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/CollisionManager.ts","import { Actions } from './InputManager'\r\n\r\nexport class Settings {\r\n  keyBoard\r\n  player\r\n  audio\r\n\r\n  constructor () {\r\n    this.keyBoard = {\r\n      'w': Actions.UP,\r\n      's': Actions.DOWN,\r\n      'a': Actions.LEFT,\r\n      'd': Actions.RIGHT,\r\n      'space': Actions.SHOOT,\r\n      'r': Actions.RESTART\r\n    }\r\n    this.player = {\r\n      maxVelocity: 15,\r\n      fireDelay: 15,\r\n      friction: 0.7,\r\n      acceleration: 3\r\n    }\r\n    this.audio = {\r\n      master: 1,\r\n      ambient: 1,\r\n      effects: 1\r\n    }\r\n  }\r\n\r\n  findKey (value): string {\r\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\r\n  }\r\n\r\n  setKey (newKey, action: Actions): void {\r\n    let oldKey = this.findKey(action)\r\n    if (newKey !== oldKey) {\r\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\r\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\r\n      delete this.keyBoard[oldKey]\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Settings.ts","export class EventHandler {\r\n  /**\r\n   * Register multiple events with the same event listener on one element.\r\n   *\r\n   * @param {HTMLElement} element html element to add the events to\r\n   * @param {Array<string>} events the events to be registered\r\n   * @param {EventListener} listener the event listener function\r\n   */\r\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener) {\r\n    events.forEach(event => element.addEventListener(event, listener))\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/event/EventHandler.ts","import { AssetManager, AssetType } from '../client/AssetManager'\r\nimport { SpaceGame } from './SpaceGame'\r\nimport { InputManager } from '../client/InputManager'\r\nimport { Settings } from '../client/Settings'\r\nimport { SettingsMenu } from '../client/SettingsMenu'\r\nimport { EntityType } from './interfaces/CollideAble'\r\nimport { EventHandler } from '../lib/event/EventHandler'\r\n\r\nconst assetManager = new AssetManager()\r\nconst canvases = {\r\n  background: document.getElementById('background') as HTMLCanvasElement,\r\n  ship: document.getElementById('ship') as HTMLCanvasElement,\r\n  main: document.getElementById('main') as HTMLCanvasElement\r\n}\r\nconst settings = new Settings()\r\nconst inputManager = new InputManager(settings)\r\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager)\r\nassetManager.queueDownload(EntityType.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\r\nassetManager.queueDownload(EntityType.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\r\nassetManager.queueDownload(EntityType.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\r\nassetManager.queueDownload(EntityType.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\r\nassetManager.downloadAll(() => {\r\n  const game = new SpaceGame(assetManager, inputManager, settings, canvases)\r\n  settingsMenu.init()\r\n  let gameOver = document.getElementById('game-over')\r\n  let set = document.getElementById('settings')\r\n  let shoot = document.getElementById('shoot')\r\n  let events = ['click', 'touchstart']\r\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\r\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\r\n  shoot.addEventListener('contextmenu', event => {\r\n    event.preventDefault()\r\n    return false\r\n  })\r\n  EventHandler.registerOnElement(gameOver, events, () => game.restart())\r\n  EventHandler.registerOnElement(set, events, () => {\r\n    settingsMenu.toggleShow()\r\n    game.togglePause()\r\n  })\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/app.ts","import { Background } from './entities/Background'\r\nimport { AssetManager, AssetType } from '../client/AssetManager'\r\nimport { Actions, InputManager } from '../client/InputManager'\r\nimport { Ship } from './entities/Ship'\r\nimport { Pool } from './structures/Pool'\r\nimport { QuadTree } from '../lib/collision/QuadTree'\r\nimport { HitBox } from '../lib/collision/HitBox'\r\nimport { Settings } from '../client/Settings'\r\nimport { EntityType } from './interfaces/CollideAble'\r\nimport { CollisionManager } from '../lib/collision/CollisionManager'\r\nimport { Sound } from '../client/audio/Sound'\r\nimport { Observer } from '../lib/observer/Observer'\r\nimport { IGame } from '../lib/interfaces/IGame'\r\n\r\n/**\r\n *\r\n */\r\nexport class SpaceGame implements Observer {\r\n  background: Background\r\n  ship: Ship\r\n  enemyPool: Pool\r\n  enemyBulletPool: Pool\r\n  backgroundContext\r\n  shipContext\r\n  mainContext\r\n  playing: boolean\r\n  window\r\n  assetManager: AssetManager\r\n  inputManager: InputManager\r\n  collisionManager: CollisionManager\r\n  settings: Settings\r\n  quadTree: QuadTree\r\n  playerScore: number\r\n  shipStartX: number\r\n  shipStartY: number\r\n  paused: boolean\r\n  canvases\r\n  backgroundAudio: Sound\r\n  gameOverAudio: Sound\r\n  animReqID\r\n\r\n  /**\r\n   *\r\n   * @param {AssetManager} assetManager\r\n   * @param {InputManager} inputManager\r\n   * @param {Settings} settings\r\n   * @param canvases\r\n   */\r\n  constructor (assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\r\n    this.playing = false\r\n    this.paused = false\r\n    this.window = window\r\n    this.assetManager = assetManager\r\n    this.inputManager = inputManager\r\n    this.settings = settings\r\n    this.canvases = canvases\r\n\r\n    if (this.canvases.background.getContext) {\r\n      this.backgroundContext = this.canvases.background.getContext('2d')\r\n      this.shipContext = this.canvases.ship.getContext('2d')\r\n      this.mainContext = this.canvases.main.getContext('2d')\r\n      this.playerScore = 0\r\n      this.background = new Background(\r\n        0,\r\n        0,\r\n        this.canvases.background.width,\r\n        this.canvases.background.height,\r\n        this.backgroundContext,\r\n        this.assetManager.getSprite(EntityType.BACKGROUND)\r\n      )\r\n      this.shipStartX = this.canvases.ship.width / 2 - assetManager.getSprite(EntityType.PLAYER).width\r\n      this.shipStartY = this.canvases.ship.height / 4 * 3 + assetManager.getSprite(EntityType.PLAYER).height * 2\r\n      this.ship = new Ship(\r\n        this.shipStartX,\r\n        this.shipStartY,\r\n        assetManager.getSprite(EntityType.PLAYER).width,\r\n        assetManager.getSprite(EntityType.PLAYER).height,\r\n        this.canvases.ship.width,\r\n        this.canvases.ship.height,\r\n        this.shipContext,\r\n        assetManager,\r\n        new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 80, EntityType.PLAYER_BULLET),\r\n        settings.player\r\n      )\r\n      this.enemyBulletPool = new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 50, EntityType.ENEMY_BULLET)\r\n      this.enemyPool = new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 30, EntityType.ENEMY, this.enemyBulletPool, this)\r\n      this.spawnWave()\r\n      inputManager.register(this.ship)\r\n      inputManager.register(this)\r\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvases.main.width, this.canvases.main.height))\r\n      this.collisionManager = new CollisionManager(this.quadTree)\r\n      this.backgroundAudio = this.assetManager.getSound(EntityType.MAIN_THEME, AssetType.AUDIO_LOOP)\r\n      this.backgroundAudio.play(true)\r\n      this.start()\r\n    }\r\n  }\r\n\r\n  togglePause (): void {\r\n    this.paused = !this.paused\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  spawnWave (): void {\r\n    const height = this.assetManager.getSprite(EntityType.ENEMY).height\r\n    const width = this.assetManager.getSprite(EntityType.ENEMY).width\r\n    let x = 200\r\n    let y = -height\r\n    const spacer = y * 1.5\r\n    for (let i = 1; i <= 21; i++) {\r\n      this.enemyPool.get(x, y, 4)\r\n      x += width + 25\r\n      if (i % 7 === 0) {\r\n        x = 200\r\n        y += spacer\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  render (): void {\r\n    if (this.playing) {\r\n      if (!this.paused) {\r\n        document.getElementById('score').innerHTML = this.playerScore.toString()\r\n        this.quadTree.clear()\r\n        this.quadTree.insert(this.ship)\r\n        this.quadTree.insert(this.ship.pool.getPool())\r\n        this.quadTree.insert(this.enemyPool.getPool())\r\n        this.quadTree.insert(this.enemyBulletPool.getPool())\r\n        this.collisionManager.detectCollision()\r\n\r\n        // Spawn new wave if all enemies are destroyed.\r\n        if (this.enemyPool.getPool().length === 0) {\r\n          this.spawnWave()\r\n        }\r\n\r\n        if (this.ship.alive()) {\r\n          this.background.draw()\r\n          this.ship.move()\r\n          this.ship.pool.render()\r\n          this.enemyPool.render()\r\n          this.enemyBulletPool.render()\r\n        } else {\r\n          this.playing = false\r\n          this.gameOver()\r\n        }\r\n      }\r\n      this.animReqID = window.requestAnimationFrame(() => this.render())\r\n    }\r\n  }\r\n\r\n  scorePoints (): void {\r\n    this.playerScore += 10\r\n  }\r\n\r\n  update (state: any): void {\r\n    if (state[Actions.RESTART]) {\r\n      this.restart()\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  start (): void {\r\n    this.playing = true\r\n    this.render()\r\n    this.ship.draw()\r\n  }\r\n\r\n  gameOver (): void {\r\n    this.backgroundAudio.stop()\r\n    document.getElementById('game-over').style.display = 'block'\r\n    this.gameOverAudio = this.assetManager.getSound(EntityType.GAME_OVER, AssetType.AUDIO_LOOP)\r\n    this.gameOverAudio.play(true)\r\n  }\r\n\r\n  restart (): void {\r\n    if (!this.playing) {\r\n      this.gameOverAudio.stop()\r\n      this.backgroundAudio.play(true)\r\n      document.getElementById('game-over').style.display = 'none'\r\n    } else {\r\n      window.cancelAnimationFrame(this.animReqID)\r\n      this.playing = false\r\n      this.backgroundAudio.stop()\r\n      this.backgroundAudio.play(true)\r\n    }\r\n    this.backgroundContext.clearRect(0, 0, this.canvases.background.width, this.canvases.background.height)\r\n    this.shipContext.clearRect(0, 0, this.canvases.ship.width, this.canvases.ship.height)\r\n    this.mainContext.clearRect(0, 0, this.canvases.main.width, this.canvases.main.height)\r\n    this.quadTree.clear()\r\n    this.background.reset()\r\n    this.playerScore = 0\r\n    this.ship.reset()\r\n    this.enemyBulletPool.clearAll()\r\n    this.enemyPool.clearAll()\r\n    this.ship.pool.clearAll()\r\n    this.start()\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/SpaceGame.ts","import { Drawable } from '../interfaces/Drawable'\r\nimport { Vector2 } from '../../lib/vector/Vector2'\r\nimport { EntityType } from '../interfaces/CollideAble'\r\n\r\nexport class Background implements Drawable {\r\n  position: Vector2\r\n  speed: number\r\n  width: number\r\n  height: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  context: any\r\n  type: EntityType\r\n  sprite: any\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {any} context\r\n   * @param {any} sprite\r\n   */\r\n  constructor (x: number, y: number, width: number, height: number, context: any, sprite: any) {\r\n    this.position = new Vector2(x, y)\r\n    this.speed = 1\r\n    this.width = width\r\n    this.height = height\r\n    this.canvasWidth = width\r\n    this.canvasHeight = height\r\n    this.context = context\r\n    this.sprite = sprite\r\n    this.type = EntityType.BACKGROUND\r\n  }\r\n\r\n  reset (): void {\r\n    this.position.set(0, 0)\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  draw (): void {\r\n    this.position.y += this.speed\r\n    this.context.drawImage(this.sprite, this.position.x, this.position.y)\r\n    this.context.drawImage(this.sprite, this.position.x, this.position.y - this.height)\r\n\r\n    if (this.position.y >= this.height) {\r\n      this.position.y = 0\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Background.ts","import { Drawable } from '../interfaces/Drawable'\r\nimport { Vector2 } from '../../lib/vector/Vector2'\r\nimport { Pool } from '../structures/Pool'\r\nimport { Observer } from '../../lib/observer/Observer'\r\nimport { CollideAble, EntityType } from '../interfaces/CollideAble'\r\nimport { Actions } from '../../client/InputManager'\r\nimport { AssetManager, AssetType } from '../../client/AssetManager'\r\nimport { Sound } from '../../client/audio/Sound'\r\n\r\n/**\r\n *\r\n */\r\nexport class Ship implements Drawable, Observer, CollideAble {\r\n  position: Vector2\r\n  speed: number\r\n  acceleration: Vector2\r\n  width: number\r\n  height: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  context: any\r\n  sprite: any\r\n  pool: Pool\r\n  counter: number\r\n  collidesWith\r\n  type: EntityType\r\n  colliding: boolean\r\n  velocity: Vector2\r\n  state\r\n  maxTop: number\r\n  startPosition\r\n  settings\r\n  laserSound: Sound\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {number} canvasWidth\r\n   * @param {number} canvasHeight\r\n   * @param context\r\n   * @param {AssetManager} assetManager\r\n   * @param {Pool} pool\r\n   * @param settings\r\n   */\r\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, context: any, assetManager: AssetManager, pool: Pool, settings) {\r\n    this.position = new Vector2(x, y)\r\n    this.startPosition = new Vector2(x, y)\r\n    this.acceleration = new Vector2(0, 0)\r\n    this.velocity = new Vector2(0, 0)\r\n    this.width = width\r\n    this.height = height\r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.context = context\r\n    this.sprite = assetManager.getSprite(EntityType.PLAYER)\r\n    this.type = EntityType.PLAYER\r\n    this.pool = pool\r\n    this.counter = 0\r\n    this.collidesWith = []\r\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\r\n    this.colliding = false\r\n    this.state = {}\r\n    this.settings = settings\r\n    this.maxTop = Math.floor(this.canvasHeight / 4 * 3)\r\n    this.laserSound = assetManager.getSound(EntityType.LASER, AssetType.AUDIO)\r\n  }\r\n\r\n  reset (): void {\r\n    this.position.setVector(this.startPosition)\r\n    this.velocity.set(0, 0)\r\n    this.colliding = false\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  move (): void {\r\n    if (!this.colliding) {\r\n      this.counter++\r\n      this.context.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.width, this.height)\r\n      this.acceleration.set(0, 0)\r\n      if (this.state[Actions.LEFT]) {\r\n        this.acceleration.add(-this.settings.acceleration, 0)\r\n      }\r\n      if (this.state[Actions.RIGHT]) {\r\n        this.acceleration.add(this.settings.acceleration, 0)\r\n      }\r\n      if (this.state[Actions.UP]) {\r\n        this.acceleration.add(0, -this.settings.acceleration)\r\n      }\r\n      if (this.state[Actions.DOWN]) {\r\n        this.acceleration.add(0, this.settings.acceleration)\r\n      }\r\n      this.velocity.multiply(this.settings.friction)\r\n      this.velocity.addVector(this.acceleration)\r\n      this.velocity.limit(this.settings.maxVelocity)\r\n      this.position.addVector(this.velocity)\r\n      if (this.position.x <= 0) {\r\n        this.position.x = 0\r\n        this.velocity.x += -1\r\n      }\r\n      if (this.position.x >= this.canvasWidth - this.width) {\r\n        this.position.x = this.canvasWidth - this.width\r\n      }\r\n      if (this.position.y <= this.maxTop) {\r\n        this.position.y = this.maxTop\r\n      }\r\n      if (this.position.y >= this.canvasHeight - this.height) {\r\n        this.position.y = this.canvasHeight - this.height\r\n      }\r\n\r\n      // Finish by redrawing the ship\r\n      this.draw()\r\n\r\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.fireDelay && !this.colliding) {\r\n        this.fire()\r\n        this.counter = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  alive (): boolean {\r\n    return !this.colliding\r\n  }\r\n\r\n  draw (): void {\r\n    this.context.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\r\n  }\r\n\r\n  update (state: any): void {\r\n    this.state = state\r\n  }\r\n\r\n  fire (): void {\r\n    this.pool.getTwo(\r\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 6,\r\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 6\r\n    )\r\n    this.laserSound.play()\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CollideAble} other\r\n   * @returns {boolean}\r\n   */\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Ship.ts","import { AssetManager } from '../../client/AssetManager'\r\nimport { Bullet } from '../entities/Bullet'\r\nimport { Enemy } from '../entities/Enemy'\r\nimport { SpaceGame } from '../SpaceGame'\r\nimport { EntityType } from '../interfaces/CollideAble'\r\nimport { Drawable } from '../interfaces/Drawable'\r\n\r\n/**\r\n *\r\n */\r\nexport class Pool {\r\n  assetManager: AssetManager\r\n  context: any\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  maxSize: number\r\n  type: EntityType\r\n  pool: any[]\r\n  subPool: Pool\r\n  game: SpaceGame\r\n\r\n  /**\r\n   *\r\n   * @param {AssetManager} assetManager\r\n   * @param {a} context\r\n   * @param {number} canvasWidth\r\n   * @param {number} canvasHeight\r\n   * @param {number} maxSize\r\n   * @param {string} type\r\n   * @param {Pool} pool\r\n   * @param {SpaceGame} game\r\n   */\r\n  constructor (assetManager: AssetManager, context: any, canvasWidth: number, canvasHeight: number, maxSize: number, type: EntityType, pool: Pool = null, game: SpaceGame = null) {\r\n    this.assetManager = assetManager\r\n    this.context = context\r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.maxSize = maxSize\r\n    this.type = type\r\n    this.pool = []\r\n    this.subPool = pool\r\n    this.game = game\r\n    this.init()\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  init (): void {\r\n    if (this.type === EntityType.ENEMY) {\r\n      let sprite = this.assetManager.getSprite(this.type)\r\n      for (let i = 0; i < this.maxSize; i++) {\r\n        this.pool[i] = new Enemy(\r\n          0,\r\n          0,\r\n          sprite.width,\r\n          sprite.height,\r\n          this.canvasWidth,\r\n          this.canvasHeight,\r\n          0,\r\n          this.context,\r\n          sprite,\r\n          this.type,\r\n          this.subPool,\r\n          this.game\r\n        )\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.maxSize; i++) {\r\n        let sprite = this.assetManager.getSprite(this.type)\r\n        this.pool[i] = new Bullet(\r\n          0,\r\n          0,\r\n          sprite.width,\r\n          sprite.height,\r\n          this.canvasWidth,\r\n          this.canvasHeight,\r\n          0,\r\n          this.context,\r\n          sprite,\r\n          this.type\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} speed\r\n   */\r\n  get (x: number, y: number, speed: number): void {\r\n    let lastElement = this.pool[this.maxSize - 1]\r\n    if (!lastElement.alive) {\r\n      lastElement.spawn(x, y, speed)\r\n      this.pool.unshift(this.pool.pop())\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} speed1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} speed2\r\n   */\r\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\r\n    if (!this.pool[this.maxSize - 1].alive &&\r\n      !this.pool[this.maxSize - 2].alive) {\r\n      this.get(x1, y1, speed1)\r\n      this.get(x2, y2, speed2)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  render (): void {\r\n    for (let i = 0; i < this.pool.length; i++) {\r\n      // Only draw until we find a bullet that is not alive\r\n      if (this.pool[i].alive) {\r\n        if (this.pool[i].draw()) {\r\n          this.pool[i].clear()\r\n          this.pool.push((this.pool.splice(i, 1))[0])\r\n        }\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  clearAll (): void {\r\n    this.pool.forEach(object => object.clear())\r\n  }\r\n\r\n  getPool (): Drawable[] {\r\n    let objects = []\r\n    this.pool.forEach(object => {\r\n      if (object.alive) {\r\n        objects.push(object)\r\n      }\r\n    })\r\n    return objects\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/structures/Pool.ts","import { Drawable } from '../interfaces/Drawable'\r\nimport { Vector2 } from '../../lib/vector/Vector2'\r\nimport { CollideAble, EntityType } from '../interfaces/CollideAble'\r\n\r\n/**\r\n *\r\n */\r\nexport class Bullet implements Drawable, CollideAble {\r\n  position: Vector2\r\n  speed: number\r\n  width: number\r\n  height: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  context: any\r\n  sprite: any\r\n  alive: boolean\r\n  collidesWith\r\n  type: EntityType\r\n  colliding: boolean\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {number} canvasWidth\r\n   * @param {number} canvasHeight\r\n   * @param {number} speed\r\n   * @param {any} context\r\n   * @param {any} sprite\r\n   * @param {string} type\r\n   */\r\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context: any, sprite: any, type: EntityType) {\r\n    this.position = new Vector2(x, y)\r\n    this.speed = speed\r\n    this.width = width\r\n    this.height = height\r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.context = context\r\n    this.sprite = sprite\r\n    this.alive = false\r\n    this.type = type\r\n    this.colliding = false\r\n    this.collidesWith = []\r\n    if (this.type === EntityType.PLAYER_BULLET) {\r\n      this.collidesWith.push(EntityType.ENEMY)\r\n    } else if (this.type === EntityType.ENEMY_BULLET) {\r\n      this.collidesWith.push(EntityType.PLAYER)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} speed\r\n   */\r\n  spawn (x: number, y: number, speed: number): void {\r\n    this.position.set(x, y)\r\n    this.speed = speed\r\n    this.alive = true\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  draw () {\r\n    this.context.clearRect(this.position.x - 1, this.position.y - 1, this.width + 1, this.height + 1)\r\n    this.position.y -= this.speed\r\n    if (this.colliding) {\r\n      return true\r\n    } else if (this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.height) {\r\n      return true\r\n    } else if (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.canvasHeight) {\r\n      return true\r\n    } else {\r\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\r\n      return false\r\n    }\r\n  }\r\n\r\n  clear (): void {\r\n    this.position.set(0, 0)\r\n    this.speed = 0\r\n    this.alive = false\r\n    this.colliding = false\r\n  }\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Bullet.ts","import { Drawable } from '../interfaces/Drawable'\r\nimport { Vector2 } from '../../lib/vector/Vector2'\r\nimport { Pool } from '../structures/Pool'\r\nimport { CollideAble, EntityType } from '../interfaces/CollideAble'\r\nimport { SpaceGame } from '../SpaceGame'\r\nimport { AssetType } from '../../client/AssetManager'\r\nimport { Sound } from '../../client/audio/Sound'\r\n\r\n/**\r\n *\r\n */\r\nexport class Enemy implements Drawable, CollideAble {\r\n  position: Vector2\r\n  speed: number\r\n  speedX: number\r\n  speedY: number\r\n  leftEdge: number\r\n  rightEdge: number\r\n  bottomEdge: number\r\n  width: number\r\n  height: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  context: any\r\n  sprite: any\r\n  percentFire: number\r\n  chance: number\r\n  alive: boolean\r\n  bulletPool: Pool\r\n  collidesWith\r\n  type: EntityType\r\n  colliding: boolean\r\n  game: SpaceGame\r\n  explosionSound: Sound\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {number} canvasWidth\r\n   * @param {number} canvasHeight\r\n   * @param {number} speed\r\n   * @param {any} context\r\n   * @param {any} sprite\r\n   * @param {string} type\r\n   * @param {Pool} bulletPool\r\n   * @param {SpaceGame} game\r\n   */\r\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context, sprite, type: EntityType, bulletPool: Pool, game: SpaceGame) {\r\n    this.position = new Vector2(x, y)\r\n    this.width = width\r\n    this.height = height\r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.speed = speed\r\n    this.context = context\r\n    this.sprite = sprite\r\n    this.percentFire = 0.001\r\n    this.chance = 0\r\n    this.alive = false\r\n    this.type = type\r\n    this.collidesWith = []\r\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\r\n    this.colliding = false\r\n    this.bulletPool = bulletPool\r\n    this.game = game\r\n    this.explosionSound = this.game.assetManager.getSound(EntityType.EXPLOSION_I, AssetType.AUDIO)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} speed\r\n   */\r\n  spawn (x: number, y: number, speed: number): void {\r\n    this.position.x = x\r\n    this.position.y = y\r\n    this.speed = speed\r\n    this.speedX = 0\r\n    this.speedY = speed\r\n    this.alive = true\r\n    this.leftEdge = this.position.x - 180\r\n    this.rightEdge = this.position.x + 180\r\n    this.bottomEdge = this.position.y + 280\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  draw () {\r\n    this.context.clearRect(this.position.x - 1, this.position.y, this.width + 1, this.height)\r\n    this.position.x += this.speedX\r\n    this.position.y += this.speedY\r\n    if (this.position.x <= this.leftEdge) {\r\n      this.speedX = this.speed\r\n    } else if (this.position.x >= this.rightEdge + this.width) {\r\n      this.speedX = -this.speed\r\n    } else if (this.position.y >= this.bottomEdge) {\r\n      this.speed = 1.5\r\n      this.speedY = 0\r\n      this.position.y -= 5\r\n      this.speedX = -this.speed\r\n    }\r\n    if (!this.colliding) {\r\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\r\n      // Enemy has a chance to shoot every movement\r\n      this.chance = Math.floor(Math.random() * 101)\r\n      if (this.chance / 100 < this.percentFire) {\r\n        this.fire()\r\n      }\r\n      return false\r\n    } else {\r\n      this.game.scorePoints()\r\n      this.explosionSound.play()\r\n      return true\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  fire (): void {\r\n    this.bulletPool.get(Math.floor(this.position.x + this.width / 2), Math.floor(this.position.y + this.height), -5)\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  clear (): void {\r\n    this.position.x = 0\r\n    this.position.y = 0\r\n    this.speed = 0\r\n    this.speedX = 0\r\n    this.speedY = 0\r\n    this.alive = false\r\n    this.colliding = false\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CollideAble} other\r\n   */\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Enemy.ts","import { Settings } from './Settings'\r\nimport { Actions } from './InputManager'\r\nimport { AssetManager } from './AssetManager'\r\nimport { EventHandler } from '../lib/event/EventHandler'\r\n\r\nexport class SettingsMenu {\r\n  element: HTMLDivElement\r\n  mainMenu: HTMLDivElement\r\n  settings: Settings\r\n  assetManager: AssetManager\r\n  showing: boolean\r\n\r\n  constructor (element, settings: Settings, assetManager: AssetManager) {\r\n    this.element = element\r\n    this.settings = settings\r\n    this.assetManager = assetManager\r\n    this.showing = false\r\n  }\r\n\r\n  createMainMenu (): void {\r\n    this.mainMenu = document.createElement('div')\r\n    this.mainMenu.classList.add('tab')\r\n    this.element.appendChild(this.mainMenu)\r\n  }\r\n\r\n  openTab (event, tabId: string): void {\r\n    let tabContent\r\n    let tabLink\r\n    tabContent = document.getElementsByClassName('tabContent')\r\n    for (let i = 0; i < tabContent.length; i++) {\r\n      tabContent[i].style.display = 'none'\r\n    }\r\n    tabLink = document.getElementsByClassName('tabLink')\r\n    for (let i = 0; i < tabLink.length; i++) {\r\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\r\n    }\r\n    document.getElementById(tabId).style.display = 'block'\r\n    event.currentTarget.className += ' active'\r\n  }\r\n\r\n  createKeyboardMenu (): void {\r\n    let keyboardMenuId = 'keyboardMenu'\r\n    let keyboardLink = document.createElement('button')\r\n    let keyboardDiv = document.createElement('div')\r\n    let title = document.createElement('h4')\r\n    let form = document.createElement('form')\r\n    let submit = document.createElement('input')\r\n    EventHandler.registerOnElement(\r\n      keyboardLink,\r\n      ['click', 'touchstart'],\r\n      event => this.openTab(event, keyboardMenuId)\r\n    )\r\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\r\n    keyboardLink.classList.add('tabLink')\r\n    this.mainMenu.appendChild(keyboardLink)\r\n    keyboardDiv.setAttribute('id', keyboardMenuId)\r\n    keyboardDiv.classList.add('tabContent')\r\n    title.appendChild(document.createTextNode('Keyboard'))\r\n    form.setAttribute('id', 'keyboardSettings')\r\n    form.setAttribute('method', 'post')\r\n    submit.setAttribute('type', 'submit')\r\n    submit.setAttribute('value', 'Save')\r\n    keyboardDiv.appendChild(title)\r\n    keyboardDiv.appendChild(form)\r\n    this.element.appendChild(keyboardDiv)\r\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\r\n    form.appendChild(submit)\r\n    form.addEventListener('submit', event => {\r\n      event.preventDefault()\r\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\r\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\r\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\r\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\r\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\r\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\r\n      this.clear()\r\n    })\r\n  }\r\n\r\n  createPlayerMenu (): void {\r\n    let playerMenuId = 'playerMenu'\r\n    let playerLink = document.createElement('button')\r\n    let playerDiv = document.createElement('div')\r\n    let playerTitle = document.createElement('h4')\r\n    let playerForm = document.createElement('form')\r\n    let playerSubmit = document.createElement('input')\r\n    EventHandler.registerOnElement(\r\n      playerLink,\r\n      ['click', 'touchstart'],\r\n      event => this.openTab(event, playerMenuId)\r\n    )\r\n    playerLink.appendChild(document.createTextNode('Player'))\r\n    playerLink.classList.add('tabLink')\r\n    this.mainMenu.appendChild(playerLink)\r\n    playerDiv.setAttribute('id', playerMenuId)\r\n    playerDiv.classList.add('tabContent')\r\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\r\n    playerForm.setAttribute('id', 'playerSettings')\r\n    playerForm.setAttribute('method', 'post')\r\n    playerSubmit.setAttribute('type', 'submit')\r\n    playerSubmit.setAttribute('value', 'Save')\r\n    playerDiv.appendChild(playerTitle)\r\n    playerDiv.appendChild(playerForm)\r\n    this.element.appendChild(playerDiv)\r\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\r\n    playerForm.appendChild(playerSubmit)\r\n    playerForm.addEventListener('submit', event => {\r\n      event.preventDefault()\r\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\r\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\r\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\r\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\r\n      this.clear()\r\n    })\r\n  }\r\n\r\n  createAudioMenu (): void {\r\n    let audioMenuId = 'audioMenu'\r\n    let audioLink = document.createElement('button')\r\n    let audioDiv = document.createElement('div')\r\n    let div = document.createElement('div')\r\n    let audioTitle = document.createElement('h4')\r\n    let audioLabel = document.createElement('label')\r\n    let audioSlide = document.createElement('input')\r\n    EventHandler.registerOnElement(\r\n      audioLink,\r\n      ['click', 'touchstart'],\r\n      event => this.openTab(event, audioMenuId)\r\n    )\r\n    audioLink.classList.add('tabLink')\r\n    audioLink.appendChild(document.createTextNode('Audio'))\r\n    this.mainMenu.appendChild(audioLink)\r\n    audioDiv.setAttribute('id', audioMenuId)\r\n    audioDiv.classList.add('tabContent')\r\n    div.classList.add('row')\r\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\r\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\r\n    audioLabel.setAttribute('for', 'masterVolume')\r\n    audioSlide.setAttribute('id', 'masterVolume')\r\n    audioSlide.setAttribute('type', 'range')\r\n    audioSlide.setAttribute('min', '0')\r\n    audioSlide.setAttribute('max', '1')\r\n    audioSlide.setAttribute('step', '0.1')\r\n    audioSlide.addEventListener('change', event => this.assetManager.adjustMasterVolume(Number(audioSlide.value)))\r\n    div.appendChild(audioTitle)\r\n    div.appendChild(audioLabel)\r\n    div.appendChild(audioSlide)\r\n    audioDiv.appendChild(div)\r\n\r\n    let ambientDiv = document.createElement('div')\r\n    let ambientLabel = document.createElement('label')\r\n    let ambientSlide = document.createElement('input')\r\n    ambientDiv.classList.add('row')\r\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\r\n    ambientLabel.setAttribute('for', 'ambientVolume')\r\n    ambientSlide.setAttribute('id', 'ambientVolume')\r\n    ambientSlide.setAttribute('type', 'range')\r\n    ambientSlide.setAttribute('min', '0')\r\n    ambientSlide.setAttribute('max', '1')\r\n    ambientSlide.setAttribute('step', '0.1')\r\n    ambientSlide.addEventListener('change', event => this.assetManager.adjustAmbientVolume(Number(ambientSlide.value)))\r\n    ambientDiv.appendChild(ambientLabel)\r\n    ambientDiv.appendChild(ambientSlide)\r\n    audioDiv.appendChild(ambientDiv)\r\n\r\n    let effectsDiv = document.createElement('div')\r\n    let effectsLabel = document.createElement('label')\r\n    let effectsSlide = document.createElement('input')\r\n    effectsDiv.classList.add('row')\r\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\r\n    effectsLabel.setAttribute('for', 'effectsVolume')\r\n    effectsSlide.setAttribute('id', 'effectsVolume')\r\n    effectsSlide.setAttribute('type', 'range')\r\n    effectsSlide.setAttribute('min', '0')\r\n    effectsSlide.setAttribute('max', '1')\r\n    effectsSlide.setAttribute('step', '0.1')\r\n    effectsSlide.addEventListener('change', event => this.assetManager.adjustEffectsVolume(Number(effectsSlide.value)))\r\n    effectsDiv.appendChild(effectsLabel)\r\n    effectsDiv.appendChild(effectsSlide)\r\n    audioDiv.appendChild(effectsDiv)\r\n    this.element.appendChild(audioDiv)\r\n  }\r\n\r\n  init (): void {\r\n    this.createMainMenu()\r\n    this.createKeyboardMenu()\r\n    this.createPlayerMenu()\r\n    this.createAudioMenu()\r\n  }\r\n\r\n  clear (): void {\r\n    while (this.element.firstChild) {\r\n      this.element.removeChild(this.element.firstChild)\r\n    }\r\n    this.init()\r\n  }\r\n\r\n  addPlayerSettingEntry (setting, element): void {\r\n    let label = document.createElement('label')\r\n    let input = document.createElement('input')\r\n    let row = document.createElement('div')\r\n    label.setAttribute('for', setting)\r\n    label.appendChild(document.createTextNode(setting + ':'))\r\n    input.setAttribute('id', setting)\r\n    input.setAttribute('type', 'number')\r\n    input.setAttribute('name', setting)\r\n    input.setAttribute('value', this.settings.player[setting])\r\n    row.classList.add('row')\r\n    row.appendChild(label)\r\n    row.appendChild(input)\r\n    element.appendChild(row)\r\n  }\r\n\r\n  addEntry (setting, element): void {\r\n    let row = document.createElement('div')\r\n    let label = document.createElement('label')\r\n    let input = document.createElement('input')\r\n    row.classList.add('row')\r\n    label.setAttribute('for', this.settings.keyBoard[setting])\r\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\r\n    input.setAttribute('id', this.settings.keyBoard[setting])\r\n    input.setAttribute('type', 'text')\r\n    input.setAttribute('name', this.settings.keyBoard[setting])\r\n    input.setAttribute('value', setting)\r\n    row.appendChild(label)\r\n    row.appendChild(input)\r\n    element.appendChild(row)\r\n  }\r\n\r\n  toggleShow (): void {\r\n    if (this.showing) {\r\n      this.element.style.display = 'none'\r\n      this.showing = false\r\n    } else {\r\n      this.element.style.display = 'block'\r\n      this.showing = true\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/SettingsMenu.ts"],"sourceRoot":""}