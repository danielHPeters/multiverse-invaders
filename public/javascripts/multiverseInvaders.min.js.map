{"version":3,"sources":["webpack:///webpack/bootstrap 73076fdd0a47ce4f39d5","webpack:///./src/game/interfaces/CollideAble.ts","webpack:///./src/client/InputManager.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/client/Settings.ts","webpack:///./src/graphics/2D/SpriteSheet.ts","webpack:///./src/audio/Sound.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/game/app.ts","webpack:///./src/game/SpaceGame.ts","webpack:///./src/game/entities/Background.ts","webpack:///./src/game/entities/Ship.ts","webpack:///./src/game/structures/Pool.ts","webpack:///./src/game/entities/Bullet.ts","webpack:///./src/game/entities/Enemy.ts","webpack:///./src/client/SettingsMenu.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EntityType","Observable_1","Actions","default","[object Object]","settings","super","this","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","button","document","getElementById","el","handleTouchStart","handleTouchMove","handleTouchEnd","preventDefault","touchstartX","touchstartY","toucheMoveX","touchMoveY","thisInstance","evt","pageX","pageY","reset","changedTouches","length","Vector2","x","y","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","SpriteSheet_1","Sound_1","Ajax_1","AssetType","cache","sprites","spriteSheets","audio","downloadCount","queue","initAudioContext","AudioContext","webkitAudioContext","audioContext","masterGain","createGain","effectsGain","ambientGain","gain","value","connect","destination","e","console","log","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","data","decodeAudioData","then","buffer","done","error","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","AUDIO","loadAudioFromUrl","SPRITE","loadSprite","SPRITE_SHEET","loadSpriteSheet","Vector2_1","CollideAble_1","width","height","position","colliding","collidesWith","BOX","PLAYER","other","includes","toString","_observers","_state","observer","filter","obs","update","observers","InputManager_1","w","UP","DOWN","a","LEFT","RIGHT","space","SHOOT","r","RESTART","q","ROTATE_LEFT","ROTATE_RIGHT","player","maxVelocity","fireDelay","friction","acceleration","master","ambient","effects","keys","newKey","action","oldKey","findKey","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","gainNode","playing","loop","source","createBufferSource","stop","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","objects","nodes","node","clear","returnedObjects","getAllObjects","index","getIndex","findObjects","obj","Array","element","insert","split","splice","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","quadTree","j","isCollideAbleWith","events","listener","AssetManager_1","SpaceGame_1","Settings_1","SettingsMenu_1","EventHandler_1","assetManager","canvases","background","ship","main","inputManager","settingsMenu","queueDownload","BACKGROUND","PLAYER_BULLET","ENEMY","ENEMY_BULLET","MAIN_THEME","LASER","EXPLOSION_I","GAME_OVER","downloadAll","game","gameOver","set","shoot","cancelShoot","registerOnElement","restart","toggleShow","togglePause","Background_1","Ship_1","Pool_1","QuadTree_1","CollisionManager_1","paused","getContext","backgroundContext","shipContext","mainContext","playerScore","getSprite","shipStartX","shipStartY","enemyBulletPool","enemyPool","spawnWave","register","collisionManager","backgroundAudio","getSound","AUDIO_LOOP","play","spacer","innerHTML","pool","getPool","detectCollision","alive","draw","render","animReqID","requestAnimationFrame","style","display","gameOverAudio","cancelAnimationFrame","clearRect","clearAll","context","speed","canvasWidth","canvasHeight","drawImage","startPosition","velocity","counter","maxTop","laserSound","setVector","add","addVector","limit","fire","getTwo","Bullet_1","Enemy_1","maxSize","subPool","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","bulletPool","percentFire","chance","explosionSound","speedX","speedY","leftEdge","rightEdge","bottomEdge","scorePoints","random","showing","mainMenu","createElement","classList","appendChild","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","keyboardMenuId","keyboardLink","keyboardDiv","title","form","submit","openTab","createTextNode","setAttribute","setting","addEntry","setKey","playerMenuId","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","addPlayerSettingEntry","Number","audioMenuId","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row"],"mappings":"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","file":"multiverseInvaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73076fdd0a47ce4f39d5","export enum EntityType {\r\n  PLAYER = 'ship',\r\n  ENEMY = 'enemy',\r\n  ENEMY_BULLET = 'bulletEnemy',\r\n  PLAYER_BULLET = 'bullet',\r\n  BACKGROUND = 'background',\r\n  MAP = 'map',\r\n  GAME_OVER = 'gameOver',\r\n  LASER = 'laser',\r\n  MAIN_THEME = 'shockWave',\r\n  EXPLOSION_I = 'explosion1',\r\n  EXPLOSION_II = 'explosion2',\r\n  BOX = 'box',\r\n  ARENA = 'arena'\r\n}\r\n\r\n/**\r\n * Interface for collide able objects.\r\n */\r\nexport default interface CollideAble {\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/interfaces/CollideAble.ts","import Observable from '../lib/observer/Observable'\r\nimport Settings from './Settings'\r\n\r\nexport enum Actions {\r\n  UP = 'UP',\r\n  DOWN = 'DOWN',\r\n  LEFT = 'LEFT',\r\n  RIGHT = 'RIGHT',\r\n  SHOOT = 'SHOOT',\r\n  RESTART = 'RESTART',\r\n  ROTATE_LEFT = 'R-LEFT',\r\n  ROTATE_RIGHT = 'R-RIGHT'\r\n}\r\n\r\n/**\r\n * Input manager class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class InputManager extends Observable {\r\n  inputMap\r\n  touches\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor (settings: Settings) {\r\n    super()\r\n    this.inputMap = settings.keyBoard\r\n    this.init()\r\n    this.initializeTouchHandler()\r\n    this.touches = {\r\n      start: [],\r\n      move: []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register pressed keys and notify observers.\r\n   */\r\n  init (): void {\r\n    window.addEventListener('keydown', event => {\r\n      let key = event.key !== ' ' ? event.key : 'space'\r\n      this.state[this.inputMap[key]] = true\r\n      this.notify()\r\n    })\r\n    window.addEventListener('keyup', event => {\r\n      let key = event.key !== ' ' ? event.key : 'space'\r\n      this.state[this.inputMap[key]] = false\r\n      this.notify()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Maps swipe directions to key press booleans.\r\n   * Allows touch controls on mobile.\r\n   */\r\n  initializeTouchHandler (): void {\r\n    // Register the event listeners\r\n    let button = document.getElementById('move')\r\n    let el = button ? button : window\r\n    el.addEventListener('touchstart', handleTouchStart, false)\r\n    el.addEventListener('touchmove', handleTouchMove, false)\r\n    el.addEventListener('touchend', handleTouchEnd, false)\r\n    el.addEventListener('contextmenu', event => {\r\n      event.preventDefault()\r\n      return false\r\n    })\r\n\r\n    let start = []\r\n    let move = []\r\n    let touchstartX = 0\r\n    let touchstartY = 0\r\n    let toucheMoveX = 0\r\n    let touchMoveY = 0\r\n    let thisInstance = this\r\n\r\n    function handleTouchStart (evt): void {\r\n      evt.preventDefault()\r\n      start = evt.touches\r\n      touchstartX = evt.touches[0].pageX\r\n      touchstartY = evt.touches[0].pageY\r\n    }\r\n\r\n    function handleTouchMove (evt): void {\r\n      thisInstance.reset()\r\n      evt.preventDefault()\r\n      move = evt.changedTouches\r\n      toucheMoveX = evt.touches[0].pageX\r\n      touchMoveY = evt.touches[0].pageY\r\n      for (let i = 0; i < evt.touches.length; i++) {\r\n        // Positive values equals left. Negative values equals right\r\n        if (move[i].pageX < start[i].pageX) {\r\n          thisInstance.state[thisInstance.inputMap['a']] = true\r\n        }\r\n        if (move[i].pageX > start[i].pageX) {\r\n          thisInstance.state[thisInstance.inputMap['d']] = true\r\n        }\r\n        if (move[i].pageY < start[i].pageY) {\r\n          thisInstance.state[thisInstance.inputMap['w']] = true\r\n        }\r\n        if (move[i].pageY > start[i].pageY) {\r\n          thisInstance.state[thisInstance.inputMap['s']] = true\r\n        }\r\n        thisInstance.notify()\r\n      }\r\n    }\r\n\r\n    function handleTouchEnd (evt): void {\r\n      evt.preventDefault()\r\n      thisInstance.reset()\r\n    }\r\n  }\r\n\r\n  shoot (): void {\r\n    this.state[this.inputMap['space']] = true\r\n  }\r\n\r\n  cancelShoot (): void {\r\n    this.state[this.inputMap['space']] = false\r\n  }\r\n\r\n  reset (): void {\r\n    this.state[this.inputMap['w']] = false\r\n    this.state[this.inputMap['a']] = false\r\n    this.state[this.inputMap['s']] = false\r\n    this.state[this.inputMap['d']] = false\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/InputManager.ts","/**\r\n * 2D vector implementation.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Vector2 {\r\n  private _x: number\r\n  private _y: number\r\n\r\n  /**\r\n   * Default constructor. Sets x and y values.\r\n   *\r\n   * @param {number} x initial x value\r\n   * @param {number} y initial y value\r\n   */\r\n  constructor (x: number, y: number) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Static addVector method to combine two vectors into a new one.\r\n   *\r\n   * @param {Vector2} v1 first vector\r\n   * @param {Vector2} v2 second vector\r\n   * @returns {Vector2} combined vector\r\n   */\r\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\r\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\r\n  }\r\n\r\n  /**\r\n   * Subtract two vector from each other and put the result into a new vector.\r\n   *\r\n   * @param {Vector2} v1 first vector\r\n   * @param {Vector2} v2 second vector\r\n   * @returns {Vector2} resulting vector\r\n   */\r\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\r\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\r\n  }\r\n\r\n  /**\r\n   * Multiplies a vector with a scalar and returns the resulting vector.\r\n   *\r\n   * @param {Vector2} vector initial vector\r\n   * @param {number} scalar scalar to scale the vector\r\n   * @returns {Vector2} the resulting vector\r\n   */\r\n  static multiply (vector: Vector2, scalar: number): Vector2 {\r\n    return new Vector2(vector.x * scalar, vector.y * scalar)\r\n  }\r\n\r\n  /**\r\n   * Divides a vector by a scalar and returns the result in a new vector.\r\n   * Throws error if trying to divide by zero.\r\n   *\r\n   * @param {Vector2} vector vector to divide\r\n   * @param {number} scalar scalar used to divide vector\r\n   * @returns {Vector2} resulting vector\r\n   */\r\n  static divide (vector: Vector2, scalar: number): Vector2 {\r\n    if (scalar === 0) {\r\n      throw new Error('cannot divide vector by scalar with value \"0\"')\r\n    }\r\n    return new Vector2(vector.x / scalar, vector.y / scalar)\r\n  }\r\n\r\n  /**\r\n   * Set x value of this vector.\r\n   *\r\n   * @param {number} x new x value\r\n   */\r\n  set x (x: number) {\r\n    this._x = x\r\n  }\r\n\r\n  /**\r\n   * Set y value of this vector.\r\n   *\r\n   * @param {number} y new y value\r\n   */\r\n  set y (y: number) {\r\n    this._y = y\r\n  }\r\n\r\n  /**\r\n   * Getter for x value\r\n   * @returns {number} x value\r\n   */\r\n  get x (): number {\r\n    return this._x\r\n  }\r\n\r\n  /**\r\n   * Getter for y value\r\n   * @returns {number} y value\r\n   */\r\n  get y (): number {\r\n    return this._y\r\n  }\r\n\r\n  /**\r\n   * Set vector with both x and y values.\r\n   *\r\n   * @param {number} x new x value\r\n   * @param {number} y new y value\r\n   */\r\n  set (x: number, y: number): void {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Set vector location to another vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  setVector (vector: Vector2): void {\r\n    this.x = vector.x\r\n    this.y = vector.y\r\n  }\r\n\r\n  /**\r\n   * Add x and y to this vector.\r\n   *\r\n   * @param {number} x x value\r\n   * @param {number} y y value\r\n   */\r\n  add (x: number, y: number): void {\r\n    this.x += x\r\n    this.y += y\r\n  }\r\n\r\n  /**\r\n   * Add vector to this vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  addVector (vector: Vector2): void {\r\n    this.x += vector.x\r\n    this.y += vector.y\r\n  }\r\n\r\n  /**\r\n   * Subtraxt x and y from this vector.\r\n   *\r\n   * @param {number} x x value\r\n   * @param {number} y y value\r\n   */\r\n  subtract (x: number, y: number): void {\r\n    this.x -= x\r\n    this.y -= y\r\n  }\r\n\r\n  /**\r\n   * Subtract a vector from this vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   */\r\n  subtractVector (vector: Vector2): void {\r\n    this.x -= vector.x\r\n    this.y -= vector.y\r\n  }\r\n\r\n  /**\r\n   * Multiply this vector by scalar.\r\n   *\r\n   * @param scalar scalar to multiply the vector\r\n   */\r\n  multiply (scalar: number): void {\r\n    this.x *= scalar\r\n    this.y *= scalar\r\n  }\r\n\r\n  /**\r\n   * Divides this vector by a scalar.\r\n   * Throws error when trying to divide by zero.\r\n   *\r\n   * @param {number} scalar scalar used to divide this vector\r\n   */\r\n  divide (scalar: number): void {\r\n    if (scalar === 0) {\r\n      throw new Error('cannot divide vector by \"0\"')\r\n    }\r\n    this.x /= scalar\r\n    this.y /= scalar\r\n  }\r\n\r\n  /**\r\n   * Get the magnitude / elementsCount of this vector.\r\n   *\r\n   * @returns {number} magnitude / elementsCount of this vector\r\n   */\r\n  mag (): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  }\r\n\r\n  /**\r\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\r\n   *\r\n   * @returns {Vector2}\r\n   */\r\n  negative (): Vector2 {\r\n    return new Vector2(-this.x, -this.y)\r\n  }\r\n\r\n  /**\r\n   * Normalize the vector.\r\n   */\r\n  normalize (): void {\r\n    let magnitude = this.mag()\r\n    if (magnitude !== 0) {\r\n      this.divide(magnitude)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Limit the vector to a maximum elementsCount.\r\n   *\r\n   * @param max maximum elementsCount\r\n   */\r\n  limit (max): void {\r\n    if (Math.floor(this.mag()) > max) {\r\n      this.normalize()\r\n      this.multiply(max)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the distance of this vector to another vector.\r\n   *\r\n   * @param {Vector2} vector other vector\r\n   * @returns {number} calculated distance\r\n   */\r\n  distanceTo (vector: Vector2): number {\r\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\r\n  }\r\n\r\n  /**\r\n   * Get the dot product between this vector and another vector.\r\n   *\r\n   * @param {Vector2} vector\r\n   * @returns {number} the dot product of this vector and the one passed as param.\r\n   */\r\n  dot (vector: Vector2): number {\r\n    return this.x * vector.x + this.y * vector.y\r\n  }\r\n\r\n  floor (): void {\r\n    this.x = Math.floor(this.x)\r\n    this.x = Math.floor(this.x)\r\n  }\r\n\r\n  /**\r\n   * Create a clone of this vector.\r\n   *\r\n   * @returns {Vector2} cloned vector\r\n   */\r\n  clone (): Vector2 {\r\n    return new Vector2(this.x, this.y)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Vector2.ts","import { EntityType } from '../game/interfaces/CollideAble'\r\nimport SpriteSheet from '../graphics/2D/SpriteSheet'\r\nimport Sound from '../audio/Sound'\r\nimport Ajax from '../lib/ajax/Ajax'\r\n\r\nexport enum AssetType {\r\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_LOOP = 'LOOP'\r\n}\r\n\r\n/**\r\n * Asset manager Class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class AssetManager {\r\n  audioContext\r\n  cache\r\n  queue\r\n  downloadCount: number\r\n  masterGain: GainNode\r\n  effectsGain: GainNode\r\n  ambientGain: GainNode\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor () {\r\n    this.cache = {\r\n      sprites: {},\r\n      spriteSheets: {},\r\n      audio: {}\r\n    }\r\n    this.downloadCount = 0\r\n    this.queue = []\r\n    this.initAudioContext()\r\n  }\r\n\r\n  initAudioContext (): void {\r\n    try {\r\n      // Fix for browsers using prefixes\r\n      window.AudioContext = window.AudioContext || webkitAudioContext\r\n      this.audioContext = new AudioContext()\r\n      this.masterGain = this.audioContext.createGain()\r\n      this.effectsGain = this.audioContext.createGain()\r\n      this.ambientGain = this.audioContext.createGain()\r\n      this.masterGain.gain.value = 1\r\n      this.masterGain.connect(this.audioContext.destination)\r\n      this.effectsGain.connect(this.masterGain)\r\n      this.ambientGain.connect(this.masterGain)\r\n      this.ambientGain.gain.value = 1\r\n      this.effectsGain.gain.value = 1\r\n    } catch (e) {\r\n      console.log('Web Audio API is not supported in this browser')\r\n    }\r\n  }\r\n\r\n  adjustMasterVolume (value: number): void {\r\n    this.masterGain.gain.value = value\r\n  }\r\n\r\n  adjustAmbientVolume (value: number): void {\r\n    this.ambientGain.gain.value = value\r\n  }\r\n\r\n  adjustEffectsVolume (value: number): void {\r\n    this.effectsGain.gain.value = value\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  done (): boolean {\r\n    return this.downloadCount === this.queue.length\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {EntityType} id\r\n   * @param {string} path\r\n   * @param {AssetType} type\r\n   * @param {{}} opts\r\n   */\r\n  queueDownload (id: EntityType, path: string, type: AssetType, opts = null): void {\r\n    this.queue.push({\r\n      id: id,\r\n      path: path,\r\n      type: type,\r\n      opts: opts\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Build an AJAX Request to loadAudioFromUrl audio file into the buffer cache.\r\n   *\r\n   * @param item object with name of file and path to file\r\n   * @param callback function to execute on done\r\n   */\r\n  loadAudioFromUrl (item, callback): void {\r\n    Ajax.create({\r\n      method: 'GET',\r\n      url: item.path,\r\n      responseType: 'arraybuffer'\r\n    }, response => {\r\n      this.decodeAudio(response, item.id, callback)\r\n    })\r\n  }\r\n\r\n  decodeAudio (data, id, callback): void {\r\n    this.audioContext.decodeAudioData(data).then(\r\n      buffer => {\r\n        this.cache.audio[id] = buffer\r\n        this.downloadCount += 1\r\n        if (this.done()) {\r\n          callback()\r\n        }\r\n      },\r\n      error => { console.log('Error with decoding audio data' + error) }\r\n    )\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param item\r\n   * @param callback\r\n   */\r\n  loadSprite (item, callback): void {\r\n    let sprite = new Image()\r\n    sprite.addEventListener('load', () => {\r\n      this.downloadCount++\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    })\r\n    sprite.src = item.path\r\n    this.cache.sprites[item.id] = sprite\r\n  }\r\n\r\n  /**\r\n   * Load sprites sheet.\r\n   *\r\n   * @param item sprite sheet info\r\n   * @param callback called upon downloading all\r\n   */\r\n  loadSpriteSheet (item, callback): void {\r\n    let spriteSheet = new Image()\r\n    spriteSheet.addEventListener('load', () => {\r\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\r\n      this.downloadCount += 1\r\n      if (this.done()) {\r\n        callback()\r\n      }\r\n    })\r\n    spriteSheet.src = item.path\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param callback\r\n   */\r\n  downloadAll (callback): void {\r\n    this.queue.forEach(item => {\r\n      if (item.type === AssetType.AUDIO) {\r\n        this.loadAudioFromUrl(item, callback)\r\n      } else if (item.type === AssetType.SPRITE) {\r\n        this.loadSprite(item, callback)\r\n      } else if (item.type === AssetType.SPRITE_SHEET) {\r\n        this.loadSpriteSheet(item, callback)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Create an audio buffer source node from cached buffer.\r\n   * Send it to the destination of the audio context and play it.\r\n   *\r\n   * @param {EntityType} id file id\r\n   * @param {AssetType} type\r\n   */\r\n  getSound (id: EntityType, type: AssetType): Sound {\r\n    let gain\r\n    if (type === AssetType.AUDIO) {\r\n      gain = this.effectsGain\r\n    } else {\r\n      gain = this.ambientGain\r\n    }\r\n    return new Sound(this.audioContext, gain, this.cache.audio[id])\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} id\r\n   * @returns {EntityType}\r\n   */\r\n  getSprite (id: EntityType): any {\r\n    return this.cache.sprites[id]\r\n  }\r\n\r\n  /**\r\n   * Get sprite sheet by name.\r\n   *\r\n   * @param {EntityType} id\r\n   * @returns {SpriteSheet}\r\n   */\r\n  getSpriteSheet (id: EntityType): SpriteSheet {\r\n    return this.cache.spriteSheets[id]\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/AssetManager.ts","import Vector2 from '../math/Vector2'\r\nimport CollideAble, { EntityType } from '../../game/interfaces/CollideAble'\r\n\r\nexport default class HitBox implements CollideAble {\r\n  type: EntityType\r\n  collidesWith\r\n  colliding: boolean\r\n  position: Vector2\r\n  width: number\r\n  height: number\r\n\r\n  /**\r\n   * Initializes position and dimension.\r\n   * @param {number} x position x\r\n   * @param {number} y position y\r\n   * @param {number} width dimension width\r\n   * @param {number} height dimension height\r\n   */\r\n  constructor (x, y, width, height) {\r\n    this.position = new Vector2(x, y)\r\n    this.width = width\r\n    this.height = height\r\n    this.colliding = false\r\n    this.collidesWith = []\r\n    this.type = EntityType.BOX\r\n    this.collidesWith.push(EntityType.PLAYER)\r\n  }\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/HitBox.ts","import Observer from './Observer'\r\n\r\n/**\r\n * Observable class to be extended by a class that should be observed.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Observable {\r\n  private _observers: Observer[]\r\n  private _state: any\r\n\r\n  constructor () {\r\n    this._observers = []\r\n    this._state = {}\r\n  }\r\n\r\n  /**\r\n   * Register an observer on this observable.\r\n   *\r\n   * @param {Observer} observer Object implementing the Observer interface\r\n   */\r\n  register (observer: Observer): void {\r\n    this._observers.push(observer)\r\n  }\r\n\r\n  /**\r\n   * Remove an observer from this observables observers list.\r\n   *\r\n   * @param {Observer} observer Object implementing the Observer interface\r\n   */\r\n  unRegister (observer: Observer): void {\r\n    this._observers = this._observers.filter(obs => {\r\n      return obs !== observer\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Notify all observers.\r\n   */\r\n  notify (): void {\r\n    this._observers.forEach(observer => {\r\n      observer.update(this._state)\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Observer[]}\r\n   */\r\n  get observers (): Observer[] {\r\n    return this._observers\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Observer[]} observers\r\n   */\r\n  set observers (observers: Observer[]) {\r\n    this._observers = observers\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {any}\r\n   */\r\n  get state (): any {\r\n    return this._state\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {any} state\r\n   */\r\n  set state (state: any) {\r\n    this._state = state\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import { Actions } from './InputManager'\r\n\r\n/**\r\n * Settings class for game applications.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Settings {\r\n  keyBoard\r\n  player\r\n  audio\r\n\r\n  constructor () {\r\n    this.keyBoard = {\r\n      'w': Actions.UP,\r\n      's': Actions.DOWN,\r\n      'a': Actions.LEFT,\r\n      'd': Actions.RIGHT,\r\n      'space': Actions.SHOOT,\r\n      'r': Actions.RESTART,\r\n      'q': Actions.ROTATE_LEFT,\r\n      'e': Actions.ROTATE_RIGHT\r\n    }\r\n    this.player = {\r\n      maxVelocity: 15,\r\n      fireDelay: 15,\r\n      friction: 0.7,\r\n      acceleration: 3\r\n    }\r\n    this.audio = {\r\n      master: 1,\r\n      ambient: 1,\r\n      effects: 1\r\n    }\r\n  }\r\n\r\n  findKey (value): string {\r\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\r\n  }\r\n\r\n  setKey (newKey, action: Actions): void {\r\n    let oldKey = this.findKey(action)\r\n    if (newKey !== oldKey) {\r\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\r\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\r\n      delete this.keyBoard[oldKey]\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Settings.ts","/**\r\n * Sprite sheet definition.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class SpriteSheet {\r\n  private _image\r\n  private _frameWidth\r\n  private _frameHeight\r\n  private _framesPerRow\r\n\r\n  /**\r\n   * Constructor. Sets frame dimensions and calculates number of frames.\r\n   *\r\n   * @param image\r\n   * @param frameWidth\r\n   * @param frameHeight\r\n   */\r\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\r\n    this._image = image\r\n    this._frameWidth = frameWidth\r\n    this._frameHeight = frameHeight\r\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Image}\r\n   */\r\n  get image (): HTMLImageElement {\r\n    return this._image\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Image} image\r\n   */\r\n  set image (image: HTMLImageElement) {\r\n    if (!(image instanceof Image)) {\r\n      throw new Error('Param tileSetImage must be of type Image!')\r\n    }\r\n    this._image = image\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get frameWidth (): number {\r\n    return this._frameWidth\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} frameWidth\r\n   */\r\n  set frameWidth (frameWidth: number) {\r\n    this._frameWidth = frameWidth\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get frameHeight (): number {\r\n    return this._frameHeight\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} frameHeight\r\n   */\r\n  set frameHeight (frameHeight: number) {\r\n    this._frameHeight = frameHeight\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get framesPerRow (): number {\r\n    return this._framesPerRow\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} framesPerRow\r\n   */\r\n  set framesPerRow (framesPerRow: number) {\r\n    this._framesPerRow = framesPerRow\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/graphics/2D/SpriteSheet.ts","/**\r\n * Sound class used to play a sound from a file.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Sound {\r\n  audioContext: AudioContext\r\n  source: AudioBufferSourceNode\r\n  gainNode: GainNode\r\n  masterGain: GainNode\r\n  buffer\r\n  playing: boolean\r\n\r\n  /**\r\n   *\r\n   * @param audioContext\r\n   * @param {GainNode} masterGain\r\n   * @param buffer\r\n   */\r\n  constructor (audioContext, masterGain: GainNode, buffer) {\r\n    this.audioContext = audioContext\r\n    this.masterGain = masterGain\r\n    this.buffer = buffer\r\n    this.gainNode = this.audioContext.createGain()\r\n    this.gainNode.gain.value = 0.2\r\n    this.gainNode.connect(this.masterGain)\r\n    this.playing = false\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {boolean} loop\r\n   */\r\n  play (loop = false): void {\r\n    this.source = this.audioContext.createBufferSource()\r\n    this.source.buffer = this.buffer\r\n    this.source.loop = loop\r\n    this.source.connect(this.gainNode)\r\n    this.source.start(0)\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  stop (): void {\r\n    this.source.stop(0)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio/Sound.ts","export default class Ajax {\r\n  private static defaults = {\r\n    url: '',\r\n    method: 'GET',\r\n    contentType: 'text/html',\r\n    async: true,\r\n    data: null\r\n  }\r\n\r\n  /**\r\n   * Create and send an XML-HTTP request.\r\n   * Requires an options object.\r\n   *\r\n   * @param opts Possible option properties:\r\n   * url = url to send the request to.\r\n   * method = request method. GET, POST, PUT, DELETE.\r\n   * contentType = specify the content type of the request.\r\n   * async = boolean flag for async calls. Defaults to true.\r\n   * data = request body.\r\n   * @param callback success callback function\r\n   */\r\n  public static create (opts, callback): void {\r\n    let xHttp = new XMLHttpRequest()\r\n    xHttp.addEventListener('load', () => {\r\n      callback(xHttp.response)\r\n    })\r\n    xHttp.open(\r\n      opts.method ? opts.method : Ajax.defaults.method,\r\n      opts.url ? opts.url : Ajax.defaults.url,\r\n      opts.async ? opts.async : Ajax.defaults.async\r\n    )\r\n    if (opts.hasOwnProperty('contentType')) {\r\n      xHttp.setRequestHeader(\r\n        'Content-Type',\r\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\r\n      )\r\n    }\r\n    if (opts.hasOwnProperty('responseType')) {\r\n      xHttp.responseType = opts.responseType\r\n    }\r\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\r\n      opts.data = JSON.stringify(opts.data)\r\n    }\r\n    xHttp.send(opts.data ? opts.data : null)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/ajax/Ajax.ts","import HitBox from './HitBox'\r\nimport Drawable from '../../game/interfaces/Drawable'\r\n\r\n/**\r\n * QuadTree class used to optimize collision checking.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class QuadTree {\r\n  level: number\r\n  maxObjects: number\r\n  maxLevels: number\r\n  hitBox: HitBox\r\n  objects: Drawable[]\r\n  nodes: QuadTree[]\r\n\r\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param {HitBox} hitBox\r\n   * @param {number} level\r\n   */\r\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\r\n    this.level = level\r\n    this.maxObjects = 10\r\n    this.maxLevels = 5\r\n    this.hitBox = hitBox\r\n    this.objects = []\r\n    this.nodes = []\r\n  }\r\n\r\n  /**\r\n   * Clears the QuadTree and its sub nodes from all game objects.\r\n   */\r\n  clear (): void {\r\n    this.objects = []\r\n    this.nodes.forEach(node => node.clear())\r\n    this.nodes = []\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param returnedObjects\r\n   * @returns {any}\r\n   */\r\n  getAllObjects (returnedObjects) {\r\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\r\n    this.objects.forEach(object => returnedObjects.push(object))\r\n    return returnedObjects\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param returnedObjects\r\n   * @param object\r\n   * @returns {any}\r\n   */\r\n  findObjects (returnedObjects, object) {\r\n    if (typeof object === 'undefined') {\r\n      console.log('UNDEFINED OBJECT')\r\n      return\r\n    }\r\n    let index = this.getIndex(object)\r\n    if (index !== -1 && this.nodes.length) {\r\n      this.nodes[index].findObjects(returnedObjects, object)\r\n    }\r\n    this.objects.forEach(obj => returnedObjects.push(obj))\r\n    return returnedObjects\r\n  }\r\n\r\n  /**\r\n   * Insert an object into the QuadTree.\r\n   *\r\n   * @param object\r\n   */\r\n  insert (object): void {\r\n    if (typeof object === 'undefined') {\r\n      return\r\n    }\r\n    if (object instanceof Array) {\r\n      object.forEach(element => this.insert(element))\r\n      return\r\n    }\r\n    if (this.nodes.length > 0) {\r\n      let index = this.getIndex(object)\r\n      // Only addVector the object to a sub node if it can fit completely within one\r\n      if (index !== -1) {\r\n        this.nodes[index].insert(object)\r\n        return\r\n      }\r\n    }\r\n    this.objects.push(object)\r\n\r\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\r\n      if (typeof this.nodes[0] === 'undefined') {\r\n        this.split()\r\n      }\r\n      let i = 0\r\n      while (i < this.objects.length) {\r\n        let index = this.getIndex(this.objects[i])\r\n        if (index !== -1) {\r\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\r\n        } else {\r\n          i++\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the index of an object from the QuadTree.\r\n   *\r\n   * @param object\r\n   * @returns {number}\r\n   */\r\n  getIndex (object): number {\r\n    let index = -1\r\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\r\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\r\n    // Object can fit completely within the top quadrant\r\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\r\n    // Object can fit completely within the bottom quadrant\r\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\r\n    // Object can fit completely within the left quadrants\r\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\r\n      if (topQuadrant) {\r\n        index = 1\r\n      } else if (bottomQuadrant) {\r\n        index = 2\r\n      }\r\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\r\n      if (topQuadrant) {\r\n        index = 0\r\n      } else if (bottomQuadrant) {\r\n        index = 3\r\n      }\r\n    }\r\n    return index\r\n  }\r\n\r\n  /**\r\n   * Split the tree on demand.\r\n   */\r\n  split (): void {\r\n    let subWidth = (this.hitBox.width / 2) | 0\r\n    let subHeight = (this.hitBox.height / 2) | 0\r\n    this.nodes[0] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\r\n    this.nodes[1] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\r\n    this.nodes[2] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\r\n    this.nodes[3] = new QuadTree(\r\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/QuadTree.ts","import QuadTree from './QuadTree'\r\n\r\nexport default class CollisionManager {\r\n  quadTree: QuadTree\r\n\r\n  constructor (quadTree) {\r\n    this.quadTree = quadTree\r\n  }\r\n\r\n  detectCollision (): void {\r\n    let objects = []\r\n    this.quadTree.getAllObjects(objects)\r\n\r\n    for (let i = 0; i < objects.length; i++) {\r\n      let obj = []\r\n      this.quadTree.findObjects(obj, objects[i])\r\n\r\n      for (let j = 0; j < obj.length; j++) {\r\n        // DETECT COLLISION ALGORITHM\r\n        if (objects[i].isCollideAbleWith(obj[j]) &&\r\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\r\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\r\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\r\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\r\n          objects[i].colliding = true\r\n          obj[j].colliding = true\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/CollisionManager.ts","/**\r\n * Wrapper class for event handler convenience functions.\r\n */\r\nexport default class EventHandler {\r\n  /**\r\n   * Register multiple events with the same event listener on one element.\r\n   *\r\n   * @param {HTMLElement} element html element to add the events to\r\n   * @param {Array<string>} events the events to be registered\r\n   * @param {EventListener} listener the event listener function\r\n   */\r\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\r\n    events.forEach(event => element.addEventListener(event, listener))\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/event/EventHandler.ts","import AssetManager, { AssetType } from '../client/AssetManager'\r\nimport SpaceGame from './SpaceGame'\r\nimport InputManager from '../client/InputManager'\r\nimport Settings from '../client/Settings'\r\nimport SettingsMenu from '../client/SettingsMenu'\r\nimport { EntityType } from './interfaces/CollideAble'\r\nimport EventHandler from '../lib/event/EventHandler'\r\n\r\nconst assetManager = new AssetManager()\r\nconst canvases = {\r\n  background: document.getElementById('background') as HTMLCanvasElement,\r\n  ship: document.getElementById('ship') as HTMLCanvasElement,\r\n  main: document.getElementById('main') as HTMLCanvasElement\r\n}\r\nconst settings = new Settings()\r\nconst inputManager = new InputManager(settings)\r\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager)\r\nassetManager.queueDownload(EntityType.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\r\nassetManager.queueDownload(EntityType.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\r\nassetManager.queueDownload(EntityType.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\r\nassetManager.queueDownload(EntityType.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\r\nassetManager.queueDownload(EntityType.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\r\nassetManager.downloadAll(() => {\r\n  const game = new SpaceGame(assetManager, inputManager, settings, canvases)\r\n  settingsMenu.init()\r\n  let gameOver = document.getElementById('game-over')\r\n  let set = document.getElementById('settings')\r\n  let shoot = document.getElementById('shoot')\r\n  let events = ['click', 'touchstart']\r\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\r\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\r\n  shoot.addEventListener('contextmenu', event => {\r\n    event.preventDefault()\r\n    return false\r\n  })\r\n  EventHandler.registerOnElement(gameOver, events, () => game.restart())\r\n  EventHandler.registerOnElement(set, events, () => {\r\n    settingsMenu.toggleShow()\r\n    game.togglePause()\r\n  })\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/app.ts","import Background from './entities/Background'\r\nimport AssetManager, { AssetType } from '../client/AssetManager'\r\nimport InputManager, { Actions } from '../client/InputManager'\r\nimport Ship from './entities/Ship'\r\nimport Pool from './structures/Pool'\r\nimport QuadTree from '../lib/collision/QuadTree'\r\nimport HitBox from '../lib/collision/HitBox'\r\nimport Settings from '../client/Settings'\r\nimport { EntityType } from './interfaces/CollideAble'\r\nimport CollisionManager from '../lib/collision/CollisionManager'\r\nimport Sound from '../audio/Sound'\r\nimport Observer from '../lib/observer/Observer'\r\n\r\n/**\r\n * Space game main class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class SpaceGame implements Observer {\r\n  background: Background\r\n  ship: Ship\r\n  enemyPool: Pool\r\n  enemyBulletPool: Pool\r\n  backgroundContext\r\n  shipContext\r\n  mainContext\r\n  playing: boolean\r\n  window\r\n  assetManager: AssetManager\r\n  inputManager: InputManager\r\n  collisionManager: CollisionManager\r\n  settings: Settings\r\n  quadTree: QuadTree\r\n  playerScore: number\r\n  shipStartX: number\r\n  shipStartY: number\r\n  paused: boolean\r\n  canvases\r\n  backgroundAudio: Sound\r\n  gameOverAudio: Sound\r\n  animReqID\r\n\r\n  /**\r\n   *\r\n   * @param {AssetManager} assetManager\r\n   * @param {InputManager} inputManager\r\n   * @param {Settings} settings\r\n   * @param canvases\r\n   */\r\n  constructor (assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\r\n    this.playing = false\r\n    this.paused = false\r\n    this.window = window\r\n    this.assetManager = assetManager\r\n    this.inputManager = inputManager\r\n    this.settings = settings\r\n    this.canvases = canvases\r\n\r\n    if (this.canvases.background.getContext) {\r\n      this.backgroundContext = this.canvases.background.getContext('2d')\r\n      this.shipContext = this.canvases.ship.getContext('2d')\r\n      this.mainContext = this.canvases.main.getContext('2d')\r\n      this.playerScore = 0\r\n      this.background = new Background(\r\n        0,\r\n        0,\r\n        this.canvases.background.width,\r\n        this.canvases.background.height,\r\n        this.backgroundContext,\r\n        this.assetManager.getSprite(EntityType.BACKGROUND)\r\n      )\r\n      this.shipStartX = this.canvases.ship.width / 2 - assetManager.getSprite(EntityType.PLAYER).width\r\n      this.shipStartY = this.canvases.ship.height / 4 * 3 + assetManager.getSprite(EntityType.PLAYER).height * 2\r\n      this.ship = new Ship(\r\n        this.shipStartX,\r\n        this.shipStartY,\r\n        assetManager.getSprite(EntityType.PLAYER).width,\r\n        assetManager.getSprite(EntityType.PLAYER).height,\r\n        this.canvases.ship.width,\r\n        this.canvases.ship.height,\r\n        this.shipContext,\r\n        assetManager,\r\n        new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 80, EntityType.PLAYER_BULLET),\r\n        settings.player\r\n      )\r\n      this.enemyBulletPool = new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 50, EntityType.ENEMY_BULLET)\r\n      this.enemyPool = new Pool(assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 30, EntityType.ENEMY, this.enemyBulletPool, this)\r\n      this.spawnWave()\r\n      inputManager.register(this.ship)\r\n      inputManager.register(this)\r\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvases.main.width, this.canvases.main.height))\r\n      this.collisionManager = new CollisionManager(this.quadTree)\r\n      this.backgroundAudio = this.assetManager.getSound(EntityType.MAIN_THEME, AssetType.AUDIO_LOOP)\r\n      this.backgroundAudio.play(true)\r\n      this.start()\r\n    }\r\n  }\r\n\r\n  togglePause (): void {\r\n    this.paused = !this.paused\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  spawnWave (): void {\r\n    const height = this.assetManager.getSprite(EntityType.ENEMY).height\r\n    const width = this.assetManager.getSprite(EntityType.ENEMY).width\r\n    let x = 200\r\n    let y = -height\r\n    const spacer = y * 1.5\r\n    for (let i = 1; i <= 21; i++) {\r\n      this.enemyPool.get(x, y, 4)\r\n      x += width + 25\r\n      if (i % 7 === 0) {\r\n        x = 200\r\n        y += spacer\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  render (): void {\r\n    if (this.playing) {\r\n      if (!this.paused) {\r\n        document.getElementById('score').innerHTML = this.playerScore.toString()\r\n        this.quadTree.clear()\r\n        this.quadTree.insert(this.ship)\r\n        this.quadTree.insert(this.ship.pool.getPool())\r\n        this.quadTree.insert(this.enemyPool.getPool())\r\n        this.quadTree.insert(this.enemyBulletPool.getPool())\r\n        this.collisionManager.detectCollision()\r\n\r\n        // Spawn new wave if all enemies are destroyed.\r\n        if (this.enemyPool.getPool().length === 0) {\r\n          this.spawnWave()\r\n        }\r\n\r\n        if (this.ship.alive()) {\r\n          this.background.draw()\r\n          this.ship.move()\r\n          this.ship.pool.render()\r\n          this.enemyPool.render()\r\n          this.enemyBulletPool.render()\r\n        } else {\r\n          this.playing = false\r\n          this.gameOver()\r\n        }\r\n      }\r\n      this.animReqID = window.requestAnimationFrame(() => this.render())\r\n    }\r\n  }\r\n\r\n  scorePoints (): void {\r\n    this.playerScore += 10\r\n  }\r\n\r\n  update (state: any): void {\r\n    if (state[Actions.RESTART]) {\r\n      this.restart()\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  start (): void {\r\n    this.playing = true\r\n    this.render()\r\n    this.ship.draw()\r\n  }\r\n\r\n  gameOver (): void {\r\n    this.backgroundAudio.stop()\r\n    document.getElementById('game-over').style.display = 'block'\r\n    this.gameOverAudio = this.assetManager.getSound(EntityType.GAME_OVER, AssetType.AUDIO_LOOP)\r\n    this.gameOverAudio.play(true)\r\n  }\r\n\r\n  restart (): void {\r\n    if (!this.playing) {\r\n      this.gameOverAudio.stop()\r\n      this.backgroundAudio.play(true)\r\n      document.getElementById('game-over').style.display = 'none'\r\n    } else {\r\n      window.cancelAnimationFrame(this.animReqID)\r\n      this.playing = false\r\n      this.backgroundAudio.stop()\r\n      this.backgroundAudio.play(true)\r\n    }\r\n    this.backgroundContext.clearRect(0, 0, this.canvases.background.width, this.canvases.background.height)\r\n    this.shipContext.clearRect(0, 0, this.canvases.ship.width, this.canvases.ship.height)\r\n    this.mainContext.clearRect(0, 0, this.canvases.main.width, this.canvases.main.height)\r\n    this.quadTree.clear()\r\n    this.background.reset()\r\n    this.playerScore = 0\r\n    this.ship.reset()\r\n    this.enemyBulletPool.clearAll()\r\n    this.enemyPool.clearAll()\r\n    this.ship.pool.clearAll()\r\n    this.start()\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/SpaceGame.ts","import Drawable from '../interfaces/Drawable'\r\nimport Vector2 from '../../lib/math/Vector2'\r\nimport { EntityType } from '../interfaces/CollideAble'\r\n\r\nexport default class Background implements Drawable {\r\n  position: Vector2\r\n  speed: number\r\n  width: number\r\n  height: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  context: any\r\n  type: EntityType\r\n  sprite: any\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {any} context\r\n   * @param {any} sprite\r\n   */\r\n  constructor (x: number, y: number, width: number, height: number, context: any, sprite: any) {\r\n    this.position = new Vector2(x, y)\r\n    this.speed = 1\r\n    this.width = width\r\n    this.height = height\r\n    this.canvasWidth = width\r\n    this.canvasHeight = height\r\n    this.context = context\r\n    this.sprite = sprite\r\n    this.type = EntityType.BACKGROUND\r\n  }\r\n\r\n  reset (): void {\r\n    this.position.set(0, 0)\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  draw (): void {\r\n    this.position.y += this.speed\r\n    this.context.drawImage(this.sprite, this.position.x, this.position.y)\r\n    this.context.drawImage(this.sprite, this.position.x, this.position.y - this.height)\r\n\r\n    if (this.position.y >= this.height) {\r\n      this.position.y = 0\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Background.ts","import Drawable from '../interfaces/Drawable'\r\nimport Vector2 from '../../lib/math/Vector2'\r\nimport Pool from '../structures/Pool'\r\nimport Observer from '../../lib/observer/Observer'\r\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\r\nimport { Actions } from '../../client/InputManager'\r\nimport AssetManager, { AssetType } from '../../client/AssetManager'\r\nimport Sound from '../../audio/Sound'\r\n\r\n/**\r\n *\r\n */\r\nexport default class Ship implements Drawable, Observer, CollideAble {\r\n  position: Vector2\r\n  speed: number\r\n  acceleration: Vector2\r\n  width: number\r\n  height: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  context: any\r\n  sprite: any\r\n  pool: Pool\r\n  counter: number\r\n  collidesWith\r\n  type: EntityType\r\n  colliding: boolean\r\n  velocity: Vector2\r\n  state\r\n  maxTop: number\r\n  startPosition\r\n  settings\r\n  laserSound: Sound\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {number} canvasWidth\r\n   * @param {number} canvasHeight\r\n   * @param context\r\n   * @param {AssetManager} assetManager\r\n   * @param {Pool} pool\r\n   * @param settings\r\n   */\r\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, context: any, assetManager: AssetManager, pool: Pool, settings) {\r\n    this.position = new Vector2(x, y)\r\n    this.startPosition = new Vector2(x, y)\r\n    this.acceleration = new Vector2(0, 0)\r\n    this.velocity = new Vector2(0, 0)\r\n    this.width = width\r\n    this.height = height\r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.context = context\r\n    this.sprite = assetManager.getSprite(EntityType.PLAYER)\r\n    this.type = EntityType.PLAYER\r\n    this.pool = pool\r\n    this.counter = 0\r\n    this.collidesWith = []\r\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\r\n    this.colliding = false\r\n    this.state = {}\r\n    this.settings = settings\r\n    this.maxTop = Math.floor(this.canvasHeight / 4 * 3)\r\n    this.laserSound = assetManager.getSound(EntityType.LASER, AssetType.AUDIO)\r\n  }\r\n\r\n  reset (): void {\r\n    this.position.setVector(this.startPosition)\r\n    this.velocity.set(0, 0)\r\n    this.colliding = false\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  move (): void {\r\n    if (!this.colliding) {\r\n      this.counter++\r\n      this.context.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.width, this.height)\r\n      this.acceleration.set(0, 0)\r\n      if (this.state[Actions.LEFT]) {\r\n        this.acceleration.add(-this.settings.acceleration, 0)\r\n      }\r\n      if (this.state[Actions.RIGHT]) {\r\n        this.acceleration.add(this.settings.acceleration, 0)\r\n      }\r\n      if (this.state[Actions.UP]) {\r\n        this.acceleration.add(0, -this.settings.acceleration)\r\n      }\r\n      if (this.state[Actions.DOWN]) {\r\n        this.acceleration.add(0, this.settings.acceleration)\r\n      }\r\n      this.velocity.multiply(this.settings.friction)\r\n      this.velocity.addVector(this.acceleration)\r\n      this.velocity.limit(this.settings.maxVelocity)\r\n      this.position.addVector(this.velocity)\r\n      if (this.position.x <= 0) {\r\n        this.position.x = 0\r\n        this.velocity.x += -1\r\n      }\r\n      if (this.position.x >= this.canvasWidth - this.width) {\r\n        this.position.x = this.canvasWidth - this.width\r\n      }\r\n      if (this.position.y <= this.maxTop) {\r\n        this.position.y = this.maxTop\r\n      }\r\n      if (this.position.y >= this.canvasHeight - this.height) {\r\n        this.position.y = this.canvasHeight - this.height\r\n      }\r\n\r\n      // Finish by redrawing the ship\r\n      this.draw()\r\n\r\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.fireDelay && !this.colliding) {\r\n        this.fire()\r\n        this.counter = 0\r\n      }\r\n    }\r\n  }\r\n\r\n  alive (): boolean {\r\n    return !this.colliding\r\n  }\r\n\r\n  draw (): void {\r\n    this.context.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\r\n  }\r\n\r\n  update (state: any): void {\r\n    this.state = state\r\n  }\r\n\r\n  fire (): void {\r\n    this.pool.getTwo(\r\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 6,\r\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 6\r\n    )\r\n    this.laserSound.play()\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CollideAble} other\r\n   * @returns {boolean}\r\n   */\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Ship.ts","import AssetManager from '../../client/AssetManager'\r\nimport Bullet from '../entities/Bullet'\r\nimport Enemy from '../entities/Enemy'\r\nimport SpaceGame from '../SpaceGame'\r\nimport { EntityType } from '../interfaces/CollideAble'\r\nimport Drawable from '../interfaces/Drawable'\r\n\r\n/**\r\n *\r\n */\r\nexport default class Pool {\r\n  assetManager: AssetManager\r\n  context: any\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  maxSize: number\r\n  type: EntityType\r\n  pool: any[]\r\n  subPool: Pool\r\n  game: SpaceGame\r\n\r\n  /**\r\n   *\r\n   * @param {AssetManager} assetManager\r\n   * @param {a} context\r\n   * @param {number} canvasWidth\r\n   * @param {number} canvasHeight\r\n   * @param {number} maxSize\r\n   * @param {string} type\r\n   * @param {Pool} pool\r\n   * @param {SpaceGame} game\r\n   */\r\n  constructor (assetManager: AssetManager, context: any, canvasWidth: number, canvasHeight: number, maxSize: number, type: EntityType, pool: Pool = null, game: SpaceGame = null) {\r\n    this.assetManager = assetManager\r\n    this.context = context\r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.maxSize = maxSize\r\n    this.type = type\r\n    this.pool = []\r\n    this.subPool = pool\r\n    this.game = game\r\n    this.init()\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  init (): void {\r\n    if (this.type === EntityType.ENEMY) {\r\n      let sprite = this.assetManager.getSprite(this.type)\r\n      for (let i = 0; i < this.maxSize; i++) {\r\n        this.pool[i] = new Enemy(\r\n          0,\r\n          0,\r\n          sprite.width,\r\n          sprite.height,\r\n          this.canvasWidth,\r\n          this.canvasHeight,\r\n          0,\r\n          this.context,\r\n          sprite,\r\n          this.type,\r\n          this.subPool,\r\n          this.game\r\n        )\r\n      }\r\n    } else {\r\n      for (let i = 0; i < this.maxSize; i++) {\r\n        let sprite = this.assetManager.getSprite(this.type)\r\n        this.pool[i] = new Bullet(\r\n          0,\r\n          0,\r\n          sprite.width,\r\n          sprite.height,\r\n          this.canvasWidth,\r\n          this.canvasHeight,\r\n          0,\r\n          this.context,\r\n          sprite,\r\n          this.type\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} speed\r\n   */\r\n  get (x: number, y: number, speed: number): void {\r\n    let lastElement = this.pool[this.maxSize - 1]\r\n    if (!lastElement.alive) {\r\n      lastElement.spawn(x, y, speed)\r\n      this.pool.unshift(this.pool.pop())\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x1\r\n   * @param {number} y1\r\n   * @param {number} speed1\r\n   * @param {number} x2\r\n   * @param {number} y2\r\n   * @param {number} speed2\r\n   */\r\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\r\n    if (!this.pool[this.maxSize - 1].alive &&\r\n      !this.pool[this.maxSize - 2].alive) {\r\n      this.get(x1, y1, speed1)\r\n      this.get(x2, y2, speed2)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  render (): void {\r\n    for (let i = 0; i < this.pool.length; i++) {\r\n      // Only draw until we find a bullet that is not alive\r\n      if (this.pool[i].alive) {\r\n        if (this.pool[i].draw()) {\r\n          this.pool[i].clear()\r\n          this.pool.push((this.pool.splice(i, 1))[0])\r\n        }\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  clearAll (): void {\r\n    this.pool.forEach(object => object.clear())\r\n  }\r\n\r\n  getPool (): Drawable[] {\r\n    let objects = []\r\n    this.pool.forEach(object => {\r\n      if (object.alive) {\r\n        objects.push(object)\r\n      }\r\n    })\r\n    return objects\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/structures/Pool.ts","import Drawable from '../interfaces/Drawable'\r\nimport Vector2 from '../../lib/math/Vector2'\r\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\r\n\r\n/**\r\n *\r\n */\r\nexport default class Bullet implements Drawable, CollideAble {\r\n  position: Vector2\r\n  speed: number\r\n  width: number\r\n  height: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  context: any\r\n  sprite: any\r\n  alive: boolean\r\n  collidesWith\r\n  type: EntityType\r\n  colliding: boolean\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {number} canvasWidth\r\n   * @param {number} canvasHeight\r\n   * @param {number} speed\r\n   * @param {any} context\r\n   * @param {any} sprite\r\n   * @param {string} type\r\n   */\r\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context: any, sprite: any, type: EntityType) {\r\n    this.position = new Vector2(x, y)\r\n    this.speed = speed\r\n    this.width = width\r\n    this.height = height\r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.context = context\r\n    this.sprite = sprite\r\n    this.alive = false\r\n    this.type = type\r\n    this.colliding = false\r\n    this.collidesWith = []\r\n    if (this.type === EntityType.PLAYER_BULLET) {\r\n      this.collidesWith.push(EntityType.ENEMY)\r\n    } else if (this.type === EntityType.ENEMY_BULLET) {\r\n      this.collidesWith.push(EntityType.PLAYER)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} speed\r\n   */\r\n  spawn (x: number, y: number, speed: number): void {\r\n    this.position.set(x, y)\r\n    this.speed = speed\r\n    this.alive = true\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  draw () {\r\n    this.context.clearRect(this.position.x - 1, this.position.y - 1, this.width + 1, this.height + 1)\r\n    this.position.y -= this.speed\r\n    if (this.colliding) {\r\n      return true\r\n    } else if (this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.height) {\r\n      return true\r\n    } else if (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.canvasHeight) {\r\n      return true\r\n    } else {\r\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\r\n      return false\r\n    }\r\n  }\r\n\r\n  clear (): void {\r\n    this.position.set(0, 0)\r\n    this.speed = 0\r\n    this.alive = false\r\n    this.colliding = false\r\n  }\r\n\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Bullet.ts","import Drawable from '../interfaces/Drawable'\r\nimport Vector2 from '../../lib/math/Vector2'\r\nimport Pool from '../structures/Pool'\r\nimport CollideAble, { EntityType } from '../interfaces/CollideAble'\r\nimport SpaceGame from '../SpaceGame'\r\nimport { AssetType } from '../../client/AssetManager'\r\nimport Sound from '../../audio/Sound'\r\n\r\n/**\r\n * Enemy ship class.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Enemy implements Drawable, CollideAble {\r\n  position: Vector2\r\n  speed: number\r\n  speedX: number\r\n  speedY: number\r\n  leftEdge: number\r\n  rightEdge: number\r\n  bottomEdge: number\r\n  width: number\r\n  height: number\r\n  canvasWidth: number\r\n  canvasHeight: number\r\n  context: any\r\n  sprite: any\r\n  percentFire: number\r\n  chance: number\r\n  alive: boolean\r\n  bulletPool: Pool\r\n  collidesWith\r\n  type: EntityType\r\n  colliding: boolean\r\n  game: SpaceGame\r\n  explosionSound: Sound\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   * @param {number} canvasWidth\r\n   * @param {number} canvasHeight\r\n   * @param {number} speed\r\n   * @param {any} context\r\n   * @param {any} sprite\r\n   * @param {string} type\r\n   * @param {Pool} bulletPool\r\n   * @param {SpaceGame} game\r\n   */\r\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context, sprite, type: EntityType, bulletPool: Pool, game: SpaceGame) {\r\n    this.position = new Vector2(x, y)\r\n    this.width = width\r\n    this.height = height\r\n    this.canvasWidth = canvasWidth\r\n    this.canvasHeight = canvasHeight\r\n    this.speed = speed\r\n    this.context = context\r\n    this.sprite = sprite\r\n    this.percentFire = 0.001\r\n    this.chance = 0\r\n    this.alive = false\r\n    this.type = type\r\n    this.collidesWith = []\r\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\r\n    this.colliding = false\r\n    this.bulletPool = bulletPool\r\n    this.game = game\r\n    this.explosionSound = this.game.assetManager.getSound(EntityType.EXPLOSION_I, AssetType.AUDIO)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} speed\r\n   */\r\n  spawn (x: number, y: number, speed: number): void {\r\n    this.position.x = x\r\n    this.position.y = y\r\n    this.speed = speed\r\n    this.speedX = 0\r\n    this.speedY = speed\r\n    this.alive = true\r\n    this.leftEdge = this.position.x - 180\r\n    this.rightEdge = this.position.x + 180\r\n    this.bottomEdge = this.position.y + 280\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  draw () {\r\n    this.context.clearRect(this.position.x - 1, this.position.y, this.width + 1, this.height)\r\n    this.position.x += this.speedX\r\n    this.position.y += this.speedY\r\n    if (this.position.x <= this.leftEdge) {\r\n      this.speedX = this.speed\r\n    } else if (this.position.x >= this.rightEdge + this.width) {\r\n      this.speedX = -this.speed\r\n    } else if (this.position.y >= this.bottomEdge) {\r\n      this.speed = 1.5\r\n      this.speedY = 0\r\n      this.position.y -= 5\r\n      this.speedX = -this.speed\r\n    }\r\n    if (!this.colliding) {\r\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\r\n      // Enemy has a chance to shoot every movement\r\n      this.chance = Math.floor(Math.random() * 101)\r\n      if (this.chance / 100 < this.percentFire) {\r\n        this.fire()\r\n      }\r\n      return false\r\n    } else {\r\n      this.game.scorePoints()\r\n      this.explosionSound.play()\r\n      return true\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  fire (): void {\r\n    this.bulletPool.get(Math.floor(this.position.x + this.width / 2), Math.floor(this.position.y + this.height), -5)\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  clear (): void {\r\n    this.position.x = 0\r\n    this.position.y = 0\r\n    this.speed = 0\r\n    this.speedX = 0\r\n    this.speedY = 0\r\n    this.alive = false\r\n    this.colliding = false\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {CollideAble} other\r\n   */\r\n  isCollideAbleWith (other: CollideAble): boolean {\r\n    return this.collidesWith.includes(other.type.toString())\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/entities/Enemy.ts","import Settings from './Settings'\r\nimport { Actions } from './InputManager'\r\nimport AssetManager from './AssetManager'\r\nimport EventHandler from '../lib/event/EventHandler'\r\n\r\nexport default class SettingsMenu {\r\n  element: HTMLDivElement\r\n  mainMenu: HTMLDivElement\r\n  settings: Settings\r\n  assetManager: AssetManager\r\n  showing: boolean\r\n\r\n  constructor (element, settings: Settings, assetManager: AssetManager) {\r\n    this.element = element\r\n    this.settings = settings\r\n    this.assetManager = assetManager\r\n    this.showing = false\r\n  }\r\n\r\n  createMainMenu (): void {\r\n    this.mainMenu = document.createElement('div')\r\n    this.mainMenu.classList.add('tab')\r\n    this.element.appendChild(this.mainMenu)\r\n  }\r\n\r\n  openTab (event, tabId: string): void {\r\n    let tabContent\r\n    let tabLink\r\n    tabContent = document.getElementsByClassName('tabContent')\r\n    for (let i = 0; i < tabContent.length; i++) {\r\n      tabContent[i].style.display = 'none'\r\n    }\r\n    tabLink = document.getElementsByClassName('tabLink')\r\n    for (let i = 0; i < tabLink.length; i++) {\r\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\r\n    }\r\n    document.getElementById(tabId).style.display = 'block'\r\n    event.currentTarget.className += ' active'\r\n  }\r\n\r\n  createKeyboardMenu (): void {\r\n    let keyboardMenuId = 'keyboardMenu'\r\n    let keyboardLink = document.createElement('button')\r\n    let keyboardDiv = document.createElement('div')\r\n    let title = document.createElement('h4')\r\n    let form = document.createElement('form')\r\n    let submit = document.createElement('input')\r\n    EventHandler.registerOnElement(\r\n      keyboardLink,\r\n      ['click', 'touchstart'],\r\n      event => this.openTab(event, keyboardMenuId)\r\n    )\r\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\r\n    keyboardLink.classList.add('tabLink')\r\n    this.mainMenu.appendChild(keyboardLink)\r\n    keyboardDiv.setAttribute('id', keyboardMenuId)\r\n    keyboardDiv.classList.add('tabContent')\r\n    title.appendChild(document.createTextNode('Keyboard'))\r\n    form.setAttribute('id', 'keyboardSettings')\r\n    form.setAttribute('method', 'post')\r\n    submit.setAttribute('type', 'submit')\r\n    submit.setAttribute('value', 'Save')\r\n    keyboardDiv.appendChild(title)\r\n    keyboardDiv.appendChild(form)\r\n    this.element.appendChild(keyboardDiv)\r\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\r\n    form.appendChild(submit)\r\n    form.addEventListener('submit', event => {\r\n      event.preventDefault()\r\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\r\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\r\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\r\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\r\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\r\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\r\n      this.clear()\r\n    })\r\n  }\r\n\r\n  createPlayerMenu (): void {\r\n    let playerMenuId = 'playerMenu'\r\n    let playerLink = document.createElement('button')\r\n    let playerDiv = document.createElement('div')\r\n    let playerTitle = document.createElement('h4')\r\n    let playerForm = document.createElement('form')\r\n    let playerSubmit = document.createElement('input')\r\n    EventHandler.registerOnElement(\r\n      playerLink,\r\n      ['click', 'touchstart'],\r\n      event => this.openTab(event, playerMenuId)\r\n    )\r\n    playerLink.appendChild(document.createTextNode('Player'))\r\n    playerLink.classList.add('tabLink')\r\n    this.mainMenu.appendChild(playerLink)\r\n    playerDiv.setAttribute('id', playerMenuId)\r\n    playerDiv.classList.add('tabContent')\r\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\r\n    playerForm.setAttribute('id', 'playerSettings')\r\n    playerForm.setAttribute('method', 'post')\r\n    playerSubmit.setAttribute('type', 'submit')\r\n    playerSubmit.setAttribute('value', 'Save')\r\n    playerDiv.appendChild(playerTitle)\r\n    playerDiv.appendChild(playerForm)\r\n    this.element.appendChild(playerDiv)\r\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\r\n    playerForm.appendChild(playerSubmit)\r\n    playerForm.addEventListener('submit', event => {\r\n      event.preventDefault()\r\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\r\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\r\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\r\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\r\n      this.clear()\r\n    })\r\n  }\r\n\r\n  createAudioMenu (): void {\r\n    let audioMenuId = 'audioMenu'\r\n    let audioLink = document.createElement('button')\r\n    let audioDiv = document.createElement('div')\r\n    let div = document.createElement('div')\r\n    let audioTitle = document.createElement('h4')\r\n    let audioLabel = document.createElement('label')\r\n    let audioSlide = document.createElement('input')\r\n    EventHandler.registerOnElement(\r\n      audioLink,\r\n      ['click', 'touchstart'],\r\n      event => this.openTab(event, audioMenuId)\r\n    )\r\n    audioLink.classList.add('tabLink')\r\n    audioLink.appendChild(document.createTextNode('Audio'))\r\n    this.mainMenu.appendChild(audioLink)\r\n    audioDiv.setAttribute('id', audioMenuId)\r\n    audioDiv.classList.add('tabContent')\r\n    div.classList.add('row')\r\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\r\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\r\n    audioLabel.setAttribute('for', 'masterVolume')\r\n    audioSlide.setAttribute('id', 'masterVolume')\r\n    audioSlide.setAttribute('type', 'range')\r\n    audioSlide.setAttribute('min', '0')\r\n    audioSlide.setAttribute('max', '1')\r\n    audioSlide.setAttribute('step', '0.1')\r\n    audioSlide.addEventListener('change', event => this.assetManager.adjustMasterVolume(Number(audioSlide.value)))\r\n    div.appendChild(audioTitle)\r\n    div.appendChild(audioLabel)\r\n    div.appendChild(audioSlide)\r\n    audioDiv.appendChild(div)\r\n\r\n    let ambientDiv = document.createElement('div')\r\n    let ambientLabel = document.createElement('label')\r\n    let ambientSlide = document.createElement('input')\r\n    ambientDiv.classList.add('row')\r\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\r\n    ambientLabel.setAttribute('for', 'ambientVolume')\r\n    ambientSlide.setAttribute('id', 'ambientVolume')\r\n    ambientSlide.setAttribute('type', 'range')\r\n    ambientSlide.setAttribute('min', '0')\r\n    ambientSlide.setAttribute('max', '1')\r\n    ambientSlide.setAttribute('step', '0.1')\r\n    ambientSlide.addEventListener('change', event => this.assetManager.adjustAmbientVolume(Number(ambientSlide.value)))\r\n    ambientDiv.appendChild(ambientLabel)\r\n    ambientDiv.appendChild(ambientSlide)\r\n    audioDiv.appendChild(ambientDiv)\r\n\r\n    let effectsDiv = document.createElement('div')\r\n    let effectsLabel = document.createElement('label')\r\n    let effectsSlide = document.createElement('input')\r\n    effectsDiv.classList.add('row')\r\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\r\n    effectsLabel.setAttribute('for', 'effectsVolume')\r\n    effectsSlide.setAttribute('id', 'effectsVolume')\r\n    effectsSlide.setAttribute('type', 'range')\r\n    effectsSlide.setAttribute('min', '0')\r\n    effectsSlide.setAttribute('max', '1')\r\n    effectsSlide.setAttribute('step', '0.1')\r\n    effectsSlide.addEventListener('change', event => this.assetManager.adjustEffectsVolume(Number(effectsSlide.value)))\r\n    effectsDiv.appendChild(effectsLabel)\r\n    effectsDiv.appendChild(effectsSlide)\r\n    audioDiv.appendChild(effectsDiv)\r\n    this.element.appendChild(audioDiv)\r\n  }\r\n\r\n  init (): void {\r\n    this.createMainMenu()\r\n    this.createKeyboardMenu()\r\n    this.createPlayerMenu()\r\n    this.createAudioMenu()\r\n  }\r\n\r\n  clear (): void {\r\n    while (this.element.firstChild) {\r\n      this.element.removeChild(this.element.firstChild)\r\n    }\r\n    this.init()\r\n  }\r\n\r\n  addPlayerSettingEntry (setting, element): void {\r\n    let label = document.createElement('label')\r\n    let input = document.createElement('input')\r\n    let row = document.createElement('div')\r\n    label.setAttribute('for', setting)\r\n    label.appendChild(document.createTextNode(setting + ':'))\r\n    input.setAttribute('id', setting)\r\n    input.setAttribute('type', 'number')\r\n    input.setAttribute('name', setting)\r\n    input.setAttribute('value', this.settings.player[setting])\r\n    row.classList.add('row')\r\n    row.appendChild(label)\r\n    row.appendChild(input)\r\n    element.appendChild(row)\r\n  }\r\n\r\n  addEntry (setting, element): void {\r\n    let row = document.createElement('div')\r\n    let label = document.createElement('label')\r\n    let input = document.createElement('input')\r\n    row.classList.add('row')\r\n    label.setAttribute('for', this.settings.keyBoard[setting])\r\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\r\n    input.setAttribute('id', this.settings.keyBoard[setting])\r\n    input.setAttribute('type', 'text')\r\n    input.setAttribute('name', this.settings.keyBoard[setting])\r\n    input.setAttribute('value', setting)\r\n    row.appendChild(label)\r\n    row.appendChild(input)\r\n    element.appendChild(row)\r\n  }\r\n\r\n  toggleShow (): void {\r\n    if (this.showing) {\r\n      this.element.style.display = 'none'\r\n      this.showing = false\r\n    } else {\r\n      this.element.style.display = 'block'\r\n      this.showing = true\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/SettingsMenu.ts"],"sourceRoot":""}