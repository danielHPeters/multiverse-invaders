{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/interfaces/ICollideAble.ts","webpack:///./src/lib/client/InputManager.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/client/AssetManager.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/application/GameLoop.ts","webpack:///./src/lib/audio/Sound.ts","webpack:///./src/lib/client/AudioManager.ts","webpack:///./src/lib/client/SettingsMenu.ts","webpack:///./src/lib/client/Settings.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/models/Enemy.ts","webpack:///./src/models/Bullet.ts","webpack:///./src/models/Pool.ts","webpack:///./src/models/Ship.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/models/Background.ts","webpack:///./src/application/SpaceGame.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/graphics/2D/SpriteSheet.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","EntityType","PLAYER","ENEMY","ENEMY_BULLET","PLAYER_BULLET","BACKGROUND","MAP","GAME_OVER","LASER","MAIN_THEME","EXPLOSION_I","EXPLOSION_II","BOX","ARENA","Observable_1","Actions","UP","DOWN","LEFT","RIGHT","SHOOT","RESTART","ROTATE_LEFT","ROTATE_RIGHT","[object Object]","settings","super","this","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","el","document","getElementById","evt","preventDefault","touchstartX","pageX","touchstartY","pageY","thisInstance","reset","changedTouches","toucheMoveX","touchMoveY","length","a","w","space","Vector2","x","y","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","AssetId","SpriteSheet_1","Ajax_1","AssetType","SPRITE","SPRITE_SHEET","AUDIO","AUDIO_AMB","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","loadAudio","loadSprite","loadSpriteSheet","ambient","createSound","element","events","listener","Vector2_1","ICollideAble_1","width","height","position","colliding","collidesWith","other","includes","toString","game","lastTime","running","frameId","requestAnimationFrame","time","loop","cancelAnimationFrame","stop","paused","diff","update","render","audioContext","masterGain","gainNode","createGain","gain","connect","playing","source","createBufferSource","Sound_1","initAudioContext","AudioContext","webkitAudioContext","effectsGain","ambientGain","destination","console","log","data","decodeAudioData","then","error","InputManager_1","EventHandler_1","assetManager","showing","mainMenu","createElement","classList","add","appendChild","tabId","tabContent","tabLink","getElementsByClassName","style","display","className","replace","currentTarget","keyboardLink","keyboardDiv","title","form","submit","registerOnElement","openTab","createTextNode","setAttribute","keys","setting","addEntry","setKey","clear","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","player","addPlayerSettingEntry","acceleration","Number","maxVelocity","friction","fireDelay","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row","q","master","effects","filter","newKey","action","oldKey","findKey","quadTree","objects","getAllObjects","obj","findObjects","j","isCollideAbleWith","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","nodes","node","returnedObjects","index","getIndex","Array","insert","split","splice","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","AssetManager_1","AssetId_1","canvasWidth","canvasHeight","speed","context","bulletPool","percentFire","chance","alive","explosionSound","getSound","speedX","speedY","leftEdge","rightEdge","bottomEdge","clearRect","scorePoints","play","drawImage","random","fire","set","Bullet_1","Enemy_1","maxSize","asId","pool","assetId","subPool","getSprite","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","draw","startPosition","velocity","counter","maxTop","laserSound","setVector","addVector","limit","getTwo","_observers","_state","observer","obs","observers","Background_1","Ship_1","Pool_1","QuadTree_1","CollisionManager_1","inputManager","canvases","background","getContext","backgroundContext","shipContext","ship","mainContext","main","playerScore","shipStartX","shipStartY","enemyBulletPool","enemyPool","spawnWave","register","collisionManager","backgroundAudio","spacer","innerHTML","getPool","detectCollision","gameOver","animReqID","restart","gameOverAudio","clearAll","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","SpaceGame_1","Settings_1","SettingsMenu_1","AudioManager_1","GameLoop_1","settingsMenu","queueDownload","downloadAll","shoot","cancelShoot","toggleShow","togglePause"],"mappings":"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","file":"multiverseInvaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collideable entities.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface ICollideAble {\n  collidesWith: EntityType[]\n  colliding: boolean\n  type: EntityType\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean\n}\n","import Observable from '../observer/Observable'\nimport Settings from './Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../ajax/Ajax'\nimport { AssetId } from '../../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport ICollideAble, { EntityType } from '../interfaces/ICollideAble'\n\n/**\n * Hitbox used for defining collision boundaries.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class HitBox implements ICollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import IGameLoop from '../lib/interfaces/IGameLoop'\nimport IGame from '../lib/interfaces/IGame'\n\n/**\n * Game loop.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class GameLoop implements IGameLoop {\n  public game: IGame\n  public lastTime: number\n  public frameId: number\n\n  /**\n   * Constructor.\n   *\n   * @param {IGame} game Game instance\n   */\n  constructor (game: IGame) {\n    this.game = game\n    this.lastTime = null\n  }\n\n  /**\n   *\n   */\n  public start (): void {\n    this.game.init()\n    this.game.state.running = true\n    this.frameId = requestAnimationFrame(time => this.loop(time))\n  }\n\n  /**\n   *\n   */\n  public stop (): void {\n    this.game.state.running = false\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId)\n    }\n  }\n\n  public restart (): void {\n    this.stop()\n    this.start()\n  }\n\n  /**\n   *\n   */\n  public togglePause (): void {\n    this.game.state.paused = !this.game.state.paused\n  }\n\n  /**\n   *\n   */\n  public loop (time: number): void {\n    if (this.game.state.running) {\n      if (!this.game.state.paused) {\n        if (this.lastTime !== null) {\n          const diff = time - this.lastTime\n          this.game.update(diff / 1000)\n        }\n        this.lastTime = time\n        this.game.render()\n        this.frameId = requestAnimationFrame(time => this.loop(time))\n      }\n    }\n  }\n}","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    this.source.stop(0)\n  }\n}\n","import Sound from '../audio/Sound'\n\n/**\n * Audiomanager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n","import Settings from './Settings'\nimport { Actions } from './InputManager'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../event/EventHandler'\nimport AudioManager from './AudioManager'\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLDivElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  showing: boolean\n\n  constructor (element, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = element\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.showing = false\n  }\n\n  createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add('tab')\n    this.element.appendChild(this.mainMenu)\n  }\n\n  openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName('tabContent')\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName('tabLink')\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' active'\n  }\n\n  createKeyboardMenu (): void {\n    let keyboardMenuId = 'keyboardMenu'\n    let keyboardLink = document.createElement('button')\n    let keyboardDiv = document.createElement('div')\n    let title = document.createElement('h4')\n    let form = document.createElement('form')\n    let submit = document.createElement('input')\n    EventHandler.registerOnElement(\n      keyboardLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, keyboardMenuId)\n    )\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\n    keyboardLink.classList.add('tabLink')\n    this.mainMenu.appendChild(keyboardLink)\n    keyboardDiv.setAttribute('id', keyboardMenuId)\n    keyboardDiv.classList.add('tabContent')\n    title.appendChild(document.createTextNode('Keyboard'))\n    form.setAttribute('id', 'keyboardSettings')\n    form.setAttribute('method', 'post')\n    submit.setAttribute('type', 'submit')\n    submit.setAttribute('value', 'Save')\n    keyboardDiv.appendChild(title)\n    keyboardDiv.appendChild(form)\n    this.element.appendChild(keyboardDiv)\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\n    form.appendChild(submit)\n    form.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\n      this.clear()\n    })\n  }\n\n  createPlayerMenu (): void {\n    let playerMenuId = 'playerMenu'\n    let playerLink = document.createElement('button')\n    let playerDiv = document.createElement('div')\n    let playerTitle = document.createElement('h4')\n    let playerForm = document.createElement('form')\n    let playerSubmit = document.createElement('input')\n    EventHandler.registerOnElement(\n      playerLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, playerMenuId)\n    )\n    playerLink.appendChild(document.createTextNode('Player'))\n    playerLink.classList.add('tabLink')\n    this.mainMenu.appendChild(playerLink)\n    playerDiv.setAttribute('id', playerMenuId)\n    playerDiv.classList.add('tabContent')\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\n    playerForm.setAttribute('id', 'playerSettings')\n    playerForm.setAttribute('method', 'post')\n    playerSubmit.setAttribute('type', 'submit')\n    playerSubmit.setAttribute('value', 'Save')\n    playerDiv.appendChild(playerTitle)\n    playerDiv.appendChild(playerForm)\n    this.element.appendChild(playerDiv)\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\n    playerForm.appendChild(playerSubmit)\n    playerForm.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\n      this.clear()\n    })\n  }\n\n  createAudioMenu (): void {\n    let audioMenuId = 'audioMenu'\n    let audioLink = document.createElement('button')\n    let audioDiv = document.createElement('div')\n    let div = document.createElement('div')\n    let audioTitle = document.createElement('h4')\n    let audioLabel = document.createElement('label')\n    let audioSlide = document.createElement('input')\n    EventHandler.registerOnElement(\n      audioLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, audioMenuId)\n    )\n    audioLink.classList.add('tabLink')\n    audioLink.appendChild(document.createTextNode('Audio'))\n    this.mainMenu.appendChild(audioLink)\n    audioDiv.setAttribute('id', audioMenuId)\n    audioDiv.classList.add('tabContent')\n    div.classList.add('row')\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\n    audioLabel.setAttribute('for', 'masterVolume')\n    audioSlide.setAttribute('id', 'masterVolume')\n    audioSlide.setAttribute('type', 'range')\n    audioSlide.setAttribute('min', '0')\n    audioSlide.setAttribute('max', '1')\n    audioSlide.setAttribute('step', '0.1')\n    audioSlide.addEventListener('change', event => this.audioManager.adjustMasterVolume(Number(audioSlide.value)))\n    div.appendChild(audioTitle)\n    div.appendChild(audioLabel)\n    div.appendChild(audioSlide)\n    audioDiv.appendChild(div)\n\n    let ambientDiv = document.createElement('div')\n    let ambientLabel = document.createElement('label')\n    let ambientSlide = document.createElement('input')\n    ambientDiv.classList.add('row')\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\n    ambientLabel.setAttribute('for', 'ambientVolume')\n    ambientSlide.setAttribute('id', 'ambientVolume')\n    ambientSlide.setAttribute('type', 'range')\n    ambientSlide.setAttribute('min', '0')\n    ambientSlide.setAttribute('max', '1')\n    ambientSlide.setAttribute('step', '0.1')\n    ambientSlide.addEventListener('change', event => this.audioManager.adjustAmbientVolume(Number(ambientSlide.value)))\n    ambientDiv.appendChild(ambientLabel)\n    ambientDiv.appendChild(ambientSlide)\n    audioDiv.appendChild(ambientDiv)\n\n    let effectsDiv = document.createElement('div')\n    let effectsLabel = document.createElement('label')\n    let effectsSlide = document.createElement('input')\n    effectsDiv.classList.add('row')\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\n    effectsLabel.setAttribute('for', 'effectsVolume')\n    effectsSlide.setAttribute('id', 'effectsVolume')\n    effectsSlide.setAttribute('type', 'range')\n    effectsSlide.setAttribute('min', '0')\n    effectsSlide.setAttribute('max', '1')\n    effectsSlide.setAttribute('step', '0.1')\n    effectsSlide.addEventListener('change', event => this.audioManager.adjustEffectsVolume(Number(effectsSlide.value)))\n    effectsDiv.appendChild(effectsLabel)\n    effectsDiv.appendChild(effectsSlide)\n    audioDiv.appendChild(effectsDiv)\n    this.element.appendChild(audioDiv)\n  }\n\n  init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu()\n    this.createPlayerMenu()\n    this.createAudioMenu()\n  }\n\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  addPlayerSettingEntry (setting, element): void {\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    let row = document.createElement('div')\n    label.setAttribute('for', setting)\n    label.appendChild(document.createTextNode(setting + ':'))\n    input.setAttribute('id', setting)\n    input.setAttribute('type', 'number')\n    input.setAttribute('name', setting)\n    input.setAttribute('value', this.settings.player[setting])\n    row.classList.add('row')\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  addEntry (setting, element): void {\n    let row = document.createElement('div')\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', this.settings.keyBoard[setting])\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\n    input.setAttribute('id', this.settings.keyBoard[setting])\n    input.setAttribute('type', 'text')\n    input.setAttribute('name', this.settings.keyBoard[setting])\n    input.setAttribute('value', setting)\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  toggleShow (): void {\n    if (this.showing) {\n      this.element.style.display = 'none'\n      this.showing = false\n    } else {\n      this.element.style.display = 'block'\n      this.showing = true\n    }\n  }\n}\n","import { Actions } from './InputManager'\n\n/**\n * Settings class for models applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n\n  constructor () {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART,\n      'q': Actions.ROTATE_LEFT,\n      'e': Actions.ROTATE_RIGHT\n    }\n    this.player = {\n      maxVelocity: 15,\n      fireDelay: 15,\n      friction: 0.7,\n      acceleration: 3\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n","import QuadTree from './QuadTree'\n\nexport default class CollisionManager {\n  quadTree: QuadTree\n\n  constructor (quadTree) {\n    this.quadTree = quadTree\n  }\n\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        // DETECT COLLISION ALGORITHM\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].width &&\n            Math.floor(objects[i].position.x) + objects[i].width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].height &&\n            Math.floor(objects[i].position.y) + objects[i].height > Math.floor(obj[j].position.y))) {\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}","import HitBox from './HitBox'\nimport ICollideAble from '../interfaces/ICollideAble'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: ICollideAble[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all models objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport SpaceGame from '../application/SpaceGame'\nimport { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy implements IDrawable, ICollideAble {\n  position: Vector2\n  speed: number\n  speedX: number\n  speedY: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  game: SpaceGame\n  explosionSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   * @param {Pool} bulletPool\n   * @param {SpaceGame} game\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context, sprite, type: EntityType, bulletPool: Pool, game: SpaceGame) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.speed = speed\n    this.context = context\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.game = game\n    this.explosionSound = this.game.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.x = x\n    this.position.y = y\n    this.speed = speed\n    this.speedX = 0\n    this.speedY = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y, this.width + 1, this.height)\n    this.position.x += this.speedX\n    this.position.y += this.speedY\n    if (this.position.x <= this.leftEdge) {\n      this.speedX = this.speed\n    } else if (this.position.x >= this.rightEdge + this.width) {\n      this.speedX = -this.speed\n    } else if (this.position.y >= this.bottomEdge) {\n      this.speed = 1.5\n      this.speedY = 0\n      this.position.y -= 5\n      this.speedX = -this.speed\n    }\n    if (!this.colliding) {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      // Enemy has a chance to shoot every movement\n      this.chance = Math.floor(Math.random() * 101)\n      if (this.chance / 100 < this.percentFire) {\n        this.fire()\n      }\n      return false\n    } else {\n      this.game.scorePoints()\n      this.explosionSound.play()\n      return true\n    }\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.width / 2), Math.floor(this.position.y + this.height), -5)\n  }\n\n  /**\n   *\n   */\n  clear (): void {\n    this.position.x = 0\n    this.position.y = 0\n    this.speed = 0\n    this.speedX = 0\n    this.speedY = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\n\n/**\n *\n */\nexport default class Bullet implements IDrawable, ICollideAble {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} speed\n   * @param {any} context\n   * @param {any} sprite\n   * @param {string} type\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, speed: number, context: any, sprite: any, type: EntityType) {\n    this.position = new Vector2(x, y)\n    this.speed = speed\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  draw () {\n    this.context.clearRect(this.position.x - 1, this.position.y - 1, this.width + 1, this.height + 1)\n    this.position.y -= this.speed\n    if (this.colliding) {\n      return true\n    } else if (this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.height) {\n      return true\n    } else if (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.canvasHeight) {\n      return true\n    } else {\n      this.context.drawImage(this.sprite, this.position.x, this.position.y)\n      return false\n    }\n  }\n\n  clear (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import AssetManager from '../lib/client/AssetManager'\nimport Bullet from './Bullet'\nimport Enemy from './Enemy'\nimport SpaceGame from '../application/SpaceGame'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport IDrawable from '../lib/interfaces/IDrawable'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n *\n */\nexport default class Pool {\n  assetManager: AssetManager\n  context: any\n  canvasWidth: number\n  canvasHeight: number\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  game: SpaceGame\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {a} context\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param {number} maxSize\n   * @param {string} type\n   * @param {AssetId} asId\n   * @param {Pool} pool\n   * @param {SpaceGame} game\n   */\n  constructor (assetManager: AssetManager, context: any, canvasWidth: number, canvasHeight: number, maxSize: number, type: EntityType, asId: AssetId, pool: Pool = null, game: SpaceGame = null) {\n    this.assetManager = assetManager\n    this.context = context\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    if (this.type === EntityType.ENEMY) {\n      let sprite = this.assetManager.getSprite(this.assetId)\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type,\n          this.subPool,\n          this.game\n        )\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        let sprite = this.assetManager.getSprite(this.assetId)\n        this.pool[i] = new Bullet(\n          0,\n          0,\n          sprite.width,\n          sprite.height,\n          this.canvasWidth,\n          this.canvasHeight,\n          0,\n          this.context,\n          sprite,\n          this.type\n        )\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  get (x: number, y: number, speed: number): void {\n    let lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        if (this.pool[i].draw()) {\n          this.pool[i].clear()\n          this.pool.push((this.pool.splice(i, 1))[0])\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  clearAll (): void {\n    this.pool.forEach(object => object.clear())\n  }\n\n  getPool (): IDrawable[] {\n    let objects = []\n    this.pool.forEach(object => {\n      if (object.alive) {\n        objects.push(object)\n      }\n    })\n    return objects\n  }\n}\n","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport Observer from '../lib/observer/Observer'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport { Actions } from '../lib/client/InputManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\n\n/**\n *\n */\nexport default class Ship implements IDrawable, Observer, ICollideAble {\n  position: Vector2\n  speed: number\n  acceleration: Vector2\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  sprite: any\n  pool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings\n  laserSound: Sound\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {number} canvasWidth\n   * @param {number} canvasHeight\n   * @param context\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param settings\n   */\n  constructor (x: number, y: number, width: number, height: number, canvasWidth: number, canvasHeight: number, context: any, assetManager: AssetManager, pool: Pool, settings) {\n    this.position = new Vector2(x, y)\n    this.startPosition = new Vector2(x, y)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.width = width\n    this.height = height\n    this.canvasWidth = canvasWidth\n    this.canvasHeight = canvasHeight\n    this.context = context\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.pool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.maxTop = Math.floor(this.canvasHeight / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n  }\n\n  reset (): void {\n    this.position.setVector(this.startPosition)\n    this.velocity.set(0, 0)\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  move (): void {\n    if (!this.colliding) {\n      this.counter++\n      this.context.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.width, this.height)\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.acceleration)\n      }\n      this.velocity.multiply(this.settings.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.maxVelocity)\n      this.position.addVector(this.velocity)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.canvasWidth - this.width) {\n        this.position.x = this.canvasWidth - this.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.canvasHeight - this.height) {\n        this.position.y = this.canvasHeight - this.height\n      }\n\n      // Finish by redrawing the ship\n      this.draw()\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.fireDelay && !this.colliding) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  alive (): boolean {\n    return !this.colliding\n  }\n\n  draw (): void {\n    this.context.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n\n  fire (): void {\n    this.pool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 6,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 6\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n","import IDrawable from '../lib/interfaces/IDrawable'\nimport Vector2 from '../lib/math/Vector2'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\n\nexport default class Background implements IDrawable {\n  position: Vector2\n  speed: number\n  width: number\n  height: number\n  canvasWidth: number\n  canvasHeight: number\n  context: any\n  type: EntityType\n  sprite: any\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   * @param {any} context\n   * @param {any} sprite\n   */\n  constructor (x: number, y: number, width: number, height: number, context: any, sprite: any) {\n    this.position = new Vector2(x, y)\n    this.speed = 1\n    this.width = width\n    this.height = height\n    this.canvasWidth = width\n    this.canvasHeight = height\n    this.context = context\n    this.sprite = sprite\n    this.type = EntityType.BACKGROUND\n  }\n\n  reset (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   */\n  draw (): void {\n    this.position.y += this.speed\n    this.context.drawImage(this.sprite, this.position.x, this.position.y)\n    this.context.drawImage(this.sprite, this.position.x, this.position.y - this.height)\n\n    if (this.position.y >= this.height) {\n      this.position.y = 0\n    }\n  }\n}\n","import Background from '../models/Background'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport InputManager, { Actions } from '../lib/client/InputManager'\nimport Ship from '../models/Ship'\nimport Pool from '../models/Pool'\nimport QuadTree from '../lib/collision/QuadTree'\nimport HitBox from '../lib/collision/HitBox'\nimport Settings from '../lib/client/Settings'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Sound from '../lib/audio/Sound'\nimport Observer from '../lib/observer/Observer'\nimport { AssetId } from '../enum/AssetId'\nimport IGame from '../lib/interfaces/IGame'\nimport IGameState from '../lib/interfaces/IGameState'\nimport ICollisionManager from '../lib/interfaces/ICollisionManager'\n\n/**\n * Space models main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpaceGame implements Observer, IGame {\n  state: IGameState\n  background: Background\n  ship: Ship\n  enemyPool: Pool\n  enemyBulletPool: Pool\n  backgroundContext\n  shipContext\n  mainContext\n  playing: boolean\n  window\n  assetManager: AssetManager\n  inputManager: InputManager\n  collisionManager: ICollisionManager\n  settings: Settings\n  quadTree: QuadTree\n  playerScore: number\n  shipStartX: number\n  shipStartY: number\n  paused: boolean\n  canvases\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  animReqID\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param canvases\n   */\n  constructor (assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\n    this.playing = false\n    this.paused = false\n    this.window = window\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.canvases = canvases\n    this.init()\n  }\n\n  init (): void {\n    if (this.canvases.background.getContext) {\n      this.backgroundContext = this.canvases.background.getContext('2d')\n      this.shipContext = this.canvases.ship.getContext('2d')\n      this.mainContext = this.canvases.main.getContext('2d')\n      this.playerScore = 0\n      this.background = new Background(\n        0,\n        0,\n        this.canvases.background.width,\n        this.canvases.background.height,\n        this.backgroundContext,\n        this.assetManager.getSprite(AssetId.BACKGROUND)\n      )\n      this.shipStartX = this.canvases.ship.width / 2 - this.assetManager.getSprite(AssetId.PLAYER).width\n      this.shipStartY = this.canvases.ship.height / 4 * 3 + this.assetManager.getSprite(AssetId.PLAYER).height * 2\n      this.ship = new Ship(\n        this.shipStartX,\n        this.shipStartY,\n        this.assetManager.getSprite(AssetId.PLAYER).width,\n        this.assetManager.getSprite(AssetId.PLAYER).height,\n        this.canvases.ship.width,\n        this.canvases.ship.height,\n        this.shipContext,\n        this.assetManager,\n        new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET),\n        this.settings.player\n      )\n      this.enemyBulletPool = new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET)\n      this.enemyPool = new Pool(this.assetManager, this.mainContext, this.canvases.main.width, this.canvases.main.height, 30, EntityType.ENEMY, AssetId.ENEMY, this.enemyBulletPool, this)\n      this.spawnWave()\n      this.inputManager.register(this.ship)\n      this.inputManager.register(this)\n      this.quadTree = new QuadTree(new HitBox(0, 0, this.canvases.main.width, this.canvases.main.height))\n      this.collisionManager = new CollisionManager(this.quadTree)\n      this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n      this.backgroundAudio.play(true)\n      this.start()\n    }\n  }\n\n  togglePause (): void {\n    this.paused = !this.paused\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    const height = this.assetManager.getSprite(AssetId.ENEMY).height\n    const width = this.assetManager.getSprite(AssetId.ENEMY).width\n    let x = 200\n    let y = -height\n    const spacer = y * 1.5\n    for (let i = 1; i <= 21; i++) {\n      this.enemyPool.get(x, y, 4)\n      x += width + 25\n      if (i % 7 === 0) {\n        x = 200\n        y += spacer\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  render (): void {\n    if (this.playing) {\n      if (!this.paused) {\n        document.getElementById('score').innerHTML = this.playerScore.toString()\n        this.quadTree.clear()\n        this.quadTree.insert(this.ship)\n        this.quadTree.insert(this.ship.pool.getPool())\n        this.quadTree.insert(this.enemyPool.getPool())\n        this.quadTree.insert(this.enemyBulletPool.getPool())\n        this.collisionManager.detectCollision()\n\n        // Spawn new wave if all enemies are destroyed.\n        if (this.enemyPool.getPool().length === 0) {\n          this.spawnWave()\n        }\n\n        if (this.ship.alive()) {\n          this.background.draw()\n          this.ship.move()\n          this.ship.pool.render()\n          this.enemyPool.render()\n          this.enemyBulletPool.render()\n        } else {\n          this.playing = false\n          this.gameOver()\n        }\n      }\n      this.animReqID = window.requestAnimationFrame(() => this.render())\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n  }\n\n  update (state: any): void {\n    if (state[Actions.RESTART]) {\n      this.restart()\n    }\n  }\n\n  /**\n   *\n   */\n  start (): void {\n    this.playing = true\n    this.render()\n    this.ship.draw()\n  }\n\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  restart (): void {\n    if (!this.playing) {\n      this.gameOverAudio.stop()\n      this.backgroundAudio.play(true)\n      document.getElementById('game-over').style.display = 'none'\n    } else {\n      window.cancelAnimationFrame(this.animReqID)\n      this.playing = false\n      this.backgroundAudio.stop()\n      this.backgroundAudio.play(true)\n    }\n    this.backgroundContext.clearRect(0, 0, this.canvases.background.width, this.canvases.background.height)\n    this.shipContext.clearRect(0, 0, this.canvases.ship.width, this.canvases.ship.height)\n    this.mainContext.clearRect(0, 0, this.canvases.main.width, this.canvases.main.height)\n    this.quadTree.clear()\n    this.background.reset()\n    this.playerScore = 0\n    this.ship.reset()\n    this.enemyBulletPool.clearAll()\n    this.enemyPool.clearAll()\n    this.ship.pool.clearAll()\n    this.start()\n  }\n}\n","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n","import AssetManager, { AssetType } from './lib/client/AssetManager'\nimport SpaceGame from './application/SpaceGame'\nimport InputManager from './lib/client/InputManager'\nimport Settings from './lib/client/Settings'\nimport SettingsMenu from './lib/client/SettingsMenu'\nimport EventHandler from './lib/event/EventHandler'\nimport { AssetId } from './enum/AssetId'\nimport AudioManager from './lib/client/AudioManager'\nimport GameLoop from './application/GameLoop'\n\nconst audioManager = new AudioManager()\nconst assetManager = new AssetManager(audioManager)\nconst canvases = {\n  background: document.getElementById('background') as HTMLCanvasElement,\n  ship: document.getElementById('ship') as HTMLCanvasElement,\n  main: document.getElementById('main') as HTMLCanvasElement\n}\nconst settings = new Settings()\nconst inputManager = new InputManager(settings)\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager, audioManager)\nassetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\nassetManager.downloadAll(() => {\n  const game = new SpaceGame(assetManager, inputManager, settings, canvases)\n  const loop = new GameLoop(game)\n  settingsMenu.init()\n  let gameOver = document.getElementById('game-over')\n  let set = document.getElementById('settings')\n  let shoot = document.getElementById('shoot')\n  let events = ['click', 'touchstart']\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\n  shoot.addEventListener('contextmenu', event => {\n    event.preventDefault()\n    return false\n  })\n  EventHandler.registerOnElement(gameOver, events, () => game.restart())\n  EventHandler.registerOnElement(set, events, () => {\n    settingsMenu.toggleShow()\n    game.togglePause()\n  })\n})\n"],"sourceRoot":""}