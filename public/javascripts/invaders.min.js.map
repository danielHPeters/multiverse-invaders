{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/interfaces/ICollideAble.ts","webpack:///./src/enum/ContextId.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/lib/geometry/Dimension.ts","webpack:///./src/lib/entity/Entity.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/client/InputManager.ts","webpack:///./src/lib/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/application/InvadersGame.ts","webpack:///./src/application/GameLoop.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/models/Enemy.ts","webpack:///./src/models/Bullet.ts","webpack:///./src/models/Pool.ts","webpack:///./src/models/Background.ts","webpack:///./src/models/Ship.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/application/InvadersState.ts","webpack:///./src/lib/client/SettingsMenu.ts","webpack:///./src/config/Settings.ts","webpack:///./src/gui/InvadersGui.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/graphics/2D/SpriteSheet.ts","webpack:///./src/lib/audio/Sound.ts","webpack:///./src/lib/client/AudioManager.ts","webpack:///./src/application/Application.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","EntityType","PLAYER","ENEMY","ENEMY_BULLET","PLAYER_BULLET","BACKGROUND","MAP","GAME_OVER","LASER","MAIN_THEME","EXPLOSION_I","EXPLOSION_II","BOX","ARENA","ContextId","MAIN","SHIP","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","width","height","factor","position","dimension","settings","AssetId","Observable_1","Actions","UP","DOWN","LEFT","RIGHT","SHOOT","RESTART","ROTATE_LEFT","ROTATE_RIGHT","super","inputMap","keyboard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","el","document","getElementById","evt","preventDefault","touchstartX","pageX","touchstartY","pageY","thisInstance","reset","changedTouches","toucheMoveX","touchMoveY","length","a","w","space","SpriteSheet_1","Ajax_1","AssetType","SPRITE","SPRITE_SHEET","AUDIO","AUDIO_AMB","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","loadAudio","loadSprite","loadSpriteSheet","ambient","createSound","Vector2_1","ICollideAble_1","colliding","collidesWith","other","includes","toString","element","events","listener","_observers","_state","observer","filter","obs","update","observers","assetManager","inputManager","contexts","context","clearRect","gameSize","renderables","renderable","clear","contextId","render","InputManager_1","game","lastTime","running","frameId","requestAnimationFrame","time","loop","cancelAnimationFrame","stop","paused","restart","diff","quadTree","objects","getAllObjects","obj","findObjects","j","isCollideAbleWith","alive","console","log","Entity_1","Dimension_1","ContextId_1","bulletPool","sound","velocity","percentFire","chance","explosionSound","set","speed","ctx","drawImage","dt","scorePoints","play","addVector","leftEdge","rightEdge","bottomEdge","random","fire","AssetManager_1","Bullet_1","Enemy_1","AssetId_1","maxSize","asId","pool","assetId","subPool","getSprite","getSound","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","splice","startPosition","acceleration","counter","maxTop","laserSound","startX","startY","setVector","getTwo","add","player","friction","limit","maxVelocity","vel","clone","fireDelay","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","nodes","node","returnedObjects","index","getIndex","Array","insert","split","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","QuadTree_1","Ship_1","Background_1","Pool_1","CollisionManager_1","collisionManager","playerScore","background","playerBulletPool","ship","enemyBulletPool","enemyPool","pools","entities","collideables","movables","enemy","bullet","backgroundAudio","gameOverAudio","register","spawnWave","detectCollision","movable","getPool","spacer","style","display","entity","EventHandler_1","ElementClasses","TAB","TAB_CONTENT","TAB_LINK","ACTIVE","elementId","visible","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","mainMenu","createElement","classList","appendChild","linkText","title","createTab","container","keys","setting","addEntry","input","setKey","Number","slider","adjustMasterVolume","adjustAmbientVolume","adjustEffectsVolume","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","menuLink","titleElement","openTab","textContent","labelText","parent","action","min","step","row","label","setAttribute","master","effects","newKey","oldKey","findKey","scoreElement","innerHTML","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","data","JSON","stringify","send","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","audioContext","masterGain","gainNode","createGain","gain","connect","playing","source","createBufferSource","Sound_1","initAudioContext","AudioContext","webkitAudioContext","effectsGain","ambientGain","destination","decodeAudioData","then","error","AudioManager_1","InvadersGui_1","Settings_1","SettingsMenu_1","InvadersState_1","GameLoop_1","InvadersGame_1","Application","bgCanvas","Map","gui","initContexts","initAssetQueue","downloadAll","setUpGame","shipCanvas","mainCanvas","getContext","queueDownload","shoot","cancelShoot","settingsMenu","gameOver","initTouchControlElements","toggleShow","togglePause","initGui","Application_1","bootstrap"],"mappings":"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","file":"invaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collideable entities.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface ICollideAble {\n  collidesWith: EntityType[]\n  colliding: boolean\n  type: EntityType\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean\n}\n","export enum ContextId {\n  BACKGROUND, MAIN, SHIP\n}\n","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n","/**\n * Dimension class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Dimension {\n  width: number\n  height: number\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width Width\n   * @param {number} height Height\n   */\n  constructor (width: number, height: number) {\n    this.width = width\n    this.height = height\n  }\n\n  /**\n   * Scale the dimension.\n   *\n   * @param {number} factor\n   */\n  scale (factor: number) {\n    this.width *= factor\n    this.height *= factor\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport Settings from '../../config/Settings'\nimport Dimension from '../geometry/Dimension'\n\n/**\n * Base entity class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Entity {\n  dimension: Dimension\n  settings: Settings\n  position: Vector2\n\n  /**\n   * Constructor. Sets position and dimension of entity.\n   *\n   * @param {Vector2} position Initial position\n   * @param {Dimension} dimension Initial dimension\n   * @param {Settings} settings\n   */\n  constructor (position: Vector2, dimension: Dimension, settings: Settings) {\n    this.position = position\n    this.dimension = dimension\n    this.settings = settings\n  }\n\n  init (): void {\n    // throw new Error('Implement in subclass.')\n  }\n}\n","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n","import Observable from '../observer/Observable'\nimport Settings from '../../config/Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyboard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../ajax/Ajax'\nimport { AssetId } from '../../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport ICollideAble, { EntityType } from '../interfaces/ICollideAble'\n\n/**\n * Hitbox used for defining collision boundaries.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class HitBox implements ICollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static register (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n","import Background from '../models/Background'\nimport AssetManager from '../lib/client/AssetManager'\nimport InputManager from '../lib/client/InputManager'\nimport Settings from '../config/Settings'\nimport IGame from '../lib/interfaces/IGame'\nimport IGameState from '../lib/interfaces/IGameState'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Space models main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersGame implements IGame {\n  state: IGameState\n  background: Background\n  assetManager: AssetManager\n  inputManager: InputManager\n  settings: Settings\n  contexts: Map<ContextId, CanvasRenderingContext2D>\n\n  /**\n   *\n   * @param {IGameState} state\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param {CanvasRenderingContext2D[]} contexts\n   */\n  constructor (state: IGameState, assetManager: AssetManager, inputManager: InputManager, settings: Settings, contexts: Map<ContextId, CanvasRenderingContext2D>) {\n    this.state = state\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.contexts = contexts\n    this.init()\n  }\n\n  /**\n   *\n   */\n  public init (): void {\n    this.contexts.forEach(context => context.clearRect(0, 0, this.settings.gameSize.width, this.settings.gameSize.height))\n    this.state.reset()\n  }\n\n  /**\n   *\n   */\n  public clear (): void {\n    this.state.renderables.forEach(renderable => renderable.clear(this.contexts.get(renderable.contextId)))\n  }\n\n  /**\n   *\n   */\n  public render (): void {\n    this.state.renderables.forEach(renderable => renderable.render(this.contexts.get(renderable.contextId)))\n  }\n}\n","import IGameLoop from '../lib/interfaces/IGameLoop'\nimport IGame from '../lib/interfaces/IGame'\nimport { Actions } from '../lib/client/InputManager'\nimport Observer from '../lib/observer/Observer'\n\n/**\n * Game loop.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class GameLoop implements IGameLoop, Observer {\n  public game: IGame\n  public lastTime: number\n  public frameId: number\n  private state: any\n\n  /**\n   * Constructor.\n   *\n   * @param {IGame} game Game instance\n   */\n  constructor (game: IGame) {\n    this.game = game\n    this.lastTime = null\n    this.state = {}\n  }\n\n  /**\n   *\n   */\n  public start (): void {\n    this.game.init()\n    this.game.state.running = true\n    this.frameId = requestAnimationFrame(time => this.loop(time))\n  }\n\n  /**\n   *\n   */\n  public stop (): void {\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId)\n    }\n  }\n\n  public restart (): void {\n    this.stop()\n    this.start()\n  }\n\n  /**\n   *\n   */\n  public togglePause (): void {\n    this.game.state.paused = !this.game.state.paused\n  }\n\n  /**\n   *\n   */\n  public loop (time: number): void {\n    if (this.state[Actions.RESTART]) {\n      this.restart()\n    } else {\n      if (this.game.state.running) {\n        this.game.clear()\n        if (this.lastTime !== null) {\n          const diff = time - this.lastTime\n          if (!this.game.state.paused) {\n            this.game.state.update(diff / 1000)\n          }\n        }\n        this.lastTime = time\n        this.game.render()\n        this.frameId = requestAnimationFrame(time => this.loop(time))\n      }\n    }\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n}\n","import QuadTree from './QuadTree'\nimport ICollisionManager from '../interfaces/ICollisionManager'\n\n/**\n * Collision Manager.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class CollisionManager implements ICollisionManager {\n  quadTree: QuadTree\n\n  /**\n   * Constructor.\n   *\n   * @param {QuadTree} quadTree\n   */\n  constructor (quadTree: QuadTree) {\n    this.quadTree = quadTree\n  }\n\n  /**\n   * Collision detection algorithm.\n   */\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].dimension.width &&\n            Math.floor(objects[i].position.x) + objects[i].dimension.width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].dimension.height &&\n            Math.floor(objects[i].position.y) + objects[i].dimension.height > Math.floor(obj[j].position.y))\n        && objects[i].alive && obj[j].alive) {\n          console.log(objects[i])\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Sound from '../lib/audio/Sound'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\nimport IGameState from '../lib/interfaces/IGameState'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  velocity: Vector2\n  speed: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  explosionSound: Sound\n  game: IGameState\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Pool} bulletPool\n   * @param {Settings} settings\n   * @param {Sound} sound\n   * @param {IGameState} game\n   */\n  constructor (width: number, height: number, sprite, type: EntityType, bulletPool: Pool, settings: Settings, sound: Sound, game: IGameState) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.contextId = ContextId.MAIN\n    this.explosionSound = sound\n    this.game = game\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.position.set(0, 0)\n    this.velocity.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.dimension.width / 2), Math.floor(this.position.y + this.dimension.height), -200)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (this.alive) {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y, this.dimension.width + 1, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt Delta time\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      if (this.alive) {\n        this.position.addVector(this.velocity)\n        if (this.position.x <= this.leftEdge) {\n          this.velocity.x = this.speed\n        } else if (this.position.x >= this.rightEdge + this.dimension.width) {\n          this.velocity.x = -this.speed\n        } else if (this.position.y >= this.bottomEdge) {\n          this.speed = 1.5\n          this.velocity.y = 0\n          this.position.y -= 5\n          this.velocity.x = -this.speed\n        }\n        this.chance = Math.floor(Math.random() * 101)\n        if (this.chance / 100 < this.percentFire) {\n          this.fire()\n        }\n      }\n    } else {\n      this.game.scorePoints()\n      this.explosionSound.play()\n      this.alive = false\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.velocity.set(0, speed)\n    this.speed = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\n\n/**\n * Bullet class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Bullet extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  speed: number\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, type: EntityType, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 0\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height)) {\n      this.alive = false\n    } else {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y - 1, this.dimension.width + 1, this.dimension.height + 1)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height) ||\n      this.colliding) {\n      this.alive = false\n      this.colliding = false\n    } else {\n      this.position.y -= Math.floor(this.speed * dt)\n    }\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Bullet from './Bullet'\nimport Enemy from './Enemy'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport { AssetId } from '../enum/AssetId'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IGameState from '../lib/interfaces/IGameState'\n\n/**\n *\n */\nexport default class Pool implements IRenderable, IMovable {\n  contextId: ContextId\n  assetManager: AssetManager\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  settings: Settings\n  game: IGameState\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {number} maxSize\n   * @param {EntityType} type\n   * @param {AssetId} asId\n   * @param {Settings} settings\n   * @param {Pool} pool\n   * @param {IGameState}game\n   */\n  constructor (assetManager: AssetManager, maxSize: number, type: EntityType, asId: AssetId, settings: Settings, pool: Pool = null, game: IGameState = null) {\n    this.assetManager = assetManager\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const sprite = this.assetManager.getSprite(this.assetId)\n    if (this.type === EntityType.ENEMY) {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(\n          sprite.width,\n          sprite.height, sprite,\n          this.type,\n          this.subPool,\n          this.settings,\n          this.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO), this.game)\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Bullet(sprite.width, sprite.height, sprite, this.type, this.settings)\n      }\n    }\n  }\n\n  /**\n   *\n   * @returns {IMovable[]}\n   */\n  public getPool (): IMovable[] {\n    return this.pool.filter(object => object.alive)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  public get (x: number, y: number, speed: number): void {\n    const lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  public getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  public render (ctx: CanvasRenderingContext2D): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        this.pool[i].render(ctx)\n      } else {\n        this.pool[i].init()\n        this.pool.push((this.pool.splice(i, 1))[0])\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  public clear (ctx: CanvasRenderingContext2D): void {\n    this.pool.forEach(object => object.clear(ctx))\n  }\n\n  public move (dt: number): void {\n    this.pool.forEach(object => object.move(dt))\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport Settings from '../config/Settings'\n\n/**\n * Shifting background.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Background extends Entity implements IRenderable, IMovable {\n  contextId: ContextId\n  speed: number\n  sprite: any\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 1\n    this.sprite = sprite\n    this.contextId = ContextId.BACKGROUND\n  }\n\n  /**\n   * Initialize.\n   */\n  init (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    ctx.drawImage(this.sprite, this.position.x, this.position.y - this.dimension.height)\n  }\n\n  /**\n   * Update position.\n   *\n   * @param {number} dt Delta Time\n   */\n  move (dt: number): void {\n    this.position.y += this.speed\n    if (this.position.y >= this.dimension.height) {\n      this.position.y = 0\n    }\n  }\n\n  /**\n   * Clear the background.\n   */\n  clear (): void {\n    // Not applicable\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport Observer from '../lib/observer/Observer'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport { Actions } from '../lib/client/InputManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Player ship model class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Ship extends Entity implements IRenderable, IMovable, Observer, ICollideAble {\n  acceleration: Vector2\n  sprite: any\n  bulletPool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings: Settings\n  laserSound: Sound\n  assetManager: AssetManager\n  contextId: ContextId\n  alive: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, assetManager: AssetManager, pool: Pool, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.startPosition = new Vector2(0, 0)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.bulletPool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.assetManager = assetManager\n    this.maxTop = Math.floor(this.settings.gameSize.height / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n    this.contextId = ContextId.SHIP\n    this.alive = false\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const startX = this.settings.gameSize.width / 2 - this.assetManager.getSprite(AssetId.PLAYER).width\n    const startY = this.settings.gameSize.height / 4 * 3 + this.assetManager.getSprite(AssetId.PLAYER).height * 2\n    this.position.setVector(new Vector2(startX, startY))\n    this.velocity.set(0, 0)\n    this.colliding = false\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 200,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 200\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (!this.colliding) {\n      ctx.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.dimension.width, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      this.counter++\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.player.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.player.acceleration)\n      }\n      this.velocity.multiply(this.settings.player.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.player.maxVelocity)\n      const vel = this.velocity.clone()\n      vel.multiply(dt)\n      this.position.addVector(vel)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.settings.gameSize.width - this.dimension.width) {\n        this.position.x = this.settings.gameSize.width - this.dimension.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.settings.gameSize.height - this.dimension.height) {\n        this.position.y = this.settings.gameSize.height - this.dimension.height\n      }\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.player.fireDelay) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  /**\n   *\n   * @param state\n   */\n  update (state: any): void {\n    this.state = state\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import HitBox from './HitBox'\nimport ICollideAble from '../interfaces/ICollideAble'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: ICollideAble[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all models objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n","import IGameState from '../lib/interfaces/IGameState'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport QuadTree from '../lib/collision/QuadTree'\nimport Settings from '../config/Settings'\nimport InputManager from '../lib/client/InputManager'\nimport { default as AssetManager, AssetType } from '../lib/client/AssetManager'\nimport Ship from '../models/Ship'\nimport HitBox from '../lib/collision/HitBox'\nimport { AssetId } from '../enum/AssetId'\nimport Background from '../models/Background'\nimport Pool from '../models/Pool'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Entity from '../lib/entity/Entity'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Sound from '../lib/audio/Sound'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Observable from '../lib/observer/Observable'\n\n/**\n * Multiverse invaders game state.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersState extends Observable implements IGameState {\n  running: boolean\n  paused: boolean\n  quadTree: QuadTree\n  entities: Entity[]\n  renderables: IRenderable[]\n  collideables: ICollideAble[]\n  movables: IMovable[]\n  pools: Pool[]\n  assetManager: AssetManager\n  collisionManager: CollisionManager\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  playerScore: number\n\n  /**\n   *\n   * @param {Settings} settings\n   * @param {InputManager} inputManager\n   * @param {AssetManager} assetManager\n   * @param {CollisionManager} collisionManager\n   */\n  constructor (settings: Settings, inputManager: InputManager, assetManager: AssetManager) {\n    super()\n    this.assetManager = assetManager\n    this.quadTree = new QuadTree(new HitBox(0, 0, settings.gameSize.width, settings.gameSize.height))\n    this.collisionManager = new CollisionManager(this.quadTree)\n    this.running = false\n    this.paused = false\n    this.playerScore = 0\n    const background = new Background(\n      settings.gameSize.width,\n      settings.gameSize.height,\n      assetManager.getSprite(AssetId.BACKGROUND),\n      settings\n    )\n    const playerBulletPool = new Pool(this.assetManager, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET, settings)\n    const ship = new Ship(assetManager.getSprite(AssetId.PLAYER).width, assetManager.getSprite(AssetId.PLAYER).height, assetManager, playerBulletPool, settings)\n    const enemyBulletPool = new Pool(this.assetManager, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET, settings)\n    const enemyPool = new Pool(this.assetManager, 30, EntityType.ENEMY, AssetId.ENEMY, settings, enemyBulletPool, this)\n    this.pools = []\n    this.entities = []\n    this.renderables = []\n    this.collideables = []\n    this.movables = []\n\n    this.pools.push(playerBulletPool)\n    this.pools.push(enemyBulletPool)\n    this.pools.push(enemyPool)\n\n    this.entities.push(ship)\n    this.entities.push(background)\n\n    enemyPool.pool.forEach(enemy => this.entities.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n\n    this.collideables.push(ship)\n\n    enemyPool.pool.forEach(enemy => this.collideables.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n\n    this.movables.push(ship)\n    this.movables.push(background)\n    this.movables.push(enemyPool)\n    this.movables.push(playerBulletPool)\n    this.movables.push(enemyBulletPool)\n\n    this.renderables.push(ship)\n    this.renderables.push(background)\n    this.renderables.push(playerBulletPool)\n    this.renderables.push(enemyBulletPool)\n    this.renderables.push(enemyPool)\n\n    this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    inputManager.register(ship)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  update (dt: number): void {\n    this.spawnWave()\n    this.quadTree.clear()\n    this.quadTree.insert(this.collideables)\n    this.collisionManager.detectCollision()\n    this.movables.forEach(movable => movable.move(dt))\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    if (this.pools[2].getPool().length === 0) {\n      const height = this.assetManager.getSprite(AssetId.ENEMY).height\n      const width = this.assetManager.getSprite(AssetId.ENEMY).width\n      let x = 200\n      let y = -height\n      const spacer = y * 1.5\n      for (let i = 1; i <= 21; i++) {\n        this.pools[2].get(x, y, 300)\n        x += width + 25\n        if (i % 7 === 0) {\n          x = 200\n          y += spacer\n        }\n      }\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n    this.state = this.playerScore\n    this.notify()\n  }\n\n  /**\n   *\n   */\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  /**\n   *\n   */\n  reset (): void {\n    this.backgroundAudio.stop()\n    this.gameOverAudio.stop()\n    document.getElementById('game-over').style.display = 'none'\n    this.quadTree.clear()\n    this.entities.forEach(entity => entity.init())\n    this.spawnWave()\n    this.playerScore = 0\n    this.state = this.playerScore\n    this.notify()\n    this.backgroundAudio.play(true)\n  }\n}\n","import Settings from '../../config/Settings'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../event/EventHandler'\nimport AudioManager from './AudioManager'\n\nenum ElementClasses {\n  TAB = 'tab',\n  TAB_CONTENT = 'tabContent',\n  TAB_LINK = 'tabLink',\n  ACTIVE = 'active'\n}\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  visible: boolean\n\n  constructor (elementId: string, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = document.getElementById(elementId) as HTMLDivElement\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.visible = false\n  }\n\n  public init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu('keyboardMenu', 'Keyboard', 'Keyboard Settings')\n    this.createPlayerMenu('playerMenu', 'Player', 'Player Settings')\n    this.createAudioMenu('audioMenu', 'Audio', 'Audio Settings')\n  }\n\n  public clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  public toggleShow (): void {\n    this.element.style.display = this.visible ? 'none' : 'block'\n    this.visible = !this.visible\n  }\n\n  private createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add(ElementClasses.TAB)\n    this.element.appendChild(this.mainMenu)\n  }\n\n  private createKeyboardMenu (id: string, linkText: string, title: string): void {\n    this.createTab(id, linkText, title, container => {\n      Object.keys(this.settings.keyboard).forEach(\n        setting => this.addEntry(\n          this.settings.keyboard[setting],\n          setting,\n          'text',\n          this.settings.keyboard[setting],\n          container,\n          input => this.settings.setKey(input.value, input.id)\n        )\n      )\n    })\n  }\n\n  private createPlayerMenu (id: string, linkText: string, title: string): void {\n    this.createTab(id, linkText, title, container => {\n      Object.keys(this.settings.player).forEach(\n        setting => this.addEntry(\n          setting,\n          this.settings.player[setting],\n          'number',\n          setting,\n          container,\n          input => this.settings.player[setting] = Number(input.value)\n        )\n      )\n    })\n  }\n\n  private createAudioMenu (id: string, linkText: string, title: string): void {\n    this.createTab(id, linkText, title, container => {\n      this.addEntry(\n        'masterVolume',\n        1,\n        'range',\n        'Master Volume:',\n        container,\n        slider => this.audioManager.adjustMasterVolume(Number(slider.value))\n      )\n      this.addEntry(\n        'ambientVolume',\n        1,\n        'range',\n        'Ambient Volume:',\n        container,\n        slider => this.audioManager.adjustAmbientVolume(Number(slider.value))\n      )\n      this.addEntry(\n        'effectsVolume',\n        1,\n        'range',\n        'Effects Volume:',\n        container,\n        slider => this.audioManager.adjustEffectsVolume(Number(slider.value))\n      )\n    })\n  }\n\n  private openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName(ElementClasses.TAB_CONTENT)\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName(ElementClasses.TAB_LINK)\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' ' + ElementClasses.ACTIVE, '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' ' + ElementClasses.ACTIVE\n  }\n\n  private createTab (id: string, linkText: string, title: string, callback): void {\n    const container = document.createElement('div')\n    const menuLink = document.createElement('button')\n    const titleElement = document.createElement('h4')\n    EventHandler.register(menuLink, ['click', 'touchstart'], event => this.openTab(event, id))\n    menuLink.textContent = linkText\n    menuLink.classList.add(ElementClasses.TAB_LINK)\n    container.id = id\n    container.classList.add(ElementClasses.TAB_CONTENT)\n    container.appendChild(titleElement)\n    titleElement.textContent = title\n    this.mainMenu.appendChild(menuLink)\n    this.element.appendChild(container)\n    callback(container)\n  }\n\n  private addEntry (id, value, type, labelText: string, parent, action, opts = { min: 0, max: 1, step: 0.1 }): void {\n    const row = document.createElement('div')\n    const label = document.createElement('label')\n    const input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', id)\n    label.textContent = labelText\n    input.id = id\n    input.name = id\n    input.value = value\n    input.type = type\n    if (type === 'range') {\n      input.min = opts.min.toString()\n      input.max = opts.max.toString()\n      input.step = opts.step.toString()\n    }\n    input.addEventListener('change', event => action(input))\n    row.appendChild(label)\n    row.appendChild(input)\n    parent.appendChild(row)\n  }\n}\n","import { Actions } from '../lib/client/InputManager'\nimport Dimension from '../lib/geometry/Dimension'\n\n/**\n * Settings class for models applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyboard\n  player\n  audio\n  gameSize: Dimension\n\n  /**\n   *\n   * @param {Dimension} dimension\n   */\n  constructor (dimension: Dimension) {\n    this.keyboard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART\n    }\n    this.player = {\n      maxVelocity: 150,\n      fireDelay: 15,\n      friction: 0.9,\n      acceleration: 50\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n    this.gameSize = dimension\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyboard).filter(key => this.keyboard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyboard[newKey] = this.keyboard[oldKey]\n      delete this.keyboard[oldKey]\n    }\n  }\n}\n","import Observer from '../lib/observer/Observer'\n\n/**\n * Multiverse Invaders GUI.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersGui implements Observer {\n  scoreElement: HTMLElement\n\n  /**\n   * Constructor.\n   */\n  constructor () {\n    this.scoreElement = document.getElementById('score')\n  }\n\n  /**\n   *\n   * @param state\n   */\n  public update (state: any): void {\n    this.scoreElement.innerHTML = state.toString()\n  }\n}\n","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    if (this.source) {\n      this.source.stop(0)\n    }\n  }\n}\n","import Sound from '../audio/Sound'\n\n/**\n * Audio manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  public adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  public adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  public adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  public createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n","import AudioManager from '../lib/client/AudioManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport InvadersGui from '../gui/InvadersGui'\nimport Settings from '../config/Settings'\nimport SettingsMenu from '../lib/client/SettingsMenu'\nimport InputManager from '../lib/client/InputManager'\nimport { ContextId } from '../enum/ContextId'\nimport Dimension from '../lib/geometry/Dimension'\nimport { AssetId } from '../enum/AssetId'\nimport InvadersState from './InvadersState'\nimport GameLoop from './GameLoop'\nimport EventHandler from '../lib/event/EventHandler'\nimport InvadersGame from './InvadersGame'\nimport IGameLoop from '../lib/interfaces/IGameLoop'\n\n/**\n * Application application class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Application {\n  private audioManager: AudioManager\n  private assetManager: AssetManager\n  private gui: InvadersGui\n  private settings: Settings\n  private inputManager: InputManager\n  private contexts: Map<ContextId, CanvasRenderingContext2D>\n\n  /**\n   * Constructor.\n   */\n  constructor () {\n    const bgCanvas = document.getElementById('background') as HTMLCanvasElement\n    this.contexts = new Map<ContextId, CanvasRenderingContext2D>()\n    this.audioManager = new AudioManager()\n    this.assetManager = new AssetManager(this.audioManager)\n    this.gui = new InvadersGui()\n    this.settings = new Settings(new Dimension(bgCanvas.width, bgCanvas.height))\n    this.inputManager = new InputManager(this.settings)\n  }\n\n  /**\n   * Instantiate a singleton instance of Application.\n   * @returns {Application}\n   */\n  public static bootstrap (): Application {\n    return new Application()\n  }\n\n  /**\n   * Initialize the game.\n   */\n  public init (): void {\n    this.initContexts()\n    this.initAssetQueue()\n    this.assetManager.downloadAll(() => this.setUpGame())\n  }\n\n  /**\n   * Initialize all canvas contexts.\n   */\n  private initContexts (): void {\n    const bgCanvas = document.getElementById('background') as HTMLCanvasElement\n    const shipCanvas = document.getElementById('ship') as HTMLCanvasElement\n    const mainCanvas = document.getElementById('main') as HTMLCanvasElement\n    this.contexts.set(ContextId.BACKGROUND, bgCanvas.getContext('2d'))\n    this.contexts.set(ContextId.SHIP, shipCanvas.getContext('2d'))\n    this.contexts.set(ContextId.MAIN, mainCanvas.getContext('2d'))\n  }\n\n  /**\n   * Queue assets to be preloaded.\n   */\n  private initAssetQueue (): void {\n    this.assetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\n    this.assetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\n    this.assetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\n    this.assetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\n    this.assetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\n  }\n\n  private initTouchControlElements (): void {\n    const shoot = document.getElementById('shoot')\n    shoot.addEventListener('touchstart', () => this.inputManager.shoot())\n    shoot.addEventListener('touchend', () => this.inputManager.cancelShoot())\n    shoot.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n  }\n\n  /**\n   *\n   * @param {IGameLoop} loop\n   */\n  private initGui (loop: IGameLoop): void {\n    const settingsMenu = new SettingsMenu('settings-menu', this.settings, this.assetManager, this.audioManager)\n    const gameOver = document.getElementById('game-over')\n    const set = document.getElementById('settings')\n    const events = ['click', 'touchstart']\n\n    settingsMenu.init()\n    this.initTouchControlElements()\n    EventHandler.register(gameOver, events, () => loop.restart())\n    EventHandler.register(set, events, () => {\n      settingsMenu.toggleShow()\n      loop.togglePause()\n    })\n  }\n\n  /**\n   * Set up all game relevant objects.\n   */\n  private setUpGame (): void {\n    const state = new InvadersState(this.settings, this.inputManager, this.assetManager)\n    const game = new InvadersGame(state, this.assetManager, this.inputManager, this.settings, this.contexts)\n    const loop = new GameLoop(game)\n    this.inputManager.register(loop)\n    this.initGui(loop)\n    state.register(this.gui)\n    loop.start()\n  }\n}\n","import Application from './application/Application'\n\n/**\n * Start script.\n *\n * @author Daniel Peters\n * @version 1.0\n */\ndocument.addEventListener('DOMContentLoaded', () => Application.bootstrap().init())\n"],"sourceRoot":""}