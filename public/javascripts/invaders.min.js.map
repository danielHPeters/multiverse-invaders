{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/interfaces/ICollideAble.ts","webpack:///./src/enum/ContextId.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/lib/geometry/Dimension.ts","webpack:///./src/lib/client/InputManager.ts","webpack:///./src/lib/entity/Entity.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/models/Enemy.ts","webpack:///./src/models/Bullet.ts","webpack:///./src/models/Pool.ts","webpack:///./src/models/Background.ts","webpack:///./src/models/Ship.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/application/InvadersState.ts","webpack:///./src/application/GameLoop.ts","webpack:///./src/lib/audio/Sound.ts","webpack:///./src/lib/client/AudioManager.ts","webpack:///./src/lib/client/SettingsMenu.ts","webpack:///./src/config/Settings.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/application/SpaceGame.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/graphics/2D/SpriteSheet.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","EntityType","PLAYER","ENEMY","ENEMY_BULLET","PLAYER_BULLET","BACKGROUND","MAP","GAME_OVER","LASER","MAIN_THEME","EXPLOSION_I","EXPLOSION_II","BOX","ARENA","ContextId","MAIN","SHIP","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","width","height","factor","Observable_1","Actions","UP","DOWN","LEFT","RIGHT","SHOOT","RESTART","ROTATE_LEFT","ROTATE_RIGHT","settings","super","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","el","document","getElementById","evt","preventDefault","touchstartX","pageX","touchstartY","pageY","thisInstance","reset","changedTouches","toucheMoveX","touchMoveY","length","a","w","space","position","dimension","AssetId","SpriteSheet_1","Ajax_1","AssetType","SPRITE","SPRITE_SHEET","AUDIO","AUDIO_AMB","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","loadAudio","loadSprite","loadSpriteSheet","ambient","createSound","Vector2_1","ICollideAble_1","colliding","collidesWith","other","includes","toString","element","events","listener","quadTree","objects","getAllObjects","obj","findObjects","j","isCollideAbleWith","Entity_1","Dimension_1","ContextId_1","bulletPool","sound","velocity","percentFire","chance","alive","contextId","explosionSound","set","speed","ctx","drawImage","clearRect","dt","addVector","leftEdge","rightEdge","bottomEdge","random","fire","gameSize","AssetManager_1","Bullet_1","Enemy_1","AssetId_1","assetManager","maxSize","asId","pool","assetId","subPool","getSprite","getSound","filter","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","render","splice","clear","InputManager_1","startPosition","acceleration","counter","maxTop","laserSound","startX","startY","setVector","add","player","friction","limit","maxVelocity","vel","clone","fireDelay","getTwo","play","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","nodes","node","returnedObjects","console","log","index","getIndex","Array","insert","split","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","QuadTree_1","Ship_1","Background_1","Pool_1","CollisionManager_1","inputManager","collisionManager","running","paused","playerScore","background","playerBulletPool","ship","enemyBulletPool","enemyPool","pools","entities","renderables","collideables","movables","enemy","bullet","backgroundAudio","gameOverAudio","register","spawnWave","detectCollision","movable","getPool","spacer","stop","style","display","entity","game","lastTime","frameId","requestAnimationFrame","time","loop","cancelAnimationFrame","restart","diff","update","audioContext","masterGain","gainNode","createGain","gain","connect","playing","source","createBufferSource","Sound_1","initAudioContext","AudioContext","webkitAudioContext","effectsGain","ambientGain","destination","data","decodeAudioData","then","error","EventHandler_1","showing","mainMenu","createElement","classList","appendChild","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","keyboardLink","keyboardDiv","title","form","submit","registerOnElement","openTab","createTextNode","setAttribute","keys","setting","addEntry","setKey","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","addPlayerSettingEntry","Number","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row","canvas","master","effects","newKey","action","oldKey","findKey","_observers","_state","observer","obs","observers","canvases","contexts","Map","getContext","main","context","renderable","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","SpaceGame_1","Settings_1","SettingsMenu_1","AudioManager_1","GameLoop_1","InvadersState_1","settingsMenu","queueDownload","downloadAll","gameOver","shoot","cancelShoot","toggleShow","togglePause"],"mappings":"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","file":"invaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collideable entities.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface ICollideAble {\n  collidesWith: EntityType[]\n  colliding: boolean\n  type: EntityType\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean\n}\n","export enum ContextId {\n  BACKGROUND, MAIN, SHIP\n}\n","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n","/**\n * Dimension class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Dimension {\n  width: number\n  height: number\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width Width\n   * @param {number} height Height\n   */\n  constructor (width: number, height: number) {\n    this.width = width\n    this.height = height\n  }\n\n  /**\n   * Scale the dimension.\n   *\n   * @param {number} factor\n   */\n  scale (factor: number) {\n    this.width *= factor\n    this.height *= factor\n  }\n}\n","import Observable from '../observer/Observable'\nimport Settings from '../../config/Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport Settings from '../../config/Settings'\nimport Dimension from '../geometry/Dimension'\n\n/**\n * Base entity class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Entity {\n  dimension: Dimension\n  settings: Settings\n  position: Vector2\n\n  /**\n   * Constructor. Sets position and dimension of entity.\n   *\n   * @param {Vector2} position Initial position\n   * @param {Dimension} dimension Initial dimension\n   * @param color Color of the entity\n   * @param {Settings} settings\n   */\n  constructor (position: Vector2, dimension: Dimension, settings: Settings) {\n    this.position = position\n    this.dimension = dimension\n    this.settings = settings\n  }\n\n  init (): void {\n    // throw new Error('Implement in subclass.')\n  }\n}\n","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../ajax/Ajax'\nimport { AssetId } from '../../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport ICollideAble, { EntityType } from '../interfaces/ICollideAble'\n\n/**\n * Hitbox used for defining collision boundaries.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class HitBox implements ICollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n","import QuadTree from './QuadTree'\nimport ICollisionManager from '../interfaces/ICollisionManager'\n\n/**\n * Collision Manager.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class CollisionManager implements ICollisionManager {\n  quadTree: QuadTree\n\n  /**\n   * Constructor.\n   *\n   * @param {QuadTree} quadTree\n   */\n  constructor (quadTree: QuadTree) {\n    this.quadTree = quadTree\n  }\n\n  /**\n   * Collision detection algorithm.\n   */\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].dimension.width &&\n            Math.floor(objects[i].position.x) + objects[i].dimension.width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].dimension.height &&\n            Math.floor(objects[i].position.y) + objects[i].dimension.height > Math.floor(obj[j].position.y))) {\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Sound from '../lib/audio/Sound'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  velocity: Vector2\n  speed: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  explosionSound: Sound\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {number} speed\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Pool} bulletPool\n   * @param {Settings} settings\n   * @param {Sound} sound\n   */\n  constructor (width: number, height: number, sprite, type: EntityType, bulletPool: Pool, settings: Settings, sound: Sound) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.contextId = ContextId.MAIN\n    this.explosionSound = sound\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.position.set(0, 0)\n    this.velocity.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (this.alive) {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y, this.dimension.width + 1, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt Delta time\n   */\n  move (dt: number): void {\n    this.position.addVector(this.velocity)\n    if (this.position.x <= this.leftEdge) {\n      this.velocity.x = this.speed\n    } else if (this.position.x >= this.rightEdge + this.dimension.width) {\n      this.velocity.x = -this.speed\n    } else if (this.position.y >= this.bottomEdge) {\n      this.speed = 1.5\n      this.velocity.y = 0\n      this.position.y -= 5\n      this.velocity.x = -this.speed\n    }\n    if (!this.colliding) {\n      this.chance = Math.floor(Math.random() * 101)\n      if (this.chance / 100 < this.percentFire) {\n        this.fire()\n      }\n    } else {\n      // this.game.scorePoints()\n      // this.explosionSound.play()\n      this.alive = false\n      this.colliding = false\n    }\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.dimension.width / 2), Math.floor(this.position.y + this.dimension.height), -200)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.velocity.set(0, speed)\n    this.speed = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\n\n/**\n *\n */\nexport default class Bullet extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  speed: number\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, type: EntityType, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 0\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n  }\n\n  init (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height)) {\n      this.alive = false\n    } else {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y - 1, this.dimension.width + 1, this.dimension.height + 1)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    this.position.y -= Math.floor(this.speed * dt)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Bullet from './Bullet'\nimport Enemy from './Enemy'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport { AssetId } from '../enum/AssetId'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\n\n/**\n *\n */\nexport default class Pool implements IRenderable, IMovable {\n  contextId: ContextId\n  assetManager: AssetManager\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  settings: Settings\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {number} maxSize\n   * @param {EntityType} type\n   * @param {AssetId} asId\n   * @param {Settings} settings\n   * @param {Pool} pool\n   */\n  constructor (assetManager: AssetManager, maxSize: number, type: EntityType, asId: AssetId, settings: Settings, pool: Pool = null) {\n    this.assetManager = assetManager\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const sprite = this.assetManager.getSprite(this.assetId)\n    if (this.type === EntityType.ENEMY) {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(sprite.width, sprite.height, sprite, this.type, this.subPool, this.settings, this.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO))\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Bullet(sprite.width, sprite.height, sprite, this.type, this.settings)\n      }\n    }\n  }\n\n  /**\n   *\n   * @returns {IMovable[]}\n   */\n  getPool (): IMovable[] {\n    return this.pool.filter(object => object.alive)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  get (x: number, y: number, speed: number): void {\n    const lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        this.pool[i].render(ctx)\n        //\n      } else {\n        this.pool[i].init()\n        this.pool.push((this.pool.splice(i, 1))[0])\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    this.pool.forEach(object => object.clear(ctx))\n  }\n\n  move (dt: number): void {\n    this.pool.forEach(object => object.move(dt))\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport Settings from '../config/Settings'\n\n/**\n * Shifting background.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Background extends Entity implements IRenderable, IMovable {\n  contextId: ContextId\n  speed: number\n  sprite: any\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 1\n    this.sprite = sprite\n    this.contextId = ContextId.BACKGROUND\n  }\n\n  /**\n   * Initialize.\n   */\n  init (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    ctx.drawImage(this.sprite, this.position.x, this.position.y - this.dimension.height)\n  }\n\n  /**\n   * Update position.\n   *\n   * @param {number} dt Delta Time\n   */\n  move (dt: number): void {\n    this.position.y += this.speed\n    if (this.position.y >= this.dimension.height) {\n      this.position.y = 0\n    }\n  }\n\n  /**\n   * Clear the background.\n   */\n  clear (): void {\n    // Not applicable\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport Observer from '../lib/observer/Observer'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport { Actions } from '../lib/client/InputManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n *\n */\nexport default class Ship extends Entity implements IRenderable, IMovable, Observer, ICollideAble {\n  acceleration: Vector2\n  sprite: any\n  pool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings: Settings\n  laserSound: Sound\n  assetManager: AssetManager\n  contextId: ContextId\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, assetManager: AssetManager, pool: Pool, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.startPosition = new Vector2(0, 0)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.pool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.assetManager = assetManager\n    this.maxTop = Math.floor(this.settings.gameSize.height / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n    this.contextId = ContextId.SHIP\n  }\n\n  init (): void {\n    const startX = this.settings.gameSize.width / 2 - this.assetManager.getSprite(AssetId.PLAYER).width\n    const startY = this.settings.gameSize.height / 4 * 3 + this.assetManager.getSprite(AssetId.PLAYER).height * 2\n    this.position.setVector(new Vector2(startX, startY))\n    this.velocity.set(0, 0)\n    this.colliding = false\n  }\n\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.dimension.width, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      this.counter++\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.player.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.player.acceleration)\n      }\n      this.velocity.multiply(this.settings.player.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.player.maxVelocity)\n      const vel = this.velocity.clone()\n      vel.multiply(dt)\n      this.position.addVector(vel)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.settings.gameSize.width - this.dimension.width) {\n        this.position.x = this.settings.gameSize.width - this.dimension.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.settings.gameSize.height - this.dimension.height) {\n        this.position.y = this.settings.gameSize.height - this.dimension.height\n      }\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.player.fireDelay && !this.colliding) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  alive (): boolean {\n    return !this.colliding\n  }\n\n  render (ctx: CanvasRenderingContext2D): void {\n    if (!this.colliding) {\n      ctx.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n    }\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n\n  fire (): void {\n    this.pool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 200,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 200\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import HitBox from './HitBox'\nimport ICollideAble from '../interfaces/ICollideAble'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: ICollideAble[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all models objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n","import IGameState from '../lib/interfaces/IGameState'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport QuadTree from '../lib/collision/QuadTree'\nimport Settings from '../config/Settings'\nimport InputManager from '../lib/client/InputManager'\nimport { default as AssetManager, AssetType } from '../lib/client/AssetManager'\nimport Ship from '../models/Ship'\nimport HitBox from '../lib/collision/HitBox'\nimport { AssetId } from '../enum/AssetId'\nimport Background from '../models/Background'\nimport Pool from '../models/Pool'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Entity from '../lib/entity/Entity'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Sound from '../lib/audio/Sound'\nimport CollisionManager from '../lib/collision/CollisionManager'\n\n/**\n * Multiverse invaders game state.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersState implements IGameState {\n  running: boolean\n  paused: boolean\n  quadTree: QuadTree\n  entities: Entity[]\n  renderables: IRenderable[]\n  collideables: ICollideAble[]\n  movables: IMovable[]\n  pools: Pool[]\n  assetManager: AssetManager\n  collisionManager: CollisionManager\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  playerScore: number\n\n  /**\n   *\n   * @param {Settings} settings\n   * @param {InputManager} inputManager\n   * @param {AssetManager} assetManager\n   * @param {CollisionManager} collisionManager\n   */\n  constructor (settings: Settings, inputManager: InputManager, assetManager: AssetManager) {\n    this.assetManager = assetManager\n    this.quadTree = new QuadTree(new HitBox(0, 0, settings.gameSize.width, settings.gameSize.height))\n    this.collisionManager = new CollisionManager(this.quadTree)\n    this.running = false\n    this.paused = false\n    this.playerScore = 0\n    const background = new Background(\n      settings.gameSize.width,\n      settings.gameSize.height,\n      assetManager.getSprite(AssetId.BACKGROUND),\n      settings\n    )\n    const playerBulletPool = new Pool(this.assetManager, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET, settings)\n    const ship = new Ship(assetManager.getSprite(AssetId.PLAYER).width, assetManager.getSprite(AssetId.PLAYER).height, assetManager, playerBulletPool, settings)\n    const enemyBulletPool = new Pool(this.assetManager, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET, settings)\n    const enemyPool = new Pool(this.assetManager, 30, EntityType.ENEMY, AssetId.ENEMY, settings, enemyBulletPool)\n    this.pools = []\n    this.entities = []\n    this.renderables = []\n    this.collideables = []\n    this.movables = []\n\n    this.pools.push(playerBulletPool)\n    this.pools.push(enemyBulletPool)\n    this.pools.push(enemyPool)\n\n    this.entities.push(ship)\n    this.entities.push(background)\n\n    enemyPool.pool.forEach(enemy => this.entities.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n\n    this.collideables.push(ship)\n\n    enemyPool.pool.forEach(enemy => this.collideables.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n\n    this.movables.push(ship)\n    this.movables.push(background)\n    this.movables.push(enemyPool)\n    this.movables.push(playerBulletPool)\n    this.movables.push(enemyBulletPool)\n\n    this.renderables.push(ship)\n    this.renderables.push(background)\n    this.renderables.push(playerBulletPool)\n    this.renderables.push(enemyBulletPool)\n    this.renderables.push(enemyPool)\n\n    this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    inputManager.register(ship)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  update (dt: number): void {\n    this.spawnWave()\n    this.quadTree.clear()\n    this.quadTree.insert(this.collideables)\n    this.collisionManager.detectCollision()\n    this.movables.forEach(movable => movable.move(dt))\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    if (this.pools[2].getPool().length === 0) {\n      const height = this.assetManager.getSprite(AssetId.ENEMY).height\n      const width = this.assetManager.getSprite(AssetId.ENEMY).width\n      let x = 200\n      let y = -height\n      const spacer = y * 1.5\n      for (let i = 1; i <= 21; i++) {\n        this.pools[2].get(x, y, 300)\n        x += width + 25\n        if (i % 7 === 0) {\n          x = 200\n          y += spacer\n        }\n      }\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n  }\n\n  /**\n   *\n   */\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  /**\n   *\n   */\n  reset (): void {\n    this.backgroundAudio.stop()\n    this.gameOverAudio.stop()\n    document.getElementById('game-over').style.display = 'none'\n    this.quadTree.clear()\n    this.entities.forEach(entity => entity.init())\n    this.spawnWave()\n    this.playerScore = 0\n    this.backgroundAudio.play(true)\n  }\n}\n","import IGameLoop from '../lib/interfaces/IGameLoop'\nimport IGame from '../lib/interfaces/IGame'\nimport { Actions } from '../lib/client/InputManager'\nimport Observer from '../lib/observer/Observer'\n\n/**\n * Game loop.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class GameLoop implements IGameLoop, Observer {\n  public game: IGame\n  public lastTime: number\n  public frameId: number\n  private state: any\n\n  /**\n   * Constructor.\n   *\n   * @param {IGame} game Game instance\n   */\n  constructor (game: IGame) {\n    this.game = game\n    this.lastTime = null\n    this.state = {}\n  }\n\n  /**\n   *\n   */\n  public start (): void {\n    this.game.init()\n    this.game.state.running = true\n    this.frameId = requestAnimationFrame(time => this.loop(time))\n  }\n\n  /**\n   *\n   */\n  public stop (): void {\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId)\n    }\n  }\n\n  public restart (): void {\n    this.stop()\n    this.start()\n  }\n\n  /**\n   *\n   */\n  public togglePause (): void {\n    this.game.state.paused = !this.game.state.paused\n  }\n\n  /**\n   *\n   */\n  public loop (time: number): void {\n    if (this.state[Actions.RESTART]) {\n      this.restart()\n    } else {\n      if (this.game.state.running) {\n        this.game.clear()\n        if (this.lastTime !== null) {\n          const diff = time - this.lastTime\n          if (!this.game.state.paused) {\n            this.game.state.update(diff / 1000)\n          }\n        }\n        this.lastTime = time\n        this.game.render()\n        this.frameId = requestAnimationFrame(time => this.loop(time))\n      }\n    }\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n}\n","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    if (this.source) {\n      this.source.stop(0)\n    }\n  }\n}\n","import Sound from '../audio/Sound'\n\n/**\n * Audio manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n","import Settings from '../../config/Settings'\nimport { Actions } from './InputManager'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../event/EventHandler'\nimport AudioManager from './AudioManager'\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLDivElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  showing: boolean\n\n  constructor (element, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = element\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.showing = false\n  }\n\n  createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add('tab')\n    this.element.appendChild(this.mainMenu)\n  }\n\n  openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName('tabContent')\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName('tabLink')\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' active'\n  }\n\n  createKeyboardMenu (): void {\n    let keyboardMenuId = 'keyboardMenu'\n    let keyboardLink = document.createElement('button')\n    let keyboardDiv = document.createElement('div')\n    let title = document.createElement('h4')\n    let form = document.createElement('form')\n    let submit = document.createElement('input')\n    EventHandler.registerOnElement(\n      keyboardLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, keyboardMenuId)\n    )\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\n    keyboardLink.classList.add('tabLink')\n    this.mainMenu.appendChild(keyboardLink)\n    keyboardDiv.setAttribute('id', keyboardMenuId)\n    keyboardDiv.classList.add('tabContent')\n    title.appendChild(document.createTextNode('Keyboard'))\n    form.setAttribute('id', 'keyboardSettings')\n    form.setAttribute('method', 'post')\n    submit.setAttribute('type', 'submit')\n    submit.setAttribute('value', 'Save')\n    keyboardDiv.appendChild(title)\n    keyboardDiv.appendChild(form)\n    this.element.appendChild(keyboardDiv)\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\n    form.appendChild(submit)\n    form.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\n      this.clear()\n    })\n  }\n\n  createPlayerMenu (): void {\n    let playerMenuId = 'playerMenu'\n    let playerLink = document.createElement('button')\n    let playerDiv = document.createElement('div')\n    let playerTitle = document.createElement('h4')\n    let playerForm = document.createElement('form')\n    let playerSubmit = document.createElement('input')\n    EventHandler.registerOnElement(\n      playerLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, playerMenuId)\n    )\n    playerLink.appendChild(document.createTextNode('Player'))\n    playerLink.classList.add('tabLink')\n    this.mainMenu.appendChild(playerLink)\n    playerDiv.setAttribute('id', playerMenuId)\n    playerDiv.classList.add('tabContent')\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\n    playerForm.setAttribute('id', 'playerSettings')\n    playerForm.setAttribute('method', 'post')\n    playerSubmit.setAttribute('type', 'submit')\n    playerSubmit.setAttribute('value', 'Save')\n    playerDiv.appendChild(playerTitle)\n    playerDiv.appendChild(playerForm)\n    this.element.appendChild(playerDiv)\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\n    playerForm.appendChild(playerSubmit)\n    playerForm.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\n      this.clear()\n    })\n  }\n\n  createAudioMenu (): void {\n    let audioMenuId = 'audioMenu'\n    let audioLink = document.createElement('button')\n    let audioDiv = document.createElement('div')\n    let div = document.createElement('div')\n    let audioTitle = document.createElement('h4')\n    let audioLabel = document.createElement('label')\n    let audioSlide = document.createElement('input')\n    EventHandler.registerOnElement(\n      audioLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, audioMenuId)\n    )\n    audioLink.classList.add('tabLink')\n    audioLink.appendChild(document.createTextNode('Audio'))\n    this.mainMenu.appendChild(audioLink)\n    audioDiv.setAttribute('id', audioMenuId)\n    audioDiv.classList.add('tabContent')\n    div.classList.add('row')\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\n    audioLabel.setAttribute('for', 'masterVolume')\n    audioSlide.setAttribute('id', 'masterVolume')\n    audioSlide.setAttribute('type', 'range')\n    audioSlide.setAttribute('min', '0')\n    audioSlide.setAttribute('max', '1')\n    audioSlide.setAttribute('step', '0.1')\n    audioSlide.addEventListener('change', event => this.audioManager.adjustMasterVolume(Number(audioSlide.value)))\n    div.appendChild(audioTitle)\n    div.appendChild(audioLabel)\n    div.appendChild(audioSlide)\n    audioDiv.appendChild(div)\n\n    let ambientDiv = document.createElement('div')\n    let ambientLabel = document.createElement('label')\n    let ambientSlide = document.createElement('input')\n    ambientDiv.classList.add('row')\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\n    ambientLabel.setAttribute('for', 'ambientVolume')\n    ambientSlide.setAttribute('id', 'ambientVolume')\n    ambientSlide.setAttribute('type', 'range')\n    ambientSlide.setAttribute('min', '0')\n    ambientSlide.setAttribute('max', '1')\n    ambientSlide.setAttribute('step', '0.1')\n    ambientSlide.addEventListener('change', event => this.audioManager.adjustAmbientVolume(Number(ambientSlide.value)))\n    ambientDiv.appendChild(ambientLabel)\n    ambientDiv.appendChild(ambientSlide)\n    audioDiv.appendChild(ambientDiv)\n\n    let effectsDiv = document.createElement('div')\n    let effectsLabel = document.createElement('label')\n    let effectsSlide = document.createElement('input')\n    effectsDiv.classList.add('row')\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\n    effectsLabel.setAttribute('for', 'effectsVolume')\n    effectsSlide.setAttribute('id', 'effectsVolume')\n    effectsSlide.setAttribute('type', 'range')\n    effectsSlide.setAttribute('min', '0')\n    effectsSlide.setAttribute('max', '1')\n    effectsSlide.setAttribute('step', '0.1')\n    effectsSlide.addEventListener('change', event => this.audioManager.adjustEffectsVolume(Number(effectsSlide.value)))\n    effectsDiv.appendChild(effectsLabel)\n    effectsDiv.appendChild(effectsSlide)\n    audioDiv.appendChild(effectsDiv)\n    this.element.appendChild(audioDiv)\n  }\n\n  init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu()\n    this.createPlayerMenu()\n    this.createAudioMenu()\n  }\n\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  addPlayerSettingEntry (setting, element): void {\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    let row = document.createElement('div')\n    label.setAttribute('for', setting)\n    label.appendChild(document.createTextNode(setting + ':'))\n    input.setAttribute('id', setting)\n    input.setAttribute('type', 'number')\n    input.setAttribute('name', setting)\n    input.setAttribute('value', this.settings.player[setting])\n    row.classList.add('row')\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  addEntry (setting, element): void {\n    let row = document.createElement('div')\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', this.settings.keyBoard[setting])\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\n    input.setAttribute('id', this.settings.keyBoard[setting])\n    input.setAttribute('type', 'text')\n    input.setAttribute('name', this.settings.keyBoard[setting])\n    input.setAttribute('value', setting)\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  toggleShow (): void {\n    if (this.showing) {\n      this.element.style.display = 'none'\n      this.showing = false\n    } else {\n      this.element.style.display = 'block'\n      this.showing = true\n    }\n  }\n}\n","import { Actions } from '../lib/client/InputManager'\nimport Dimension from '../lib/geometry/Dimension'\n\n/**\n * Settings class for models applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n  gameSize: Dimension\n\n  constructor (canvas: HTMLCanvasElement) {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART\n    }\n    this.player = {\n      maxVelocity: 150,\n      fireDelay: 15,\n      friction: 0.9,\n      acceleration: 50\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n    this.gameSize = new Dimension(canvas.width, canvas.height)\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n","import Background from '../models/Background'\nimport AssetManager from '../lib/client/AssetManager'\nimport InputManager from '../lib/client/InputManager'\nimport Settings from '../config/Settings'\nimport IGame from '../lib/interfaces/IGame'\nimport IGameState from '../lib/interfaces/IGameState'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Space models main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpaceGame implements IGame {\n  state: IGameState\n  background: Background\n  assetManager: AssetManager\n  inputManager: InputManager\n  settings: Settings\n  canvases\n  contexts: Map<ContextId, CanvasRenderingContext2D>\n\n  /**\n   *\n   * @param {IGameState} state\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param canvases\n   */\n  constructor (state: IGameState, assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\n    this.state = state\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.canvases = canvases\n    this.contexts = new Map<ContextId, CanvasRenderingContext2D>()\n    this.init()\n  }\n\n  /**\n   *\n   */\n  public init (): void {\n    if (this.canvases.background.getContext) {\n      this.contexts.set(ContextId.BACKGROUND, this.canvases.background.getContext('2d'))\n      this.contexts.set(ContextId.SHIP, this.canvases.ship.getContext('2d'))\n      this.contexts.set(ContextId.MAIN, this.canvases.main.getContext('2d'))\n      this.contexts.forEach(context => context.clearRect(0, 0, this.settings.gameSize.width, this.settings.gameSize.height))\n    }\n    this.state.reset()\n  }\n\n  /**\n   *\n   */\n  public clear (): void {\n    this.state.renderables.forEach(renderable => renderable.clear(this.contexts.get(renderable.contextId)))\n  }\n\n  /**\n   *\n   */\n  public render (): void {\n    this.state.renderables.forEach(renderable => renderable.render(this.contexts.get(renderable.contextId)))\n  }\n}\n","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n","import AssetManager, { AssetType } from './lib/client/AssetManager'\nimport SpaceGame from './application/SpaceGame'\nimport InputManager from './lib/client/InputManager'\nimport Settings from './config/Settings'\nimport SettingsMenu from './lib/client/SettingsMenu'\nimport EventHandler from './lib/event/EventHandler'\nimport { AssetId } from './enum/AssetId'\nimport AudioManager from './lib/client/AudioManager'\nimport GameLoop from './application/GameLoop'\nimport InvadersState from './application/InvadersState'\n\nconst audioManager = new AudioManager()\nconst assetManager = new AssetManager(audioManager)\nconst canvases = {\n  background: document.getElementById('background') as HTMLCanvasElement,\n  ship: document.getElementById('ship') as HTMLCanvasElement,\n  main: document.getElementById('main') as HTMLCanvasElement\n}\nconst settings = new Settings(canvases.background)\nconst inputManager = new InputManager(settings)\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager, audioManager)\nassetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\nassetManager.downloadAll(() => {\n  const state = new InvadersState(settings, inputManager, assetManager)\n  const game = new SpaceGame(state, assetManager, inputManager, settings, canvases)\n  const loop = new GameLoop(game)\n  inputManager.register(loop)\n  settingsMenu.init()\n  let gameOver = document.getElementById('game-over')\n  let set = document.getElementById('settings')\n  let shoot = document.getElementById('shoot')\n  let events = ['click', 'touchstart']\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\n  shoot.addEventListener('contextmenu', event => {\n    event.preventDefault()\n    return false\n  })\n  EventHandler.registerOnElement(gameOver, events, () => loop.restart())\n  EventHandler.registerOnElement(set, events, () => {\n    settingsMenu.toggleShow()\n    loop.togglePause()\n  })\n  loop.start()\n})\n"],"sourceRoot":""}