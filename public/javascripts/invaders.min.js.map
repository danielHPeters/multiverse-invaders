{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/interfaces/ICollideAble.ts","webpack:///./src/enum/ContextId.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/lib/geometry/Dimension.ts","webpack:///./src/lib/client/InputManager.ts","webpack:///./src/lib/entity/Entity.ts","webpack:///./src/enum/AssetId.ts","webpack:///./src/lib/client/AssetManager.ts","webpack:///./src/lib/collision/HitBox.ts","webpack:///./src/lib/event/EventHandler.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/gui/InvadersGui.ts","webpack:///./src/lib/collision/CollisionManager.ts","webpack:///./src/models/Enemy.ts","webpack:///./src/models/Bullet.ts","webpack:///./src/models/Pool.ts","webpack:///./src/models/Background.ts","webpack:///./src/models/Ship.ts","webpack:///./src/lib/collision/QuadTree.ts","webpack:///./src/application/InvadersState.ts","webpack:///./src/application/GameLoop.ts","webpack:///./src/lib/audio/Sound.ts","webpack:///./src/lib/client/AudioManager.ts","webpack:///./src/lib/client/SettingsMenu.ts","webpack:///./src/config/Settings.ts","webpack:///./src/application/SpaceGame.ts","webpack:///./src/lib/ajax/Ajax.ts","webpack:///./src/lib/graphics/2D/SpriteSheet.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","e","EntityType","PLAYER","ENEMY","ENEMY_BULLET","PLAYER_BULLET","BACKGROUND","MAP","GAME_OVER","LASER","MAIN_THEME","EXPLOSION_I","EXPLOSION_II","BOX","ARENA","ContextId","MAIN","SHIP","Vector2","[object Object]","x","y","this","v1","v2","vector","scalar","Error","_x","_y","Math","sqrt","magnitude","mag","divide","max","floor","normalize","multiply","pow","width","height","factor","Observable_1","Actions","UP","DOWN","LEFT","RIGHT","SHOOT","RESTART","ROTATE_LEFT","ROTATE_RIGHT","settings","super","inputMap","keyBoard","init","initializeTouchHandler","touches","start","move","window","addEventListener","event","key","state","notify","el","document","getElementById","evt","preventDefault","touchstartX","pageX","touchstartY","pageY","thisInstance","reset","changedTouches","toucheMoveX","touchMoveY","length","a","w","space","position","dimension","AssetId","SpriteSheet_1","Ajax_1","AssetType","SPRITE","SPRITE_SHEET","AUDIO","AUDIO_AMB","audioManager","cache","sprites","spriteSheets","audio","downloadCount","queue","id","path","type","opts","push","item","callback","create","method","url","responseType","response","decodeAudio","buffer","done","sprite","Image","src","spriteSheet","frameWidth","frameHeight","forEach","loadAudio","loadSprite","loadSpriteSheet","ambient","createSound","Vector2_1","ICollideAble_1","colliding","collidesWith","other","includes","toString","element","events","listener","_observers","_state","observer","filter","obs","update","observers","scoreElement","innerHTML","quadTree","objects","getAllObjects","obj","findObjects","j","isCollideAbleWith","alive","console","log","Entity_1","Dimension_1","ContextId_1","bulletPool","sound","game","velocity","percentFire","chance","contextId","explosionSound","set","speed","ctx","drawImage","clearRect","dt","scorePoints","addVector","leftEdge","rightEdge","bottomEdge","random","fire","gameSize","AssetManager_1","Bullet_1","Enemy_1","AssetId_1","assetManager","maxSize","asId","pool","assetId","subPool","getSprite","getSound","lastElement","spawn","unshift","pop","x1","y1","speed1","x2","y2","speed2","render","splice","clear","InputManager_1","startPosition","acceleration","counter","maxTop","laserSound","startX","startY","setVector","getTwo","play","add","player","friction","limit","maxVelocity","vel","clone","fireDelay","HitBox_1","QuadTree","hitBox","level","maxObjects","maxLevels","nodes","node","returnedObjects","index","getIndex","Array","insert","split","verticalMidpoint","horizontalMidpoint","topQuadrant","bottomQuadrant","subWidth","subHeight","QuadTree_1","Ship_1","Background_1","Pool_1","CollisionManager_1","inputManager","collisionManager","running","paused","playerScore","background","playerBulletPool","ship","enemyBulletPool","enemyPool","pools","entities","renderables","collideables","movables","enemy","bullet","backgroundAudio","gameOverAudio","register","spawnWave","detectCollision","movable","getPool","spacer","stop","style","display","entity","lastTime","frameId","requestAnimationFrame","time","loop","cancelAnimationFrame","restart","diff","audioContext","masterGain","gainNode","createGain","gain","connect","playing","source","createBufferSource","Sound_1","initAudioContext","AudioContext","webkitAudioContext","effectsGain","ambientGain","destination","data","decodeAudioData","then","error","EventHandler_1","showing","mainMenu","createElement","classList","appendChild","tabId","tabContent","tabLink","getElementsByClassName","className","replace","currentTarget","keyboardLink","keyboardDiv","title","form","submit","registerOnElement","openTab","createTextNode","setAttribute","keys","setting","addEntry","setKey","playerLink","playerDiv","playerTitle","playerForm","playerSubmit","addPlayerSettingEntry","Number","audioLink","audioDiv","div","audioTitle","audioLabel","audioSlide","adjustMasterVolume","ambientDiv","ambientLabel","ambientSlide","adjustAmbientVolume","effectsDiv","effectsLabel","effectsSlide","adjustEffectsVolume","createMainMenu","createKeyboardMenu","createPlayerMenu","createAudioMenu","firstChild","removeChild","label","input","row","canvas","master","effects","newKey","action","oldKey","findKey","canvases","contexts","Map","getContext","main","context","renderable","Ajax","xHttp","XMLHttpRequest","open","defaults","async","setRequestHeader","contentType","JSON","stringify","send","image","_image","_frameWidth","_frameHeight","_framesPerRow","framesPerRow","SpaceGame_1","Settings_1","SettingsMenu_1","AudioManager_1","GameLoop_1","InvadersState_1","InvadersGui_1","gui","settingsMenu","queueDownload","downloadAll","gameOver","shoot","cancelShoot","toggleShow","togglePause"],"mappings":"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","file":"invaders.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collideable entities.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default interface ICollideAble {\n  collidesWith: EntityType[]\n  colliding: boolean\n  type: EntityType\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean\n}\n","export enum ContextId {\n  BACKGROUND, MAIN, SHIP\n}\n","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n","/**\n * Dimension class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Dimension {\n  width: number\n  height: number\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width Width\n   * @param {number} height Height\n   */\n  constructor (width: number, height: number) {\n    this.width = width\n    this.height = height\n  }\n\n  /**\n   * Scale the dimension.\n   *\n   * @param {number} factor\n   */\n  scale (factor: number) {\n    this.width *= factor\n    this.height *= factor\n  }\n}\n","import Observable from '../observer/Observable'\nimport Settings from '../../config/Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport Settings from '../../config/Settings'\nimport Dimension from '../geometry/Dimension'\n\n/**\n * Base entity class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Entity {\n  dimension: Dimension\n  settings: Settings\n  position: Vector2\n\n  /**\n   * Constructor. Sets position and dimension of entity.\n   *\n   * @param {Vector2} position Initial position\n   * @param {Dimension} dimension Initial dimension\n   * @param {Settings} settings\n   */\n  constructor (position: Vector2, dimension: Dimension, settings: Settings) {\n    this.position = position\n    this.dimension = dimension\n    this.settings = settings\n  }\n\n  init (): void {\n    // throw new Error('Implement in subclass.')\n  }\n}\n","/**\n *\n */\nexport enum AssetId {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n","import SpriteSheet from '../graphics/2D/SpriteSheet'\nimport Sound from '../audio/Sound'\nimport Ajax from '../ajax/Ajax'\nimport { AssetId } from '../../enum/AssetId'\nimport AudioManager from './AudioManager'\n\nexport enum AssetType {\n  SPRITE = 'SPRITE', SPRITE_SHEET = 'SPRITE_SHEET', AUDIO = 'AUDIO', AUDIO_AMB = 'LOOP'\n}\n\n/**\n * Asset manager Class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AssetManager {\n  private cache\n  private queue\n  private downloadCount: number\n  private audioManager: AudioManager\n\n  /**\n   * Constructor.\n   *\n   * @param {AudioManager} audioManager\n   */\n  constructor (audioManager: AudioManager) {\n    this.cache = {\n      sprites: {},\n      spriteSheets: {},\n      audio: {}\n    }\n    this.downloadCount = 0\n    this.queue = []\n    this.audioManager = audioManager\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  done (): boolean {\n    return this.downloadCount === this.queue.length\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @param {string} path\n   * @param {AssetType} type\n   * @param {{}} opts\n   */\n  queueDownload (id: AssetId, path: string, type: AssetType, opts = null): void {\n    this.queue.push({\n      id: id,\n      path: path,\n      type: type,\n      opts: opts\n    })\n  }\n\n  /**\n   * Build an AJAX Request to loadAudio audio file into the buffer cache.\n   *\n   * @param item object with name of file and path to file\n   * @param callback function to execute on done\n   */\n  loadAudio (item, callback): void {\n    Ajax.create({\n      method: 'GET',\n      url: item.path,\n      responseType: 'arraybuffer'\n    }, response => {\n      this.audioManager.decodeAudio(response, item.id, buffer => {\n        this.cache.audio[item.id] = buffer\n        this.downloadCount += 1\n        if (this.done()) {\n          callback()\n        }\n      })\n    })\n  }\n\n  /**\n   *\n   * @param item\n   * @param callback\n   */\n  loadSprite (item, callback): void {\n    let sprite = new Image()\n    sprite.addEventListener('load', () => {\n      this.downloadCount++\n      if (this.done()) {\n        callback()\n      }\n    })\n    sprite.src = item.path\n    this.cache.sprites[item.id] = sprite\n  }\n\n  /**\n   * Load sprites sheet.\n   *\n   * @param item sprite sheet info\n   * @param callback called upon downloading all\n   */\n  loadSpriteSheet (item, callback): void {\n    let spriteSheet = new Image()\n    spriteSheet.addEventListener('load', () => {\n      this.cache.spriteSheets[item.id] = new SpriteSheet(spriteSheet, item.opts.frameWidth || 0, item.opts.frameHeight || 0)\n      this.downloadCount += 1\n      if (this.done()) {\n        callback()\n      }\n    })\n    spriteSheet.src = item.path\n  }\n\n  /**\n   *\n   * @param callback\n   */\n  downloadAll (callback): void {\n    this.queue.forEach(item => {\n      if (item.type === AssetType.AUDIO) {\n        this.loadAudio(item, callback)\n      } else if (item.type === AssetType.SPRITE) {\n        this.loadSprite(item, callback)\n      } else if (item.type === AssetType.SPRITE_SHEET) {\n        this.loadSpriteSheet(item, callback)\n      }\n    })\n  }\n\n  /**\n   * Create an audio buffer source node from cached buffer.\n   * Send it to the destination of the audio context and play it.\n   *\n   * @param {AssetId} id file id\n   * @param {AssetType} type\n   */\n  getSound (id: AssetId, type: AssetType): Sound {\n    let ambient = type === AssetType.AUDIO_AMB\n    return this.audioManager.createSound(this.cache.audio[id], ambient)\n  }\n\n  /**\n   *\n   * @param {AssetId} id\n   * @returns {any}\n   */\n  getSprite (id: AssetId): any {\n    return this.cache.sprites[id]\n  }\n\n  /**\n   * Get sprite sheet by name.\n   *\n   * @param {AssetId} id\n   * @returns {SpriteSheet}\n   */\n  getSpriteSheet (id: AssetId): SpriteSheet {\n    return this.cache.spriteSheets[id]\n  }\n}\n","import Vector2 from '../math/Vector2'\nimport ICollideAble, { EntityType } from '../interfaces/ICollideAble'\n\n/**\n * Hitbox used for defining collision boundaries.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class HitBox implements ICollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  position: Vector2\n  width: number\n  height: number\n\n  /**\n   * Initializes position and dimension.\n   * @param {number} x position x\n   * @param {number} y position y\n   * @param {number} width dimension width\n   * @param {number} height dimension height\n   */\n  constructor (x, y, width, height) {\n    this.position = new Vector2(x, y)\n    this.width = width\n    this.height = height\n    this.colliding = false\n    this.collidesWith = []\n    this.type = EntityType.BOX\n    this.collidesWith.push(EntityType.PLAYER)\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","/**\n * Wrapper class for event handler convenience functions.\n */\nexport default class EventHandler {\n  /**\n   * Register multiple events with the same event listener on one element.\n   *\n   * @param {HTMLElement} element html element to add the events to\n   * @param {Array<string>} events the events to be registered\n   * @param {EventListener} listener the event listener function\n   */\n  static registerOnElement (element: HTMLElement, events: Array<string>, listener: EventListener): void {\n    events.forEach(event => element.addEventListener(event, listener))\n  }\n}\n","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n","import Observer from '../lib/observer/Observer'\n\n/**\n * Multiverse Invaders GUI.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersGui implements Observer {\n  scoreElement: HTMLElement\n\n  /**\n   * Constructor.\n   */\n  constructor () {\n    this.scoreElement = document.getElementById('score')\n  }\n\n  /**\n   *\n   * @param state\n   */\n  public update (state: any): void {\n    this.scoreElement.innerHTML = state.toString()\n  }\n}\n","import QuadTree from './QuadTree'\nimport ICollisionManager from '../interfaces/ICollisionManager'\n\n/**\n * Collision Manager.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class CollisionManager implements ICollisionManager {\n  quadTree: QuadTree\n\n  /**\n   * Constructor.\n   *\n   * @param {QuadTree} quadTree\n   */\n  constructor (quadTree: QuadTree) {\n    this.quadTree = quadTree\n  }\n\n  /**\n   * Collision detection algorithm.\n   */\n  detectCollision (): void {\n    let objects = []\n    this.quadTree.getAllObjects(objects)\n    for (let i = 0; i < objects.length; i++) {\n      let obj = []\n      this.quadTree.findObjects(obj, objects[i])\n\n      for (let j = 0; j < obj.length; j++) {\n        if (objects[i].isCollideAbleWith(obj[j]) &&\n          (Math.floor(objects[i].position.x) < Math.floor(obj[j].position.x) + obj[j].dimension.width &&\n            Math.floor(objects[i].position.x) + objects[i].dimension.width > Math.floor(obj[j].position.x) &&\n            Math.floor(objects[i].position.y) < Math.floor(obj[j].position.y) + obj[j].dimension.height &&\n            Math.floor(objects[i].position.y) + objects[i].dimension.height > Math.floor(obj[j].position.y))\n        && objects[i].alive && obj[j].alive) {\n          console.log(objects[i])\n          objects[i].colliding = true\n          obj[j].colliding = true\n        }\n      }\n    }\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Sound from '../lib/audio/Sound'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\nimport IGameState from '../lib/interfaces/IGameState'\n\n/**\n * Enemy ship class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Enemy extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  velocity: Vector2\n  speed: number\n  leftEdge: number\n  rightEdge: number\n  bottomEdge: number\n  sprite: any\n  percentFire: number\n  chance: number\n  alive: boolean\n  bulletPool: Pool\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  explosionSound: Sound\n  game: IGameState\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Pool} bulletPool\n   * @param {Settings} settings\n   * @param {Sound} sound\n   * @param {IGameState} game\n   */\n  constructor (width: number, height: number, sprite, type: EntityType, bulletPool: Pool, settings: Settings, sound: Sound, game: IGameState) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = sprite\n    this.percentFire = 0.001\n    this.chance = 0\n    this.alive = false\n    this.type = type\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.PLAYER_BULLET)\n    this.colliding = false\n    this.bulletPool = bulletPool\n    this.contextId = ContextId.MAIN\n    this.explosionSound = sound\n    this.game = game\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.position.set(0, 0)\n    this.velocity.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.get(Math.floor(this.position.x + this.dimension.width / 2), Math.floor(this.position.y + this.dimension.height), -200)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (this.alive) {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y, this.dimension.width + 1, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt Delta time\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      if (this.alive) {\n        this.position.addVector(this.velocity)\n        if (this.position.x <= this.leftEdge) {\n          this.velocity.x = this.speed\n        } else if (this.position.x >= this.rightEdge + this.dimension.width) {\n          this.velocity.x = -this.speed\n        } else if (this.position.y >= this.bottomEdge) {\n          this.speed = 1.5\n          this.velocity.y = 0\n          this.position.y -= 5\n          this.velocity.x = -this.speed\n        }\n        this.chance = Math.floor(Math.random() * 101)\n        if (this.chance / 100 < this.percentFire) {\n          this.fire()\n        }\n      }\n    } else {\n      this.game.scorePoints()\n      // this.explosionSound.play()\n      this.alive = false\n    }\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.velocity.set(0, speed)\n    this.speed = speed\n    this.alive = true\n    this.leftEdge = this.position.x - 180\n    this.rightEdge = this.position.x + 180\n    this.bottomEdge = this.position.y + 280\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\nimport ISpawnAble from '../lib/interfaces/ISpawnAble'\n\n/**\n * Bullet class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Bullet extends Entity implements IRenderable, IMovable, ICollideAble, ISpawnAble {\n  contextId: ContextId\n  speed: number\n  sprite: any\n  alive: boolean\n  collidesWith\n  type: EntityType\n  colliding: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {EntityType} type\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, type: EntityType, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 0\n    this.sprite = sprite\n    this.alive = false\n    this.type = type\n    this.colliding = false\n    this.collidesWith = []\n    if (this.type === EntityType.PLAYER_BULLET) {\n      this.collidesWith.push(EntityType.ENEMY)\n    } else if (this.type === EntityType.ENEMY_BULLET) {\n      this.collidesWith.push(EntityType.PLAYER)\n    }\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n  }\n\n  init (): void {\n    this.position.set(0, 0)\n    this.speed = 0\n    this.alive = false\n    this.colliding = false\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  spawn (x: number, y: number, speed: number): void {\n    this.position.set(x, y)\n    this.speed = speed\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height)) {\n      this.alive = false\n    } else {\n      ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(this.position.x - 1, this.position.y - 1, this.dimension.width + 1, this.dimension.height + 1)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if ((this.type === EntityType.PLAYER_BULLET && this.position.y <= 0 - this.dimension.height) ||\n      (this.type === EntityType.ENEMY_BULLET && this.position.y >= this.settings.gameSize.height) ||\n      this.colliding) {\n      this.alive = false\n      this.colliding = false\n    } else {\n      this.position.y -= Math.floor(this.speed * dt)\n    }\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Bullet from './Bullet'\nimport Enemy from './Enemy'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport { AssetId } from '../enum/AssetId'\nimport Settings from '../config/Settings'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IGameState from '../lib/interfaces/IGameState'\n\n/**\n *\n */\nexport default class Pool implements IRenderable, IMovable {\n  contextId: ContextId\n  assetManager: AssetManager\n  maxSize: number\n  type: EntityType\n  assetId: AssetId\n  pool: any[]\n  subPool: Pool\n  settings: Settings\n  game: IGameState\n\n  /**\n   *\n   * @param {AssetManager} assetManager\n   * @param {number} maxSize\n   * @param {EntityType} type\n   * @param {AssetId} asId\n   * @param {Settings} settings\n   * @param {Pool} pool\n   */\n  constructor (assetManager: AssetManager, maxSize: number, type: EntityType, asId: AssetId, settings: Settings, pool: Pool = null, game: IGameState = null) {\n    this.assetManager = assetManager\n    this.maxSize = maxSize\n    this.type = type\n    this.assetId = asId\n    this.pool = []\n    this.subPool = pool\n    this.settings = settings\n    this.contextId = ContextId.MAIN\n    this.game = game\n    this.init()\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const sprite = this.assetManager.getSprite(this.assetId)\n    if (this.type === EntityType.ENEMY) {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Enemy(sprite.width, sprite.height, sprite, this.type, this.subPool, this.settings, this.assetManager.getSound(AssetId.EXPLOSION_I, AssetType.AUDIO), this.game)\n      }\n    } else {\n      for (let i = 0; i < this.maxSize; i++) {\n        this.pool[i] = new Bullet(sprite.width, sprite.height, sprite, this.type, this.settings)\n      }\n    }\n  }\n\n  /**\n   *\n   * @returns {IMovable[]}\n   */\n  getPool (): IMovable[] {\n    return this.pool.filter(object => object.alive)\n  }\n\n  /**\n   *\n   * @param {number} x\n   * @param {number} y\n   * @param {number} speed\n   */\n  get (x: number, y: number, speed: number): void {\n    const lastElement = this.pool[this.maxSize - 1]\n    if (!lastElement.alive) {\n      lastElement.spawn(x, y, speed)\n      this.pool.unshift(this.pool.pop())\n    }\n  }\n\n  /**\n   *\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} speed1\n   * @param {number} x2\n   * @param {number} y2\n   * @param {number} speed2\n   */\n  getTwo (x1: number, y1: number, speed1: number, x2: number, y2: number, speed2: number): void {\n    if (!this.pool[this.maxSize - 1].alive &&\n      !this.pool[this.maxSize - 2].alive) {\n      this.get(x1, y1, speed1)\n      this.get(x2, y2, speed2)\n    }\n  }\n\n  /**\n   *\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    for (let i = 0; i < this.pool.length; i++) {\n      // Only draw until we find a bullet that is not alive\n      if (this.pool[i].alive) {\n        this.pool[i].render(ctx)\n        //\n      } else {\n        this.pool[i].init()\n        this.pool.push((this.pool.splice(i, 1))[0])\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    this.pool.forEach(object => object.clear(ctx))\n  }\n\n  move (dt: number): void {\n    this.pool.forEach(object => object.move(dt))\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport { EntityType } from '../lib/interfaces/ICollideAble'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport { ContextId } from '../enum/ContextId'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Entity from '../lib/entity/Entity'\nimport Dimension from '../lib/geometry/Dimension'\nimport Settings from '../config/Settings'\n\n/**\n * Shifting background.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Background extends Entity implements IRenderable, IMovable {\n  contextId: ContextId\n  speed: number\n  sprite: any\n\n  /**\n   * Constructor.\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param sprite\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, sprite: any, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.speed = 1\n    this.sprite = sprite\n    this.contextId = ContextId.BACKGROUND\n  }\n\n  /**\n   * Initialize.\n   */\n  init (): void {\n    this.position.set(0, 0)\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    ctx.drawImage(this.sprite, this.position.x, this.position.y)\n    ctx.drawImage(this.sprite, this.position.x, this.position.y - this.dimension.height)\n  }\n\n  /**\n   * Update position.\n   *\n   * @param {number} dt Delta Time\n   */\n  move (dt: number): void {\n    this.position.y += this.speed\n    if (this.position.y >= this.dimension.height) {\n      this.position.y = 0\n    }\n  }\n\n  /**\n   * Clear the background.\n   */\n  clear (): void {\n    // Not applicable\n  }\n}\n","import Vector2 from '../lib/math/Vector2'\nimport Pool from './Pool'\nimport Observer from '../lib/observer/Observer'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport { Actions } from '../lib/client/InputManager'\nimport AssetManager, { AssetType } from '../lib/client/AssetManager'\nimport Sound from '../lib/audio/Sound'\nimport { AssetId } from '../enum/AssetId'\nimport Entity from '../lib/entity/Entity'\nimport Settings from '../config/Settings'\nimport IMovable from '../lib/interfaces/IMovable'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Dimension from '../lib/geometry/Dimension'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Player ship model class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Ship extends Entity implements IRenderable, IMovable, Observer, ICollideAble {\n  acceleration: Vector2\n  sprite: any\n  bulletPool: Pool\n  counter: number\n  collidesWith\n  type: EntityType\n  colliding: boolean\n  velocity: Vector2\n  state\n  maxTop: number\n  startPosition\n  settings: Settings\n  laserSound: Sound\n  assetManager: AssetManager\n  contextId: ContextId\n  alive: boolean\n\n  /**\n   *\n   * @param {number} width\n   * @param {number} height\n   * @param {AssetManager} assetManager\n   * @param {Pool} pool\n   * @param {Settings} settings\n   */\n  constructor (width: number, height: number, assetManager: AssetManager, pool: Pool, settings: Settings) {\n    super(new Vector2(0, 0), new Dimension(width, height), settings)\n    this.startPosition = new Vector2(0, 0)\n    this.acceleration = new Vector2(0, 0)\n    this.velocity = new Vector2(0, 0)\n    this.sprite = assetManager.getSprite(AssetId.PLAYER)\n    this.type = EntityType.PLAYER\n    this.bulletPool = pool\n    this.counter = 0\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ENEMY_BULLET)\n    this.colliding = false\n    this.state = {}\n    this.settings = settings\n    this.assetManager = assetManager\n    this.maxTop = Math.floor(this.settings.gameSize.height / 4 * 3)\n    this.laserSound = assetManager.getSound(AssetId.LASER, AssetType.AUDIO)\n    this.contextId = ContextId.SHIP\n    this.alive = false\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    const startX = this.settings.gameSize.width / 2 - this.assetManager.getSprite(AssetId.PLAYER).width\n    const startY = this.settings.gameSize.height / 4 * 3 + this.assetManager.getSprite(AssetId.PLAYER).height * 2\n    this.position.setVector(new Vector2(startX, startY))\n    this.velocity.set(0, 0)\n    this.colliding = false\n    this.alive = true\n  }\n\n  /**\n   *\n   */\n  fire (): void {\n    this.bulletPool.getTwo(\n      Math.floor(this.position.x) + 12, Math.floor(this.position.y), 200,\n      Math.floor(this.position.x) + 66, Math.floor(this.position.y), 200\n    )\n    this.laserSound.play()\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  render (ctx: CanvasRenderingContext2D): void {\n    if (!this.colliding) {\n      ctx.drawImage(this.sprite, Math.floor(this.position.x), Math.floor(this.position.y))\n    }\n  }\n\n  /**\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  clear (ctx: CanvasRenderingContext2D): void {\n    ctx.clearRect(Math.floor(this.position.x), Math.floor(this.position.y), this.dimension.width, this.dimension.height)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  move (dt: number): void {\n    if (!this.colliding) {\n      this.counter++\n      this.acceleration.set(0, 0)\n      if (this.state[Actions.LEFT]) {\n        this.acceleration.add(-this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.RIGHT]) {\n        this.acceleration.add(this.settings.player.acceleration, 0)\n      }\n      if (this.state[Actions.UP]) {\n        this.acceleration.add(0, -this.settings.player.acceleration)\n      }\n      if (this.state[Actions.DOWN]) {\n        this.acceleration.add(0, this.settings.player.acceleration)\n      }\n      this.velocity.multiply(this.settings.player.friction)\n      this.velocity.addVector(this.acceleration)\n      this.velocity.limit(this.settings.player.maxVelocity)\n      const vel = this.velocity.clone()\n      vel.multiply(dt)\n      this.position.addVector(vel)\n      if (this.position.x <= 0) {\n        this.position.x = 0\n        this.velocity.x += -1\n      }\n      if (this.position.x >= this.settings.gameSize.width - this.dimension.width) {\n        this.position.x = this.settings.gameSize.width - this.dimension.width\n      }\n      if (this.position.y <= this.maxTop) {\n        this.position.y = this.maxTop\n      }\n      if (this.position.y >= this.settings.gameSize.height - this.dimension.height) {\n        this.position.y = this.settings.gameSize.height - this.dimension.height\n      }\n\n      if (this.state[Actions.SHOOT] && this.counter >= this.settings.player.fireDelay) {\n        this.fire()\n        this.counter = 0\n      }\n    }\n  }\n\n  /**\n   *\n   * @param state\n   */\n  update (state: any): void {\n    this.state = state\n  }\n\n  /**\n   *\n   * @param {ICollideAble} other\n   * @returns {boolean}\n   */\n  isCollideAbleWith (other: ICollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n}\n","import HitBox from './HitBox'\nimport ICollideAble from '../interfaces/ICollideAble'\n\n/**\n * QuadTree class used to optimize collision checking.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class QuadTree {\n  level: number\n  maxObjects: number\n  maxLevels: number\n  hitBox: HitBox\n  objects: ICollideAble[]\n  nodes: QuadTree[]\n\n  /**\n   * Constructor.\n   *\n   * @param {HitBox} hitBox\n   * @param {number} level\n   */\n  constructor (hitBox = new HitBox(0, 0, 0, 0), level = 0) {\n    this.level = level\n    this.maxObjects = 10\n    this.maxLevels = 5\n    this.hitBox = hitBox\n    this.objects = []\n    this.nodes = []\n  }\n\n  /**\n   * Clears the QuadTree and its sub nodes from all models objects.\n   */\n  clear (): void {\n    this.objects = []\n    this.nodes.forEach(node => node.clear())\n    this.nodes = []\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @returns {any}\n   */\n  getAllObjects (returnedObjects) {\n    this.nodes.forEach(node => node.getAllObjects(returnedObjects))\n    this.objects.forEach(object => returnedObjects.push(object))\n    return returnedObjects\n  }\n\n  /**\n   *\n   * @param returnedObjects\n   * @param object\n   * @returns {any}\n   */\n  findObjects (returnedObjects, object) {\n    if (typeof object === 'undefined') {\n      console.log('UNDEFINED OBJECT')\n      return\n    }\n    let index = this.getIndex(object)\n    if (index !== -1 && this.nodes.length) {\n      this.nodes[index].findObjects(returnedObjects, object)\n    }\n    this.objects.forEach(obj => returnedObjects.push(obj))\n    return returnedObjects\n  }\n\n  /**\n   * Insert an object into the QuadTree.\n   *\n   * @param object\n   */\n  insert (object): void {\n    if (typeof object === 'undefined') {\n      return\n    }\n    if (object instanceof Array) {\n      object.forEach(element => this.insert(element))\n      return\n    }\n    if (this.nodes.length > 0) {\n      let index = this.getIndex(object)\n      // Only addVector the object to a sub node if it can fit completely within one\n      if (index !== -1) {\n        this.nodes[index].insert(object)\n        return\n      }\n    }\n    this.objects.push(object)\n\n    if (this.objects.length > this.maxObjects && this.level < this.maxLevels) {\n      if (typeof this.nodes[0] === 'undefined') {\n        this.split()\n      }\n      let i = 0\n      while (i < this.objects.length) {\n        let index = this.getIndex(this.objects[i])\n        if (index !== -1) {\n          this.nodes[index].insert((this.objects.splice(i, 1))[0])\n        } else {\n          i++\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the index of an object from the QuadTree.\n   *\n   * @param object\n   * @returns {number}\n   */\n  getIndex (object): number {\n    let index = -1\n    let verticalMidpoint = this.hitBox.position.x + this.hitBox.width / 2\n    let horizontalMidpoint = this.hitBox.position.y + this.hitBox.height / 2\n    // Object can fit completely within the top quadrant\n    let topQuadrant = (object.position.y < horizontalMidpoint && object.position.y + object.height < horizontalMidpoint)\n    // Object can fit completely within the bottom quadrant\n    let bottomQuadrant = (object.position.y > horizontalMidpoint)\n    // Object can fit completely within the left quadrants\n    if (object.position.x < verticalMidpoint && object.position.x + object.width < verticalMidpoint) {\n      if (topQuadrant) {\n        index = 1\n      } else if (bottomQuadrant) {\n        index = 2\n      }\n    } else if (object.position.x > verticalMidpoint) { // Object can fix completely within the right quadrants\n      if (topQuadrant) {\n        index = 0\n      } else if (bottomQuadrant) {\n        index = 3\n      }\n    }\n    return index\n  }\n\n  /**\n   * Split the tree on demand.\n   */\n  split (): void {\n    let subWidth = (this.hitBox.width / 2) | 0\n    let subHeight = (this.hitBox.height / 2) | 0\n    this.nodes[0] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[1] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y, subWidth, subHeight), this.level + 1)\n    this.nodes[2] = new QuadTree(\n      new HitBox(this.hitBox.position.x, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n    this.nodes[3] = new QuadTree(\n      new HitBox(this.hitBox.position.x + subWidth, this.hitBox.position.y + subHeight, subWidth, subHeight), this.level + 1)\n  }\n}\n","import IGameState from '../lib/interfaces/IGameState'\nimport ICollideAble, { EntityType } from '../lib/interfaces/ICollideAble'\nimport QuadTree from '../lib/collision/QuadTree'\nimport Settings from '../config/Settings'\nimport InputManager from '../lib/client/InputManager'\nimport { default as AssetManager, AssetType } from '../lib/client/AssetManager'\nimport Ship from '../models/Ship'\nimport HitBox from '../lib/collision/HitBox'\nimport { AssetId } from '../enum/AssetId'\nimport Background from '../models/Background'\nimport Pool from '../models/Pool'\nimport IRenderable from '../lib/interfaces/IRenderable'\nimport Entity from '../lib/entity/Entity'\nimport IMovable from '../lib/interfaces/IMovable'\nimport Sound from '../lib/audio/Sound'\nimport CollisionManager from '../lib/collision/CollisionManager'\nimport Observable from '../lib/observer/Observable'\n\n/**\n * Multiverse invaders game state.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InvadersState extends Observable implements IGameState {\n  running: boolean\n  paused: boolean\n  quadTree: QuadTree\n  entities: Entity[]\n  renderables: IRenderable[]\n  collideables: ICollideAble[]\n  movables: IMovable[]\n  pools: Pool[]\n  assetManager: AssetManager\n  collisionManager: CollisionManager\n  backgroundAudio: Sound\n  gameOverAudio: Sound\n  playerScore: number\n\n  /**\n   *\n   * @param {Settings} settings\n   * @param {InputManager} inputManager\n   * @param {AssetManager} assetManager\n   * @param {CollisionManager} collisionManager\n   */\n  constructor (settings: Settings, inputManager: InputManager, assetManager: AssetManager) {\n    super()\n    this.assetManager = assetManager\n    this.quadTree = new QuadTree(new HitBox(0, 0, settings.gameSize.width, settings.gameSize.height))\n    this.collisionManager = new CollisionManager(this.quadTree)\n    this.running = false\n    this.paused = false\n    this.playerScore = 0\n    const background = new Background(\n      settings.gameSize.width,\n      settings.gameSize.height,\n      assetManager.getSprite(AssetId.BACKGROUND),\n      settings\n    )\n    const playerBulletPool = new Pool(this.assetManager, 80, EntityType.PLAYER_BULLET, AssetId.PLAYER_BULLET, settings)\n    const ship = new Ship(assetManager.getSprite(AssetId.PLAYER).width, assetManager.getSprite(AssetId.PLAYER).height, assetManager, playerBulletPool, settings)\n    const enemyBulletPool = new Pool(this.assetManager, 50, EntityType.ENEMY_BULLET, AssetId.ENEMY_BULLET, settings)\n    const enemyPool = new Pool(this.assetManager, 30, EntityType.ENEMY, AssetId.ENEMY, settings, enemyBulletPool, this)\n    this.pools = []\n    this.entities = []\n    this.renderables = []\n    this.collideables = []\n    this.movables = []\n\n    this.pools.push(playerBulletPool)\n    this.pools.push(enemyBulletPool)\n    this.pools.push(enemyPool)\n\n    this.entities.push(ship)\n    this.entities.push(background)\n\n    enemyPool.pool.forEach(enemy => this.entities.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.entities.push(bullet))\n\n    this.collideables.push(ship)\n\n    enemyPool.pool.forEach(enemy => this.collideables.push(enemy))\n    enemyBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n    playerBulletPool.pool.forEach(bullet => this.collideables.push(bullet))\n\n    this.movables.push(ship)\n    this.movables.push(background)\n    this.movables.push(enemyPool)\n    this.movables.push(playerBulletPool)\n    this.movables.push(enemyBulletPool)\n\n    this.renderables.push(ship)\n    this.renderables.push(background)\n    this.renderables.push(playerBulletPool)\n    this.renderables.push(enemyBulletPool)\n    this.renderables.push(enemyPool)\n\n    this.backgroundAudio = this.assetManager.getSound(AssetId.MAIN_THEME, AssetType.AUDIO_AMB)\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    inputManager.register(ship)\n  }\n\n  /**\n   *\n   * @param {number} dt\n   */\n  update (dt: number): void {\n    this.spawnWave()\n    this.quadTree.clear()\n    this.quadTree.insert(this.collideables)\n    this.collisionManager.detectCollision()\n    this.movables.forEach(movable => movable.move(dt))\n  }\n\n  /**\n   *\n   */\n  spawnWave (): void {\n    if (this.pools[2].getPool().length === 0) {\n      const height = this.assetManager.getSprite(AssetId.ENEMY).height\n      const width = this.assetManager.getSprite(AssetId.ENEMY).width\n      let x = 200\n      let y = -height\n      const spacer = y * 1.5\n      for (let i = 1; i <= 21; i++) {\n        this.pools[2].get(x, y, 300)\n        x += width + 25\n        if (i % 7 === 0) {\n          x = 200\n          y += spacer\n        }\n      }\n    }\n  }\n\n  scorePoints (): void {\n    this.playerScore += 10\n    this.state = this.playerScore\n    this.notify()\n  }\n\n  /**\n   *\n   */\n  gameOver (): void {\n    this.backgroundAudio.stop()\n    document.getElementById('game-over').style.display = 'block'\n    this.gameOverAudio = this.assetManager.getSound(AssetId.GAME_OVER, AssetType.AUDIO_AMB)\n    this.gameOverAudio.play(true)\n  }\n\n  /**\n   *\n   */\n  reset (): void {\n    this.backgroundAudio.stop()\n    this.gameOverAudio.stop()\n    document.getElementById('game-over').style.display = 'none'\n    this.quadTree.clear()\n    this.entities.forEach(entity => entity.init())\n    this.spawnWave()\n    this.playerScore = 0\n    this.state = this.playerScore\n    this.notify()\n    this.backgroundAudio.play(true)\n  }\n}\n","import IGameLoop from '../lib/interfaces/IGameLoop'\nimport IGame from '../lib/interfaces/IGame'\nimport { Actions } from '../lib/client/InputManager'\nimport Observer from '../lib/observer/Observer'\n\n/**\n * Game loop.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class GameLoop implements IGameLoop, Observer {\n  public game: IGame\n  public lastTime: number\n  public frameId: number\n  private state: any\n\n  /**\n   * Constructor.\n   *\n   * @param {IGame} game Game instance\n   */\n  constructor (game: IGame) {\n    this.game = game\n    this.lastTime = null\n    this.state = {}\n  }\n\n  /**\n   *\n   */\n  public start (): void {\n    this.game.init()\n    this.game.state.running = true\n    this.frameId = requestAnimationFrame(time => this.loop(time))\n  }\n\n  /**\n   *\n   */\n  public stop (): void {\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId)\n    }\n  }\n\n  public restart (): void {\n    this.stop()\n    this.start()\n  }\n\n  /**\n   *\n   */\n  public togglePause (): void {\n    this.game.state.paused = !this.game.state.paused\n  }\n\n  /**\n   *\n   */\n  public loop (time: number): void {\n    if (this.state[Actions.RESTART]) {\n      this.restart()\n    } else {\n      if (this.game.state.running) {\n        this.game.clear()\n        if (this.lastTime !== null) {\n          const diff = time - this.lastTime\n          if (!this.game.state.paused) {\n            this.game.state.update(diff / 1000)\n          }\n        }\n        this.lastTime = time\n        this.game.render()\n        this.frameId = requestAnimationFrame(time => this.loop(time))\n      }\n    }\n  }\n\n  update (state: any): void {\n    this.state = state\n  }\n}\n","/**\n * Sound class used to play a sound from a file.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Sound {\n  audioContext: AudioContext\n  source: AudioBufferSourceNode\n  gainNode: GainNode\n  masterGain: GainNode\n  buffer\n  playing: boolean\n\n  /**\n   *\n   * @param audioContext\n   * @param {GainNode} masterGain\n   * @param buffer\n   */\n  constructor (audioContext, masterGain: GainNode, buffer) {\n    this.audioContext = audioContext\n    this.masterGain = masterGain\n    this.buffer = buffer\n    this.gainNode = this.audioContext.createGain()\n    this.gainNode.gain.value = 0.2\n    this.gainNode.connect(this.masterGain)\n    this.playing = false\n  }\n\n  /**\n   *\n   * @param {boolean} loop\n   */\n  play (loop = false): void {\n    this.source = this.audioContext.createBufferSource()\n    this.source.buffer = this.buffer\n    this.source.loop = loop\n    this.source.connect(this.gainNode)\n    this.source.start(0)\n  }\n\n  /**\n   *\n   */\n  stop (): void {\n    if (this.source) {\n      this.source.stop(0)\n    }\n  }\n}\n","import Sound from '../audio/Sound'\n\n/**\n * Audio manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class AudioManager {\n  private audioContext: AudioContext\n  private masterGain: GainNode\n  private effectsGain: GainNode\n  private ambientGain: GainNode\n\n  /**\n   *\n   */\n  constructor () {\n    this.initAudioContext()\n  }\n\n  /**\n   *\n   */\n  initAudioContext (): void {\n    try {\n      // Fix for browsers using prefixes\n      window.AudioContext = window.AudioContext || webkitAudioContext\n      this.audioContext = new AudioContext()\n      this.masterGain = this.audioContext.createGain()\n      this.effectsGain = this.audioContext.createGain()\n      this.ambientGain = this.audioContext.createGain()\n      this.masterGain.gain.value = 1\n      this.masterGain.connect(this.audioContext.destination)\n      this.effectsGain.connect(this.masterGain)\n      this.ambientGain.connect(this.masterGain)\n      this.ambientGain.gain.value = 1\n      this.effectsGain.gain.value = 1\n    } catch (e) {\n      console.log('Web Audio API is not supported in this browser')\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @param id\n   * @param callback\n   */\n  decodeAudio (data, id, callback): void {\n    this.audioContext.decodeAudioData(data).then(\n      buffer => callback(buffer),\n      error => { console.log('Error with decoding audio data' + error) }\n    )\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustMasterVolume (value: number): void {\n    this.masterGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustAmbientVolume (value: number): void {\n    this.ambientGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param {number} value\n   */\n  adjustEffectsVolume (value: number): void {\n    this.effectsGain.gain.value = value\n  }\n\n  /**\n   *\n   * @param buffer\n   * @param {boolean} ambient\n   * @returns {Sound}\n   */\n  createSound (buffer, ambient: boolean): Sound {\n    return new Sound(this.audioContext, ambient ? this.ambientGain : this.effectsGain, buffer)\n  }\n}\n","import Settings from '../../config/Settings'\nimport { Actions } from './InputManager'\nimport AssetManager from './AssetManager'\nimport EventHandler from '../event/EventHandler'\nimport AudioManager from './AudioManager'\n\n/**\n * Simple settings menu.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SettingsMenu {\n  element: HTMLDivElement\n  mainMenu: HTMLDivElement\n  settings: Settings\n  assetManager: AssetManager\n  audioManager: AudioManager\n  showing: boolean\n\n  constructor (element, settings: Settings, assetManager: AssetManager, audioManager: AudioManager) {\n    this.element = element\n    this.settings = settings\n    this.assetManager = assetManager\n    this.audioManager = audioManager\n    this.showing = false\n  }\n\n  createMainMenu (): void {\n    this.mainMenu = document.createElement('div')\n    this.mainMenu.classList.add('tab')\n    this.element.appendChild(this.mainMenu)\n  }\n\n  openTab (event, tabId: string): void {\n    let tabContent\n    let tabLink\n    tabContent = document.getElementsByClassName('tabContent')\n    for (let i = 0; i < tabContent.length; i++) {\n      tabContent[i].style.display = 'none'\n    }\n    tabLink = document.getElementsByClassName('tabLink')\n    for (let i = 0; i < tabLink.length; i++) {\n      tabLink[i].className = tabLink[i].className.replace(' active', '')\n    }\n    document.getElementById(tabId).style.display = 'block'\n    event.currentTarget.className += ' active'\n  }\n\n  createKeyboardMenu (): void {\n    let keyboardMenuId = 'keyboardMenu'\n    let keyboardLink = document.createElement('button')\n    let keyboardDiv = document.createElement('div')\n    let title = document.createElement('h4')\n    let form = document.createElement('form')\n    let submit = document.createElement('input')\n    EventHandler.registerOnElement(\n      keyboardLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, keyboardMenuId)\n    )\n    keyboardLink.appendChild(document.createTextNode('Keyboard'))\n    keyboardLink.classList.add('tabLink')\n    this.mainMenu.appendChild(keyboardLink)\n    keyboardDiv.setAttribute('id', keyboardMenuId)\n    keyboardDiv.classList.add('tabContent')\n    title.appendChild(document.createTextNode('Keyboard'))\n    form.setAttribute('id', 'keyboardSettings')\n    form.setAttribute('method', 'post')\n    submit.setAttribute('type', 'submit')\n    submit.setAttribute('value', 'Save')\n    keyboardDiv.appendChild(title)\n    keyboardDiv.appendChild(form)\n    this.element.appendChild(keyboardDiv)\n    Object.keys(this.settings.keyBoard).forEach(setting => this.addEntry(setting, form))\n    form.appendChild(submit)\n    form.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.setKey((document.getElementById(Actions.UP) as HTMLInputElement).value, Actions.UP)\n      this.settings.setKey((document.getElementById(Actions.DOWN) as HTMLInputElement).value, Actions.DOWN)\n      this.settings.setKey((document.getElementById(Actions.LEFT) as HTMLInputElement).value, Actions.LEFT)\n      this.settings.setKey((document.getElementById(Actions.RIGHT) as HTMLInputElement).value, Actions.RIGHT)\n      this.settings.setKey((document.getElementById(Actions.SHOOT) as HTMLInputElement).value, Actions.SHOOT)\n      this.settings.setKey((document.getElementById(Actions.RESTART) as HTMLInputElement).value, Actions.RESTART)\n      this.clear()\n    })\n  }\n\n  createPlayerMenu (): void {\n    let playerMenuId = 'playerMenu'\n    let playerLink = document.createElement('button')\n    let playerDiv = document.createElement('div')\n    let playerTitle = document.createElement('h4')\n    let playerForm = document.createElement('form')\n    let playerSubmit = document.createElement('input')\n    EventHandler.registerOnElement(\n      playerLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, playerMenuId)\n    )\n    playerLink.appendChild(document.createTextNode('Player'))\n    playerLink.classList.add('tabLink')\n    this.mainMenu.appendChild(playerLink)\n    playerDiv.setAttribute('id', playerMenuId)\n    playerDiv.classList.add('tabContent')\n    playerTitle.appendChild(document.createTextNode('Player Settings'))\n    playerForm.setAttribute('id', 'playerSettings')\n    playerForm.setAttribute('method', 'post')\n    playerSubmit.setAttribute('type', 'submit')\n    playerSubmit.setAttribute('value', 'Save')\n    playerDiv.appendChild(playerTitle)\n    playerDiv.appendChild(playerForm)\n    this.element.appendChild(playerDiv)\n    Object.keys(this.settings.player).forEach(setting => this.addPlayerSettingEntry(setting, playerForm))\n    playerForm.appendChild(playerSubmit)\n    playerForm.addEventListener('submit', event => {\n      event.preventDefault()\n      this.settings.player.acceleration = Number((document.getElementById('acceleration') as HTMLInputElement).value)\n      this.settings.player.maxVelocity = Number((document.getElementById('maxVelocity') as HTMLInputElement).value)\n      this.settings.player.friction = Number((document.getElementById('friction') as HTMLInputElement).value)\n      this.settings.player.fireDelay = Number((document.getElementById('fireDelay') as HTMLInputElement).value)\n      this.clear()\n    })\n  }\n\n  createAudioMenu (): void {\n    let audioMenuId = 'audioMenu'\n    let audioLink = document.createElement('button')\n    let audioDiv = document.createElement('div')\n    let div = document.createElement('div')\n    let audioTitle = document.createElement('h4')\n    let audioLabel = document.createElement('label')\n    let audioSlide = document.createElement('input')\n    EventHandler.registerOnElement(\n      audioLink,\n      ['click', 'touchstart'],\n      event => this.openTab(event, audioMenuId)\n    )\n    audioLink.classList.add('tabLink')\n    audioLink.appendChild(document.createTextNode('Audio'))\n    this.mainMenu.appendChild(audioLink)\n    audioDiv.setAttribute('id', audioMenuId)\n    audioDiv.classList.add('tabContent')\n    div.classList.add('row')\n    audioTitle.appendChild(document.createTextNode('Audio Settings'))\n    audioLabel.appendChild(document.createTextNode('Master Volume:'))\n    audioLabel.setAttribute('for', 'masterVolume')\n    audioSlide.setAttribute('id', 'masterVolume')\n    audioSlide.setAttribute('type', 'range')\n    audioSlide.setAttribute('min', '0')\n    audioSlide.setAttribute('max', '1')\n    audioSlide.setAttribute('step', '0.1')\n    audioSlide.addEventListener('change', event => this.audioManager.adjustMasterVolume(Number(audioSlide.value)))\n    div.appendChild(audioTitle)\n    div.appendChild(audioLabel)\n    div.appendChild(audioSlide)\n    audioDiv.appendChild(div)\n\n    let ambientDiv = document.createElement('div')\n    let ambientLabel = document.createElement('label')\n    let ambientSlide = document.createElement('input')\n    ambientDiv.classList.add('row')\n    ambientLabel.appendChild(document.createTextNode('Ambient Volume:'))\n    ambientLabel.setAttribute('for', 'ambientVolume')\n    ambientSlide.setAttribute('id', 'ambientVolume')\n    ambientSlide.setAttribute('type', 'range')\n    ambientSlide.setAttribute('min', '0')\n    ambientSlide.setAttribute('max', '1')\n    ambientSlide.setAttribute('step', '0.1')\n    ambientSlide.addEventListener('change', event => this.audioManager.adjustAmbientVolume(Number(ambientSlide.value)))\n    ambientDiv.appendChild(ambientLabel)\n    ambientDiv.appendChild(ambientSlide)\n    audioDiv.appendChild(ambientDiv)\n\n    let effectsDiv = document.createElement('div')\n    let effectsLabel = document.createElement('label')\n    let effectsSlide = document.createElement('input')\n    effectsDiv.classList.add('row')\n    effectsLabel.appendChild(document.createTextNode('Effects Volume:'))\n    effectsLabel.setAttribute('for', 'effectsVolume')\n    effectsSlide.setAttribute('id', 'effectsVolume')\n    effectsSlide.setAttribute('type', 'range')\n    effectsSlide.setAttribute('min', '0')\n    effectsSlide.setAttribute('max', '1')\n    effectsSlide.setAttribute('step', '0.1')\n    effectsSlide.addEventListener('change', event => this.audioManager.adjustEffectsVolume(Number(effectsSlide.value)))\n    effectsDiv.appendChild(effectsLabel)\n    effectsDiv.appendChild(effectsSlide)\n    audioDiv.appendChild(effectsDiv)\n    this.element.appendChild(audioDiv)\n  }\n\n  init (): void {\n    this.createMainMenu()\n    this.createKeyboardMenu()\n    this.createPlayerMenu()\n    this.createAudioMenu()\n  }\n\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n    this.init()\n  }\n\n  addPlayerSettingEntry (setting, element): void {\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    let row = document.createElement('div')\n    label.setAttribute('for', setting)\n    label.appendChild(document.createTextNode(setting + ':'))\n    input.setAttribute('id', setting)\n    input.setAttribute('type', 'number')\n    input.setAttribute('name', setting)\n    input.setAttribute('value', this.settings.player[setting])\n    row.classList.add('row')\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  addEntry (setting, element): void {\n    let row = document.createElement('div')\n    let label = document.createElement('label')\n    let input = document.createElement('input')\n    row.classList.add('row')\n    label.setAttribute('for', this.settings.keyBoard[setting])\n    label.appendChild(document.createTextNode(this.settings.keyBoard[setting] + ':'))\n    input.setAttribute('id', this.settings.keyBoard[setting])\n    input.setAttribute('type', 'text')\n    input.setAttribute('name', this.settings.keyBoard[setting])\n    input.setAttribute('value', setting)\n    row.appendChild(label)\n    row.appendChild(input)\n    element.appendChild(row)\n  }\n\n  toggleShow (): void {\n    if (this.showing) {\n      this.element.style.display = 'none'\n      this.showing = false\n    } else {\n      this.element.style.display = 'block'\n      this.showing = true\n    }\n  }\n}\n","import { Actions } from '../lib/client/InputManager'\nimport Dimension from '../lib/geometry/Dimension'\n\n/**\n * Settings class for models applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n  gameSize: Dimension\n\n  constructor (canvas: HTMLCanvasElement) {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART\n    }\n    this.player = {\n      maxVelocity: 150,\n      fireDelay: 15,\n      friction: 0.9,\n      acceleration: 50\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n    this.gameSize = new Dimension(canvas.width, canvas.height)\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n","import Background from '../models/Background'\nimport AssetManager from '../lib/client/AssetManager'\nimport InputManager from '../lib/client/InputManager'\nimport Settings from '../config/Settings'\nimport IGame from '../lib/interfaces/IGame'\nimport IGameState from '../lib/interfaces/IGameState'\nimport { ContextId } from '../enum/ContextId'\n\n/**\n * Space models main class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpaceGame implements IGame {\n  state: IGameState\n  background: Background\n  assetManager: AssetManager\n  inputManager: InputManager\n  settings: Settings\n  canvases\n  contexts: Map<ContextId, CanvasRenderingContext2D>\n\n  /**\n   *\n   * @param {IGameState} state\n   * @param {AssetManager} assetManager\n   * @param {InputManager} inputManager\n   * @param {Settings} settings\n   * @param canvases\n   */\n  constructor (state: IGameState, assetManager: AssetManager, inputManager: InputManager, settings: Settings, canvases) {\n    this.state = state\n    this.assetManager = assetManager\n    this.inputManager = inputManager\n    this.settings = settings\n    this.canvases = canvases\n    this.contexts = new Map<ContextId, CanvasRenderingContext2D>()\n    this.init()\n  }\n\n  /**\n   *\n   */\n  public init (): void {\n    if (this.canvases.background.getContext) {\n      this.contexts.set(ContextId.BACKGROUND, this.canvases.background.getContext('2d'))\n      this.contexts.set(ContextId.SHIP, this.canvases.ship.getContext('2d'))\n      this.contexts.set(ContextId.MAIN, this.canvases.main.getContext('2d'))\n      this.contexts.forEach(context => context.clearRect(0, 0, this.settings.gameSize.width, this.settings.gameSize.height))\n    }\n    this.state.reset()\n  }\n\n  /**\n   *\n   */\n  public clear (): void {\n    this.state.renderables.forEach(renderable => renderable.clear(this.contexts.get(renderable.contextId)))\n  }\n\n  /**\n   *\n   */\n  public render (): void {\n    this.state.renderables.forEach(renderable => renderable.render(this.contexts.get(renderable.contextId)))\n  }\n}\n","export default class Ajax {\n  private static defaults = {\n    url: '',\n    method: 'GET',\n    contentType: 'text/html',\n    async: true,\n    data: null\n  }\n\n  /**\n   * Create and send an XML-HTTP request.\n   * Requires an options object.\n   *\n   * @param opts Possible option properties:\n   * url = url to send the request to.\n   * method = request method. GET, POST, PUT, DELETE.\n   * contentType = specify the content type of the request.\n   * async = boolean flag for async calls. Defaults to true.\n   * data = request body.\n   * @param callback success callback function\n   */\n  public static create (opts, callback): void {\n    let xHttp = new XMLHttpRequest()\n    xHttp.addEventListener('load', () => {\n      callback(xHttp.response)\n    })\n    xHttp.open(\n      opts.method ? opts.method : Ajax.defaults.method,\n      opts.url ? opts.url : Ajax.defaults.url,\n      opts.async ? opts.async : Ajax.defaults.async\n    )\n    if (opts.hasOwnProperty('contentType')) {\n      xHttp.setRequestHeader(\n        'Content-Type',\n        opts.contentType ? opts.contentType : Ajax.defaults.contentType\n      )\n    }\n    if (opts.hasOwnProperty('responseType')) {\n      xHttp.responseType = opts.responseType\n    }\n    if (opts.hasOwnProperty('data') && typeof opts.data === 'object') {\n      opts.data = JSON.stringify(opts.data)\n    }\n    xHttp.send(opts.data ? opts.data : null)\n  }\n}\n","/**\n * Sprite sheet definition.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class SpriteSheet {\n  private _image\n  private _frameWidth\n  private _frameHeight\n  private _framesPerRow\n\n  /**\n   * Constructor. Sets frame dimensions and calculates number of frames.\n   *\n   * @param image\n   * @param frameWidth\n   * @param frameHeight\n   */\n  constructor (image: HTMLImageElement, frameWidth, frameHeight) {\n    this._image = image\n    this._frameWidth = frameWidth\n    this._frameHeight = frameHeight\n    this._framesPerRow = Math.floor(this._image.width / this._frameWidth)\n  }\n\n  /**\n   *\n   * @returns {Image}\n   */\n  get image (): HTMLImageElement {\n    return this._image\n  }\n\n  /**\n   *\n   * @param {Image} image\n   */\n  set image (image: HTMLImageElement) {\n    if (!(image instanceof Image)) {\n      throw new Error('Param tileSetImage must be of type Image!')\n    }\n    this._image = image\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameWidth (): number {\n    return this._frameWidth\n  }\n\n  /**\n   *\n   * @param {number} frameWidth\n   */\n  set frameWidth (frameWidth: number) {\n    this._frameWidth = frameWidth\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get frameHeight (): number {\n    return this._frameHeight\n  }\n\n  /**\n   *\n   * @param {number} frameHeight\n   */\n  set frameHeight (frameHeight: number) {\n    this._frameHeight = frameHeight\n  }\n\n  /**\n   *\n   * @returns {number}\n   */\n  get framesPerRow (): number {\n    return this._framesPerRow\n  }\n\n  /**\n   *\n   * @param {number} framesPerRow\n   */\n  set framesPerRow (framesPerRow: number) {\n    this._framesPerRow = framesPerRow\n  }\n}\n","import AssetManager, { AssetType } from './lib/client/AssetManager'\nimport SpaceGame from './application/SpaceGame'\nimport InputManager from './lib/client/InputManager'\nimport Settings from './config/Settings'\nimport SettingsMenu from './lib/client/SettingsMenu'\nimport EventHandler from './lib/event/EventHandler'\nimport { AssetId } from './enum/AssetId'\nimport AudioManager from './lib/client/AudioManager'\nimport GameLoop from './application/GameLoop'\nimport InvadersState from './application/InvadersState'\nimport InvadersGui from './gui/InvadersGui'\n\nconst audioManager = new AudioManager()\nconst assetManager = new AssetManager(audioManager)\nconst gui = new InvadersGui()\nconst canvases = {\n  background: document.getElementById('background') as HTMLCanvasElement,\n  ship: document.getElementById('ship') as HTMLCanvasElement,\n  main: document.getElementById('main') as HTMLCanvasElement\n}\nconst settings = new Settings(canvases.background)\nconst inputManager = new InputManager(settings)\nconst settingsMenu = new SettingsMenu(document.getElementById('settings-menu'), settings, assetManager, audioManager)\nassetManager.queueDownload(AssetId.BACKGROUND, 'assets/textures/background.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER, 'assets/sprites/ship.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.PLAYER_BULLET, 'assets/sprites/bullet.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY, 'assets/sprites/enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.ENEMY_BULLET, 'assets/sprites/bullet_enemy.png', AssetType.SPRITE)\nassetManager.queueDownload(AssetId.MAIN_THEME, 'assets/audio/kick_shock.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.LASER, 'assets/audio/laser.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.EXPLOSION_I, 'assets/audio/explosion.wav', AssetType.AUDIO)\nassetManager.queueDownload(AssetId.GAME_OVER, 'assets/audio/game_over.wav', AssetType.AUDIO)\nassetManager.downloadAll(() => {\n  const state = new InvadersState(settings, inputManager, assetManager)\n  state.register(gui)\n  const game = new SpaceGame(state, assetManager, inputManager, settings, canvases)\n  const loop = new GameLoop(game)\n  inputManager.register(loop)\n  settingsMenu.init()\n  let gameOver = document.getElementById('game-over')\n  let set = document.getElementById('settings')\n  let shoot = document.getElementById('shoot')\n  let events = ['click', 'touchstart']\n  shoot.addEventListener('touchstart', () => inputManager.shoot())\n  shoot.addEventListener('touchend', () => inputManager.cancelShoot())\n  shoot.addEventListener('contextmenu', event => {\n    event.preventDefault()\n    return false\n  })\n  EventHandler.registerOnElement(gameOver, events, () => loop.restart())\n  EventHandler.registerOnElement(set, events, () => {\n    settingsMenu.toggleShow()\n    loop.togglePause()\n  })\n  loop.start()\n})\n"],"sourceRoot":""}