{"version":3,"sources":["webpack:///webpack/bootstrap d5fa7cdd55850c5c3c7c","webpack:///./src/client/InputManager.ts","webpack:///./src/lib/math/Vector2.ts","webpack:///./src/game/interfaces/CollideAble.ts","webpack:///./src/tetris/game.ts","webpack:///./src/tetris/Tetris.ts","webpack:///./src/tetris/Player.ts","webpack:///./src/tetris/Arena.ts","webpack:///./src/lib/observer/Observable.ts","webpack:///./src/tetris/Piece.ts","webpack:///./src/lib/collision/MatrixCollisionManager.ts","webpack:///./src/client/Settings.ts","webpack:///./src/lib/math/Matrix.ts"],"names":[],"mappings":"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","file":"tetris.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 56);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d5fa7cdd55850c5c3c7c","import Observable from '../lib/observer/Observable'\nimport Settings from './Settings'\n\nexport enum Actions {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n  SHOOT = 'SHOOT',\n  RESTART = 'RESTART',\n  ROTATE_LEFT = 'R-LEFT',\n  ROTATE_RIGHT = 'R-RIGHT'\n}\n\n/**\n * Input manager class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class InputManager extends Observable {\n  inputMap\n  touches\n\n  /**\n   *\n   */\n  constructor (settings: Settings) {\n    super()\n    this.inputMap = settings.keyBoard\n    this.init()\n    this.initializeTouchHandler()\n    this.touches = {\n      start: [],\n      move: []\n    }\n  }\n\n  /**\n   * Register pressed keys and notify observers.\n   */\n  init (): void {\n    window.addEventListener('keydown', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = true\n      this.notify()\n    })\n    window.addEventListener('keyup', event => {\n      let key = event.key !== ' ' ? event.key : 'space'\n      this.state[this.inputMap[key]] = false\n      this.notify()\n    })\n  }\n\n  /**\n   * Maps swipe directions to key press booleans.\n   * Allows touch controls on mobile.\n   */\n  initializeTouchHandler (): void {\n    // Register the event listeners\n    let button = document.getElementById('move')\n    let el = button ? button : window\n    el.addEventListener('touchstart', handleTouchStart, false)\n    el.addEventListener('touchmove', handleTouchMove, false)\n    el.addEventListener('touchend', handleTouchEnd, false)\n    el.addEventListener('contextmenu', event => {\n      event.preventDefault()\n      return false\n    })\n\n    let start = []\n    let move = []\n    let touchstartX = 0\n    let touchstartY = 0\n    let toucheMoveX = 0\n    let touchMoveY = 0\n    let thisInstance = this\n\n    function handleTouchStart (evt): void {\n      evt.preventDefault()\n      start = evt.touches\n      touchstartX = evt.touches[0].pageX\n      touchstartY = evt.touches[0].pageY\n    }\n\n    function handleTouchMove (evt): void {\n      thisInstance.reset()\n      evt.preventDefault()\n      move = evt.changedTouches\n      toucheMoveX = evt.touches[0].pageX\n      touchMoveY = evt.touches[0].pageY\n      for (let i = 0; i < evt.touches.length; i++) {\n        // Positive values equals left. Negative values equals right\n        if (move[i].pageX < start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['a']] = true\n        }\n        if (move[i].pageX > start[i].pageX) {\n          thisInstance.state[thisInstance.inputMap['d']] = true\n        }\n        if (move[i].pageY < start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['w']] = true\n        }\n        if (move[i].pageY > start[i].pageY) {\n          thisInstance.state[thisInstance.inputMap['s']] = true\n        }\n        thisInstance.notify()\n      }\n    }\n\n    function handleTouchEnd (evt): void {\n      evt.preventDefault()\n      thisInstance.reset()\n    }\n  }\n\n  shoot (): void {\n    this.state[this.inputMap['space']] = true\n  }\n\n  cancelShoot (): void {\n    this.state[this.inputMap['space']] = false\n  }\n\n  reset (): void {\n    this.state[this.inputMap['w']] = false\n    this.state[this.inputMap['a']] = false\n    this.state[this.inputMap['s']] = false\n    this.state[this.inputMap['d']] = false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/InputManager.ts","/**\n * 2D vector implementation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Vector2 {\n  private _x: number\n  private _y: number\n\n  /**\n   * Default constructor. Sets x and y values.\n   *\n   * @param {number} x initial x value\n   * @param {number} y initial y value\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Static addVector method to combine two vectors into a new one.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} combined vector\n   */\n  static addVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x + v2.x, v1.y + v2.y)\n  }\n\n  /**\n   * Subtract two vector from each other and put the result into a new vector.\n   *\n   * @param {Vector2} v1 first vector\n   * @param {Vector2} v2 second vector\n   * @returns {Vector2} resulting vector\n   */\n  static subtractVector (v1: Vector2, v2: Vector2): Vector2 {\n    return new Vector2(v1.x - v2.x, v1.y - v2.y)\n  }\n\n  /**\n   * Multiplies a vector with a scalar and returns the resulting vector.\n   *\n   * @param {Vector2} vector initial vector\n   * @param {number} scalar scalar to scale the vector\n   * @returns {Vector2} the resulting vector\n   */\n  static multiply (vector: Vector2, scalar: number): Vector2 {\n    return new Vector2(vector.x * scalar, vector.y * scalar)\n  }\n\n  /**\n   * Divides a vector by a scalar and returns the result in a new vector.\n   * Throws error if trying to divide by zero.\n   *\n   * @param {Vector2} vector vector to divide\n   * @param {number} scalar scalar used to divide vector\n   * @returns {Vector2} resulting vector\n   */\n  static divide (vector: Vector2, scalar: number): Vector2 {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by scalar with value \"0\"')\n    }\n    return new Vector2(vector.x / scalar, vector.y / scalar)\n  }\n\n  /**\n   * Set x value of this vector.\n   *\n   * @param {number} x new x value\n   */\n  set x (x: number) {\n    this._x = x\n  }\n\n  /**\n   * Set y value of this vector.\n   *\n   * @param {number} y new y value\n   */\n  set y (y: number) {\n    this._y = y\n  }\n\n  /**\n   * Getter for x value\n   * @returns {number} x value\n   */\n  get x (): number {\n    return this._x\n  }\n\n  /**\n   * Getter for y value\n   * @returns {number} y value\n   */\n  get y (): number {\n    return this._y\n  }\n\n  /**\n   * Set vector with both x and y values.\n   *\n   * @param {number} x new x value\n   * @param {number} y new y value\n   */\n  set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set vector location to another vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  setVector (vector: Vector2): void {\n    this.x = vector.x\n    this.y = vector.y\n  }\n\n  /**\n   * Add x and y to this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  add (x: number, y: number): void {\n    this.x += x\n    this.y += y\n  }\n\n  /**\n   * Add vector to this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  addVector (vector: Vector2): void {\n    this.x += vector.x\n    this.y += vector.y\n  }\n\n  /**\n   * Subtraxt x and y from this vector.\n   *\n   * @param {number} x x value\n   * @param {number} y y value\n   */\n  subtract (x: number, y: number): void {\n    this.x -= x\n    this.y -= y\n  }\n\n  /**\n   * Subtract a vector from this vector.\n   *\n   * @param {Vector2} vector other vector\n   */\n  subtractVector (vector: Vector2): void {\n    this.x -= vector.x\n    this.y -= vector.y\n  }\n\n  /**\n   * Multiply this vector by scalar.\n   *\n   * @param scalar scalar to multiply the vector\n   */\n  multiply (scalar: number): void {\n    this.x *= scalar\n    this.y *= scalar\n  }\n\n  /**\n   * Divides this vector by a scalar.\n   * Throws error when trying to divide by zero.\n   *\n   * @param {number} scalar scalar used to divide this vector\n   */\n  divide (scalar: number): void {\n    if (scalar === 0) {\n      throw new Error('cannot divide vector by \"0\"')\n    }\n    this.x /= scalar\n    this.y /= scalar\n  }\n\n  /**\n   * Get the magnitude / elementsCount of this vector.\n   *\n   * @returns {number} magnitude / elementsCount of this vector\n   */\n  mag (): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y)\n  }\n\n  /**\n   * Negate the x and y values of this vector and return the result as a new Vector2 object.\n   *\n   * @returns {Vector2}\n   */\n  negative (): Vector2 {\n    return new Vector2(-this.x, -this.y)\n  }\n\n  /**\n   * Normalize the vector.\n   */\n  normalize (): void {\n    let magnitude = this.mag()\n    if (magnitude !== 0) {\n      this.divide(magnitude)\n    }\n  }\n\n  /**\n   * Limit the vector to a maximum elementsCount.\n   *\n   * @param max maximum elementsCount\n   */\n  limit (max): void {\n    if (Math.floor(this.mag()) > max) {\n      this.normalize()\n      this.multiply(max)\n    }\n  }\n\n  /**\n   * Get the distance of this vector to another vector.\n   *\n   * @param {Vector2} vector other vector\n   * @returns {number} calculated distance\n   */\n  distanceTo (vector: Vector2): number {\n    return Math.sqrt(Math.pow(vector.x - this.x, 2) + Math.pow(vector.y - this.y, 2))\n  }\n\n  /**\n   * Get the dot product between this vector and another vector.\n   *\n   * @param {Vector2} vector\n   * @returns {number} the dot product of this vector and the one passed as param.\n   */\n  dot (vector: Vector2): number {\n    return this.x * vector.x + this.y * vector.y\n  }\n\n  floor (): void {\n    this.x = Math.floor(this.x)\n    this.x = Math.floor(this.x)\n  }\n\n  /**\n   * Create a clone of this vector.\n   *\n   * @returns {Vector2} cloned vector\n   */\n  clone (): Vector2 {\n    return new Vector2(this.x, this.y)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Vector2.ts","export enum EntityType {\n  PLAYER = 'ship',\n  ENEMY = 'enemy',\n  ENEMY_BULLET = 'bulletEnemy',\n  PLAYER_BULLET = 'bullet',\n  BACKGROUND = 'background',\n  MAP = 'map',\n  GAME_OVER = 'gameOver',\n  LASER = 'laser',\n  MAIN_THEME = 'shockWave',\n  EXPLOSION_I = 'explosion1',\n  EXPLOSION_II = 'explosion2',\n  BOX = 'box',\n  ARENA = 'arena'\n}\n\n/**\n * Interface for collide able objects.\n */\nexport default interface CollideAble {\n  type: EntityType\n  collidesWith\n  colliding: boolean\n\n  isCollideAbleWith (other: CollideAble): boolean\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/interfaces/CollideAble.ts","import Tetris from './Tetris'\nimport InputManager from '../client/InputManager'\nimport Settings from '../client/Settings'\nimport Piece from './Piece'\n\nconst settings = new Settings()\nconst inputManager = new InputManager(settings)\nconst canvas = document.getElementById('tetris') as HTMLCanvasElement\nconst tetris = new Tetris(canvas)\ntetris.addPlayer('p1', 'Daniel', new Piece(tetris.arena.matrix.mArray[0].length / 2, 0))\ninputManager.register(tetris.players[0])\ntetris.start()\n\n\n\n// WEBPACK FOOTER //\n// ./src/tetris/game.ts","import IGame from '../lib/interfaces/IGame'\nimport Player from './Player'\nimport Arena from './Arena'\nimport Vector2 from '../lib/math/Vector2'\nimport Piece from './Piece'\n\nconst colors = [\n  null,\n  '#FF0D72',\n  '#0DC2FF',\n  '#0DFF72',\n  '#F538FF',\n  '#FF8E0D',\n  '#FFE138',\n  '#3877FF'\n]\n\nexport default class Tetris implements IGame {\n  canvas: HTMLCanvasElement\n  context: CanvasRenderingContext2D\n  playing: boolean\n  lastTime: number\n  players: Player[]\n  arena: Arena\n\n  constructor (canvas: HTMLCanvasElement) {\n    this.canvas = canvas\n    this.context = canvas.getContext('2d')\n    this.playing = false\n    this.arena = new Arena()\n    this.players = []\n    this.lastTime = 0\n    this.context.scale(20, 20)\n  }\n\n  addPlayer (playerId: string, playerName: string, piece: Piece): void {\n    this.players.push(new Player(playerId, playerName, piece, this.arena))\n  }\n\n  start (): void {\n    this.playing = true\n    this.run()\n  }\n\n  drawMatrix (context: CanvasRenderingContext2D, matrix: number[][], offset: Vector2): void {\n    matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          context.fillStyle = colors[value]\n          context.fillRect(x + offset.x,\n            y + offset.y,\n            1, 1)\n        }\n      })\n    })\n  }\n\n  animationCallback (timeStamp: number): void {\n    const deltaTime = timeStamp - this.lastTime\n    this.lastTime = timeStamp\n    this.update(deltaTime)\n    this.render()\n    requestAnimationFrame(this.animationCallback.bind(this))\n  }\n\n  update (deltaTime: number): void {\n    this.players.forEach(player => {\n      player.piece.dropCounter += deltaTime\n      if (player.piece.dropCounter > player.piece.dropInterval) {\n        player.piece.drop(this.arena, player)\n      }\n    })\n  }\n\n  render (): void {\n    this.context.fillStyle = '#000'\n    this.context.fillRect(0, 0, this.canvas.width, this.canvas.height)\n    this.drawMatrix(this.context, this.arena.matrix.mArray, this.arena.postition)\n    this.drawMatrix(this.context, this.players[0].piece.matrix.mArray, this.players[0].piece.position)\n  }\n\n  run (): void {\n    requestAnimationFrame(this.animationCallback.bind(this))\n  }\n\n  stop (): void {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tetris/Tetris.ts","import Piece from './Piece'\nimport Observer from '../lib/observer/Observer'\nimport { Actions } from '../client/InputManager'\nimport Arena from './Arena'\n\nexport default class Player implements Observer {\n  piece: Piece\n  arena: Arena\n  id: string\n  name: string\n  score: number\n  state\n\n  constructor (id: string, name: string, piece: Piece, arena: Arena) {\n    this.id = id\n    this.name = name\n    this.score = 0\n    this.state = {}\n    this.piece = piece\n    this.arena = arena\n  }\n\n  update (state: any): void {\n    this.state = state\n    this.move(this.arena)\n  }\n\n  move (arena: Arena): void {\n    if (this.state[Actions.LEFT]) {\n      this.piece.move(-1)\n    }\n    if (this.state[Actions.RIGHT]) {\n      this.piece.move(1)\n    }\n    if (this.state[Actions.DOWN]) {\n      this.piece.drop(arena, this)\n    }\n    if (this.state[Actions.ROTATE_LEFT]) {\n      this.piece.rotate(arena, this, -1)\n    }\n    if (this.state[Actions.ROTATE_RIGHT]) {\n      this.piece.rotate(arena, this, 1)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tetris/Player.ts","import Matrix from '../lib/math/Matrix'\nimport Player from './Player'\nimport Vector2 from '../lib/math/Vector2'\n\nexport default class Arena {\n  matrix: Matrix\n  postition: Vector2\n\n  constructor () {\n    this.postition = new Vector2(0, 0)\n    this.init(12, 20)\n  }\n\n  init (width: number, height: number): void {\n    const array = []\n    while (height--) {\n      array.push(new Array(width).fill(0))\n    }\n    this.matrix = new Matrix(array)\n  }\n\n  sweep (player: Player): void {\n    let rowCount = 1\n    outer: for (let y = this.matrix.mArray.length - 1; y > 0; --y) {\n      for (let x = 0; x < this.matrix.mArray[y].length; ++x) {\n        if (this.matrix.mArray[y][x] === 0) {\n          continue outer\n        }\n      }\n\n      const row = this.matrix.mArray.splice(y, 1)[0].fill(0)\n      this.matrix.mArray.unshift(row)\n      ++y\n\n      player.score += rowCount * 10\n      rowCount *= 2\n    }\n  }\n\n  merge (player: Player): void {\n    player.piece.matrix.mArray.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          this.matrix.mArray[y + player.piece.position.y][x + player.piece.position.x] = value\n        }\n      })\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tetris/Arena.ts","import Observer from './Observer'\n\n/**\n * Observable class to be extended by a class that should be observed.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Observable {\n  private _observers: Observer[]\n  private _state: any\n\n  constructor () {\n    this._observers = []\n    this._state = {}\n  }\n\n  /**\n   * Register an observer on this observable.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  register (observer: Observer): void {\n    this._observers.push(observer)\n  }\n\n  /**\n   * Remove an observer from this observables observers list.\n   *\n   * @param {Observer} observer Object implementing the Observer interface\n   */\n  unRegister (observer: Observer): void {\n    this._observers = this._observers.filter(obs => {\n      return obs !== observer\n    })\n  }\n\n  /**\n   * Notify all observers.\n   */\n  notify (): void {\n    this._observers.forEach(observer => {\n      observer.update(this._state)\n    })\n  }\n\n  /**\n   *\n   * @returns {Observer[]}\n   */\n  get observers (): Observer[] {\n    return this._observers\n  }\n\n  /**\n   *\n   * @param {Observer[]} observers\n   */\n  set observers (observers: Observer[]) {\n    this._observers = observers\n  }\n\n  /**\n   *\n   * @returns {any}\n   */\n  get state (): any {\n    return this._state\n  }\n\n  /**\n   *\n   * @param {any} state\n   */\n  set state (state: any) {\n    this._state = state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/observer/Observable.ts","import Matrix from '../lib/math/Matrix'\nimport Vector2 from '../lib/math/Vector2'\nimport CollideAble, { EntityType } from '../game/interfaces/CollideAble'\nimport MatrixCollisionManager from '../lib/collision/MatrixCollisionManager'\nimport Arena from './Arena'\nimport Player from './Player'\n\nexport const types = {\n  I: [\n    [0, 1, 0, 0],\n    [0, 1, 0, 0],\n    [0, 1, 0, 0],\n    [0, 1, 0, 0]\n  ],\n  L: [\n    [0, 2, 0],\n    [0, 2, 0],\n    [0, 2, 2]\n  ],\n  J: [\n    [0, 3, 0],\n    [0, 3, 0],\n    [3, 3, 0]\n  ],\n  O: [\n    [4, 4],\n    [4, 4]\n  ],\n  Z: [\n    [5, 5, 0],\n    [0, 5, 5],\n    [0, 0, 0]\n  ],\n  S: [\n    [0, 6, 6],\n    [6, 6, 0],\n    [0, 0, 0]\n  ],\n  T: [\n    [0, 7, 0],\n    [7, 7, 7],\n    [0, 0, 0]\n  ]\n}\n\n/**\n * Tetris piece representation.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Piece implements CollideAble {\n  position: Vector2\n  matrix: Matrix\n  type: EntityType\n  collidesWith\n  colliding: boolean\n  dropCounter: number\n  dropInterval: number\n\n  /**\n   * Default constructor.\n   *\n   * @param {number} x X position\n   * @param {number} y Y position\n   * @param {Matrix} matrix Matrix representing the piece\n   */\n  constructor (x: number, y: number) {\n    this.position = new Vector2(x, y)\n    this.matrix = new Matrix([[0]])\n    this.setRandom()\n    this.collidesWith = []\n    this.collidesWith.push(EntityType.ARENA)\n    this.colliding = false\n    this.dropCounter = 0\n    this.dropInterval = 1000\n  }\n\n  move (offset: number): void {\n    this.position.add(offset, 0)\n  }\n\n  rotate (arena: Arena, player: Player, direction: number): void {\n    const pos = player.piece.position.x\n    let offset = 1\n    this.matrix.rotate(direction)\n\n    while (MatrixCollisionManager.detectCollision(arena, player)) {\n      player.piece.position.x += offset\n      offset = -(offset + (offset > 0 ? 1 : -1))\n      if (offset > player.piece.matrix.mArray[0].length) {\n        player.piece.matrix.rotate(-direction)\n        player.piece.position.x = pos\n        return\n      }\n    }\n  }\n\n  drop (arena: Arena, player: Player): void {\n    this.position.add(0, 1)\n    if (MatrixCollisionManager.detectCollision(arena, player)) {\n      this.position.add(0, -1)\n      arena.merge(player)\n      this.reset(arena, player)\n      arena.sweep(player)\n    }\n    this.dropCounter = 0\n  }\n\n  isCollideAbleWith (other: CollideAble): boolean {\n    return this.collidesWith.includes(other.type.toString())\n  }\n\n  setRandom (): void {\n    const pieces = 'TJLOSZI'\n    this.matrix.set(types[pieces[pieces.length * Math.random() | 0]])\n  }\n\n  reset (arena: Arena, player: Player): void {\n    this.setRandom()\n    this.position.set((arena.matrix.mArray[0].length / 2 | 0) - (this.matrix.mArray[0].length / 2 | 0), 0)\n\n    if (MatrixCollisionManager.detectCollision(arena, player)) {\n      arena.matrix.mArray.forEach(row => row.fill(0))\n      player.score = 0\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tetris/Piece.ts","export default class MatrixCollisionManager {\n  static detectCollision (arena, player): boolean {\n    const arenaMatrix = arena.matrix.mArray\n    const m = player.piece.matrix.mArray\n    const o = player.piece.position\n    for (let y = 0; y < m.length; ++y) {\n      for (let x = 0; x < m[y].length; ++x) {\n        if (m[y][x] !== 0 &&\n          (arenaMatrix[y + o.y] &&\n            arenaMatrix[y + o.y][x + o.x]) !== 0) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/collision/MatrixCollisionManager.ts","import { Actions } from './InputManager'\n\n/**\n * Settings class for game applications.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Settings {\n  keyBoard\n  player\n  audio\n\n  constructor () {\n    this.keyBoard = {\n      'w': Actions.UP,\n      's': Actions.DOWN,\n      'a': Actions.LEFT,\n      'd': Actions.RIGHT,\n      'space': Actions.SHOOT,\n      'r': Actions.RESTART,\n      'q': Actions.ROTATE_LEFT,\n      'e': Actions.ROTATE_RIGHT\n    }\n    this.player = {\n      maxVelocity: 15,\n      fireDelay: 15,\n      friction: 0.7,\n      acceleration: 3\n    }\n    this.audio = {\n      master: 1,\n      ambient: 1,\n      effects: 1\n    }\n  }\n\n  findKey (value): string {\n    return Object.keys(this.keyBoard).filter(key => this.keyBoard[key] === value)[0]\n  }\n\n  setKey (newKey, action: Actions): void {\n    let oldKey = this.findKey(action)\n    if (newKey !== oldKey) {\n      console.log('old:' + oldKey, ' new: ' + newKey + ' value: ' + action)\n      this.keyBoard[newKey] = this.keyBoard[oldKey]\n      delete this.keyBoard[oldKey]\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/Settings.ts","/**\n * Matrix class.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Matrix {\n  rows: number\n  columns: number\n  mArray: number[][]\n\n  /**\n   * Default constructor.\n   *\n   * @param {number[][]} mArray Matrix array\n   */\n  constructor (mArray: number[][]) {\n    this.mArray = mArray\n    this.rows = mArray.length\n    this.columns = mArray[0].length\n  }\n\n  set (array: number[][]): void {\n    const length = array[0].length\n    let valid = true\n    for (let i = 1; i < array.length; i++) {\n      if (array[i].length !== length) {\n        valid = false\n      }\n    }\n    if (valid) {\n      this.rows = array.length\n      this.columns = array[0].length\n      this.mArray = array\n    } else {\n      throw new Error('The passed matrix array is malformed: ' + array)\n    }\n  }\n\n  /**\n   * Add another matrix to this matrix.\n   * The dimension of the other matrix must be equal to this.\n   *\n   * @param {Matrix} matrix\n   */\n  add (matrix: Matrix): void {\n    if (this.equals(matrix)) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          this.mArray[i][j] += matrix.mArray[i][j]\n        }\n      }\n    }\n  }\n\n  /**\n   * Subtract another matrix from this matrix.\n   * The dimension of the other matrix must be equal to this.\n   *\n   * @param {Matrix} matrix\n   */\n  subtract (matrix: Matrix): void {\n    if (this.equals(matrix)) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          this.mArray[i][j] -= matrix.mArray[i][j]\n        }\n      }\n    }\n  }\n\n  /**\n   * Matrix multiplication algorithm.\n   *\n   * @param {Matrix} matrix Another matrix\n   * @returns {Matrix} Resulting matrix\n   */\n  multiply (matrix: Matrix): Matrix {\n    let newArray = []\n    if (this.columns === matrix.rows) {\n      for (let i = 0; i < this.rows; i++) {\n        newArray[i] = []\n        for (let j = 0; j < matrix.columns; j++) {\n          let val = 0\n          for (let k = 0; k < this.columns; k++) {\n            val += this.mArray[i][k] * matrix.mArray[k][j]\n          }\n          newArray[i].push(val)\n        }\n      }\n    } else {\n      return null\n    }\n    return new Matrix(newArray)\n  }\n\n  /**\n   * Multiply this matrix by a scalar.\n   *\n   * @param {number} scalar Scalar by which the matrix is multiplied by\n   */\n  multScalar (scalar: number): void {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.mArray[i][j] *= scalar\n      }\n    }\n  }\n\n  /**\n   * Transposes this matrix.\n   */\n  transpose (): void {\n    let array = []\n    for (let i = 0; i < this.columns; i++) {\n      array[i] = []\n      for (let j = 0; j < this.rows; j++) {\n        array[i][j] = this.mArray[j][i]\n      }\n    }\n\n    this.rows = array.length\n    this.columns = array[0].length\n    this.mArray = array\n  }\n\n  rotate (direction: number): void {\n    this.transpose()\n    if (direction > 0) {\n      this.mArray.forEach(row => row.reverse())\n    } else {\n      this.mArray.reverse()\n    }\n  }\n\n  /**\n   * Check if the row and column length are equal to another matrix's.\n   *\n   * @param {Matrix} other Other Matrix\n   * @returns {boolean} Returns true if the lengths match\n   */\n  equals (other: Matrix): boolean {\n    return other.rows === this.rows && other.columns === this.columns\n  }\n\n  /**\n   * Generate an exact copy of this matrix.\n   *\n   * @returns {Matrix} A copy of this matrix\n   */\n  clone (): Matrix {\n    let array = []\n    this.mArray.forEach(arr => array.push(arr.slice(0)))\n    return new Matrix(Array.from(array))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Matrix.ts"],"sourceRoot":""}