{"version":3,"sources":["webpack:///webpack/bootstrap 5df7be6cc0031ddd3db2","webpack:///./src/algorithm/pathfinding/app.ts","webpack:///./src/algorithm/pathfinding/PathFinding.ts","webpack:///./src/algorithm/pathfinding/gui/Visualization.ts","webpack:///./src/algorithm/pathfinding/Location.ts","webpack:///./src/lib/math/Point.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Location_1","Point_1","PathFinding_1","Visualization_1","algorithm","default","init","grid","Status","START","GOAL","OBSTACLE","console","log","findShortestPath","document","getElementById","[object Object]","this","height","width","j","EMPTY","startPoint","startLocation","queue","found","length","currentLocation","shift","keys","Direction","filter","key","isNaN","Number","forEach","newLocation","exploreDirection","status","path","VALID","push","location","gridSize","top","position","y","left","x","INVALID","BLOCKED","direction","newPath","slice","NORTH","EAST","SOUTH","WEST","Error","getLocationStatus","VISITED","element","row","rowDiv","createElement","classList","add","appendChild","column","cell","firstChild","removeChild","UNKNOWN","Point","point"],"mappings":"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","file":"pathfinding.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5df7be6cc0031ddd3db2","import { Status } from './Location'\nimport Point from '../../lib/math/Point'\nimport PathFinding from './PathFinding'\nimport Visualisation from './gui/Visualization'\n\nconst algorithm = new PathFinding()\nalgorithm.init(8, 4)\nalgorithm.grid[0][0] = Status.START\nalgorithm.grid[2][2] = Status.GOAL\n\nalgorithm.grid[1][1] = Status.OBSTACLE\nalgorithm.grid[1][2] = Status.OBSTACLE\n\nalgorithm.grid[2][1] = Status.OBSTACLE\nalgorithm.grid[3][1] = Status.OBSTACLE\nalgorithm.grid[4][1] = Status.OBSTACLE\n\nconsole.log(algorithm.findShortestPath(new Point(0, 0)))\n\nconst gui = new Visualisation(algorithm.grid, document.getElementById('grid'))\n\ngui.init()\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/pathfinding/app.ts","import Location, { Direction, Status } from './Location'\nimport Point from '../../lib/math/Point'\n\n/**\n * Path finding algorithm class.\n *\n * @version 1.0\n */\nexport default class PathFinding {\n  grid\n\n  constructor () {\n    this.grid = []\n  }\n\n  /**\n   *\n   * @param {number} height\n   * @param {number} width\n   */\n  public init (height: number, width: number): void {\n    for (let i = 0; i < height; i++) {\n      this.grid[i] = []\n      for (let j = 0; j < width; j++) {\n        this.grid[i][j] = Status.EMPTY\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {Point} startPoint\n   * @returns {Location | boolean}\n   */\n  public findShortestPath (startPoint: Point): Location | boolean {\n    let startLocation = new Location(startPoint, [], Status.START)\n    let queue = [startLocation]\n    let found = false\n\n    while (queue.length > 0 && !found) {\n      let currentLocation = queue.shift()\n\n      Object.keys(Direction).filter(key => isNaN(Number(Direction[key]))).forEach(key => {\n        if (!found) {\n          const newLocation = this.exploreDirection(currentLocation, Direction[key], this.grid)\n          if (newLocation.status === Status.GOAL) {\n            found = newLocation.path\n          } else if (newLocation.status === Status.VALID) {\n            queue.push(newLocation)\n          }\n        } else {\n          console.log(found)\n        }\n      })\n    }\n\n    return found\n  }\n\n  /**\n   *\n   * @param {Location} location\n   * @param grid\n   * @returns {Status}\n   */\n  private getLocationStatus (location: Location, grid): Status {\n    let gridSize = grid.length\n    let top = location.position.y\n    let left = location.position.x\n\n    if (left < 0 || left >= gridSize || top < 0 || top >= gridSize) {\n      // location is not on the grid--return false\n      return Status.INVALID\n    } else if (grid[top][left] === Status.GOAL) {\n      return Status.GOAL\n    } else if (grid[top][left] !== Status.EMPTY) {\n      // location is either an obstacle or has been visited\n      return Status.BLOCKED\n    } else {\n      return Status.VALID\n    }\n  }\n\n  /**\n   *\n   * @param {Location} currentLocation\n   * @param {Direction} direction\n   * @param grid\n   * @returns {Location}\n   */\n  private exploreDirection (currentLocation: Location, direction: Direction, grid): Location {\n    let newPath = currentLocation.path.slice()\n    let x = currentLocation.position.x\n    let y = currentLocation.position.y\n\n    newPath.push(direction)\n\n    switch (direction) {\n      case Direction.NORTH:\n        y -= 1\n        break\n      case Direction.EAST:\n        x += 1\n        break\n      case Direction.SOUTH:\n        y += 1\n        break\n      case Direction.WEST:\n        x -= 1\n        break\n      default:\n        throw new Error('Internal Application error.')\n    }\n\n    let newLocation = new Location(new Point(x, y), newPath)\n    newLocation.status = this.getLocationStatus(newLocation, grid)\n\n    // If this new location is valid, mark it as 'Visited'\n    if (newLocation.status === Status.VALID) {\n      grid[newLocation.position.y][newLocation.position.x] = Status.VISITED\n    }\n\n    return newLocation\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/pathfinding/PathFinding.ts","/**\n * Visualisation class\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Visualisation {\n  grid\n  element: HTMLElement\n\n  /**\n   *\n   * @param grid\n   * @param {HTMLElement} element\n   */\n  constructor (grid, element: HTMLElement) {\n    this.grid = grid\n    this.element = element\n  }\n\n  /**\n   *\n   */\n  init (): void {\n    this.grid.forEach((row) => {\n      const rowDiv = document.createElement('div')\n      rowDiv.classList.add('row')\n      this.element.appendChild(rowDiv)\n      row.forEach((column) => {\n        const cell = document.createElement('div')\n        cell.classList.add('cell')\n        cell.classList.add(column)\n        rowDiv.appendChild(cell)\n      })\n    })\n  }\n\n  /**\n   *\n   */\n  clear (): void {\n    while (this.element.firstChild) {\n      this.element.removeChild(this.element.firstChild)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/pathfinding/gui/Visualization.ts","import Point from '../../lib/math/Point'\n\n/**\n * Direction enum.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport enum Direction {\n  NORTH = 'North', EAST = 'East', SOUTH = 'South', WEST = 'West'\n}\n\n/**\n * Location status enum.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport enum Status {\n  START = 'start',\n  VALID = 'valid',\n  INVALID = 'invalid',\n  BLOCKED = 'blocked',\n  UNKNOWN = 'unknown',\n  OBSTACLE = 'obstacle',\n  EMPTY = 'empty',\n  VISITED = 'visited',\n  GOAL = 'goal'\n}\n\n/**\n * Location on the grid.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Location {\n  position: Point\n  path\n  status: Status\n\n  constructor (position: Point, path = [], status = Status.UNKNOWN) {\n    this.position = position\n    this.path = path\n    this.status = status\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/pathfinding/Location.ts","/**\n * Class Representing a Coordinate (x|y) on the canvas.\n *\n * @author Daniel Peters\n * @version 1.0\n */\nexport default class Point {\n  x: number\n  y: number\n\n  /**\n   * Default constructor.\n   *\n   * @param {number} x initializes x value of this point\n   * @param {number} y initializes y value of this point\n   */\n  constructor (x: number, y: number) {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set both x and y values.\n   *\n   * @param {number} x x-axis value\n   * @param {number} y y-axis value\n   */\n  public set (x: number, y: number): void {\n    this.x = x\n    this.y = y\n  }\n\n  /**\n   * Set the x and y values of this point to the values of another point.\n   *\n   * @param {Point} point Other point\n   */\n  public setPoint (point: Point): void {\n    this.x = point.x\n    this.y = point.y\n  }\n\n  /**\n   * Create a another Point object with the same value as this Point.\n   *\n   * @returns {Point} A clone of this point\n   */\n  public clone (): Point {\n    return new Point(this.x, this.y)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Point.ts"],"sourceRoot":""}