{"version":3,"sources":["webpack:///webpack/bootstrap 73076fdd0a47ce4f39d5","webpack:///./src/algorithm/pathfinding/Location.ts","webpack:///./src/algorithm/pathfinding/app.ts","webpack:///./src/algorithm/pathfinding/PathFinding.ts","webpack:///./src/algorithm/pathfinding/gui/Visualization.ts","webpack:///./src/lib/math/Point.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Direction","Status","default","[object Object]","position","path","status","UNKNOWN","this","Location_1","Point_1","PathFinding_1","Visualization_1","algorithm","init","grid","START","GOAL","OBSTACLE","console","log","findShortestPath","document","getElementById","height","width","j","EMPTY","startPoint","startLocation","queue","found","length","currentLocation","shift","keys","filter","key","isNaN","Number","forEach","newLocation","exploreDirection","VALID","push","location","gridSize","top","y","left","x","INVALID","BLOCKED","direction","newPath","slice","NORTH","EAST","SOUTH","WEST","Error","getLocationStatus","VISITED","element","row","rowDiv","createElement","classList","add","appendChild","column","cell","firstChild","removeChild","Point","point"],"mappings":"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","file":"pathfinding.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 46);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73076fdd0a47ce4f39d5","import Point from '../../lib/math/Point'\r\n\r\n/**\r\n * Direction enum.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport enum Direction {\r\n  NORTH = 'North', EAST = 'East', SOUTH = 'South', WEST = 'West'\r\n}\r\n\r\n/**\r\n * Location status enum.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport enum Status {\r\n  START = 'start',\r\n  VALID = 'valid',\r\n  INVALID = 'invalid',\r\n  BLOCKED = 'blocked',\r\n  UNKNOWN = 'unknown',\r\n  OBSTACLE = 'obstacle',\r\n  EMPTY = 'empty',\r\n  VISITED = 'visited',\r\n  GOAL = 'goal'\r\n}\r\n\r\n/**\r\n * Location on the grid.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Location {\r\n  position: Point\r\n  path\r\n  status: Status\r\n\r\n  constructor (position: Point, path = [], status = Status.UNKNOWN) {\r\n    this.position = position\r\n    this.path = path\r\n    this.status = status\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/pathfinding/Location.ts","import { Status } from './Location'\r\nimport Point from '../../lib/math/Point'\r\nimport PathFinding from './PathFinding'\r\nimport Visualisation from './gui/Visualization'\r\n\r\nconst algorithm = new PathFinding()\r\nalgorithm.init(8, 4)\r\nalgorithm.grid[0][0] = Status.START\r\nalgorithm.grid[2][2] = Status.GOAL\r\n\r\nalgorithm.grid[1][1] = Status.OBSTACLE\r\nalgorithm.grid[1][2] = Status.OBSTACLE\r\n\r\nalgorithm.grid[2][1] = Status.OBSTACLE\r\nalgorithm.grid[3][1] = Status.OBSTACLE\r\nalgorithm.grid[4][1] = Status.OBSTACLE\r\n\r\nconsole.log(algorithm.findShortestPath(new Point(0, 0)))\r\n\r\nconst gui = new Visualisation(algorithm.grid, document.getElementById('grid'))\r\n\r\ngui.init()\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/pathfinding/app.ts","import Location, { Direction, Status } from './Location'\r\nimport Point from '../../lib/math/Point'\r\n\r\n/**\r\n * Path finding algorithm class.\r\n *\r\n * @version 1.0\r\n */\r\nexport default class PathFinding {\r\n  grid\r\n\r\n  constructor () {\r\n    this.grid = []\r\n  }\r\n\r\n  public init (height: number, width: number): void {\r\n    for (let i = 0; i < height; i++) {\r\n      this.grid[i] = []\r\n      for (let j = 0; j < width; j++) {\r\n        this.grid[i][j] = Status.EMPTY\r\n      }\r\n    }\r\n  }\r\n\r\n  public findShortestPath (startPoint: Point): Location | boolean {\r\n    let startLocation = new Location(startPoint, [], Status.START)\r\n    let queue = [startLocation]\r\n    let found = false\r\n\r\n    while (queue.length > 0 && !found) {\r\n      let currentLocation = queue.shift()\r\n\r\n      Object.keys(Direction).filter(key => isNaN(Number(Direction[key]))).forEach(key => {\r\n        if (!found) {\r\n          const newLocation = this.exploreDirection(currentLocation, Direction[key], this.grid)\r\n          if (newLocation.status === Status.GOAL) {\r\n            found = newLocation.path\r\n          } else if (newLocation.status === Status.VALID) {\r\n            queue.push(newLocation)\r\n          }\r\n        } else {\r\n          console.log(found)\r\n        }\r\n      })\r\n    }\r\n\r\n    return found\r\n  }\r\n\r\n  private getLocationStatus (location: Location, grid): Status {\r\n    let gridSize = grid.length\r\n    let top = location.position.y\r\n    let left = location.position.x\r\n\r\n    if (left < 0 || left >= gridSize || top < 0 || top >= gridSize) {\r\n      // location is not on the grid--return false\r\n      return Status.INVALID\r\n    } else if (grid[top][left] === Status.GOAL) {\r\n      return Status.GOAL\r\n    } else if (grid[top][left] !== Status.EMPTY) {\r\n      // location is either an obstacle or has been visited\r\n      return Status.BLOCKED\r\n    } else {\r\n      return Status.VALID\r\n    }\r\n  }\r\n\r\n  private exploreDirection (currentLocation: Location, direction: Direction, grid): Location {\r\n    let newPath = currentLocation.path.slice()\r\n    let x = currentLocation.position.x\r\n    let y = currentLocation.position.y\r\n\r\n    newPath.push(direction)\r\n\r\n    switch (direction) {\r\n      case Direction.NORTH:\r\n        y -= 1\r\n        break\r\n      case Direction.EAST:\r\n        x += 1\r\n        break\r\n      case Direction.SOUTH:\r\n        y += 1\r\n        break\r\n      case Direction.WEST:\r\n        x -= 1\r\n        break\r\n      default:\r\n        throw new Error('Internal Application error.')\r\n    }\r\n\r\n    let newLocation = new Location(new Point(x, y), newPath)\r\n    newLocation.status = this.getLocationStatus(newLocation, grid)\r\n\r\n    // If this new location is valid, mark it as 'Visited'\r\n    if (newLocation.status === Status.VALID) {\r\n      grid[newLocation.position.y][newLocation.position.x] = Status.VISITED\r\n    }\r\n\r\n    return newLocation\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/pathfinding/PathFinding.ts","/**\r\n * Visualisation class\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Visualisation {\r\n  grid\r\n  element: HTMLElement\r\n\r\n  /**\r\n   *\r\n   * @param grid\r\n   * @param {HTMLElement} element\r\n   */\r\n  constructor (grid, element: HTMLElement) {\r\n    this.grid = grid\r\n    this.element = element\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  init (): void {\r\n    this.grid.forEach((row) => {\r\n      const rowDiv = document.createElement('div')\r\n      rowDiv.classList.add('row')\r\n      this.element.appendChild(rowDiv)\r\n      row.forEach((column) => {\r\n        const cell = document.createElement('div')\r\n        cell.classList.add('cell')\r\n        cell.classList.add(column)\r\n        rowDiv.appendChild(cell)\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  clear (): void {\r\n    while (this.element.firstChild) {\r\n      this.element.removeChild(this.element.firstChild)\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/algorithm/pathfinding/gui/Visualization.ts","/**\r\n * Class Representing a Coordinate (x|y) on the canvas.\r\n *\r\n * @author Daniel Peters\r\n * @version 1.0\r\n */\r\nexport default class Point {\r\n  x: number\r\n  y: number\r\n\r\n  /**\r\n   * Default constructor.\r\n   *\r\n   * @param {number} x initializes x value of this point\r\n   * @param {number} y initializes y value of this point\r\n   */\r\n  constructor (x: number, y: number) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Set both x and y values.\r\n   *\r\n   * @param {number} x x-axis value\r\n   * @param {number} y y-axis value\r\n   */\r\n  public set (x: number, y: number): void {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  /**\r\n   * Set the x and y values of this point to the values of another point.\r\n   *\r\n   * @param {Point} point Other point\r\n   */\r\n  public setPoint (point: Point): void {\r\n    this.x = point.x\r\n    this.y = point.y\r\n  }\r\n\r\n  /**\r\n   * Create a another Point object with the same value as this Point.\r\n   *\r\n   * @returns {Point} A clone of this point\r\n   */\r\n  public clone (): Point {\r\n    return new Point(this.x, this.y)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/math/Point.ts"],"sourceRoot":""}